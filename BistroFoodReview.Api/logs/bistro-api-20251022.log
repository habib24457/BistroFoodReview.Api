2025-10-22 15:08:10.824 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:08:10.909 +02:00 [DBG] Hosting starting
2025-10-22 15:08:10.938 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:08:10.940 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:08:10.947 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:08:10.947 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:08:10.947 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:08:10.947 +02:00 [INF] Hosting environment: Development
2025-10-22 15:08:10.947 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:08:10.948 +02:00 [DBG] Hosting started
2025-10-22 15:08:11.084 +02:00 [DBG] Connection id "0HNGHDG6L56AT" received FIN.
2025-10-22 15:08:11.088 +02:00 [DBG] Connection id "0HNGHDG6L56AT" accepted.
2025-10-22 15:08:11.088 +02:00 [DBG] Connection id "0HNGHDG6L56AT" started.
2025-10-22 15:08:11.095 +02:00 [DBG] Connection id "0HNGHDG6L56AT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:08:11.102 +02:00 [DBG] Connection id "0HNGHDG6L56AT" disconnecting.
2025-10-22 15:08:11.104 +02:00 [DBG] Connection id "0HNGHDG6L56AT" stopped.
2025-10-22 15:08:12.020 +02:00 [DBG] Connection id "0HNGHDG6L56AU" accepted.
2025-10-22 15:08:12.023 +02:00 [DBG] Connection id "0HNGHDG6L56AU" started.
2025-10-22 15:08:12.482 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:08:12.501 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:08:12.501 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:08:12.518 +02:00 [DBG] Connection id "0HNGHDG6L56AU" completed keep alive response.
2025-10-22 15:08:12.520 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 38.9726ms
2025-10-22 15:08:12.735 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:08:12.736 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:08:12.736 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:08:12.746 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:08:12.747 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:08:12.811 +02:00 [DBG] Connection id "0HNGHDG6L56AU" completed keep alive response.
2025-10-22 15:08:12.811 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 76.1061ms
2025-10-22 15:08:27.541 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - null null
2025-10-22 15:08:27.557 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/ratings'
2025-10-22 15:08:27.561 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/ratings' is valid for the request path '/api/Rating/ratings'
2025-10-22 15:08:27.567 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:08:27.577 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:08:27.583 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:08:27.602 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:08:27.603 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:08:27.603 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:08:27.604 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:08:27.604 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:08:27.604 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:08:27.605 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:08:27.770 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:08:27.901 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:08:27.902 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:08:27.907 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:08:27.909 +02:00 [INF] Fetching all ratings
2025-10-22 15:08:28.297 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:08:28.439 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:08:28.463 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 15:08:28.519 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:08:28.520 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:08:28.520 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 15:08:28.690 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetInt32(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:08:28.723 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:08:28.756 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 15:08:28.759 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:28.890 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:28.895 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:08:28.900 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:08:28.901 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:08:28.906 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:08:28.941 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:08:28.994 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.020 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.024 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.030 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.031 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.034 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.034 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.042 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.042 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.045 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:29.051 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 105ms reading results.
2025-10-22 15:08:29.054 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:29.058 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 15:08:29.068 +02:00 [INF] Retrieved 5 ratings from the database
2025-10-22 15:08:29.071 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1161.1086ms.
2025-10-22 15:08:29.075 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:08:29.077 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:08:29.077 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:08:29.077 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:08:29.077 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:08:29.077 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:08:29.112 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 1505.3815ms
2025-10-22 15:08:29.113 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:08:29.116 +02:00 [INF] HTTP GET /api/Rating/ratings responded 200 in 1531.3049 ms
2025-10-22 15:08:29.120 +02:00 [DBG] Connection id "0HNGHDG6L56AU" completed keep alive response.
2025-10-22 15:08:29.124 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:08:29.129 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:29.131 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:08:29.132 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - 200 null application/json; charset=utf-8 1591.5069ms
2025-10-22 15:08:54.885 +02:00 [INF] Application is shutting down...
2025-10-22 15:08:54.891 +02:00 [DBG] Hosting stopping
2025-10-22 15:08:54.925 +02:00 [DBG] Connection id "0HNGHDG6L56AU" disconnecting.
2025-10-22 15:08:54.930 +02:00 [DBG] Connection id "0HNGHDG6L56AU" stopped.
2025-10-22 15:08:54.931 +02:00 [DBG] Connection id "0HNGHDG6L56AU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:08:54.937 +02:00 [DBG] Hosting stopped
2025-10-22 15:14:53.412 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:14:53.475 +02:00 [DBG] Hosting starting
2025-10-22 15:14:53.501 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:14:53.504 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:14:53.510 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:14:53.510 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:14:53.510 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:14:53.511 +02:00 [INF] Hosting environment: Development
2025-10-22 15:14:53.511 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:14:53.511 +02:00 [DBG] Hosting started
2025-10-22 15:14:53.996 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" received FIN.
2025-10-22 15:14:53.998 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" accepted.
2025-10-22 15:14:53.998 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" started.
2025-10-22 15:14:54.002 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:14:54.005 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" disconnecting.
2025-10-22 15:14:54.007 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" stopped.
2025-10-22 15:14:54.884 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" accepted.
2025-10-22 15:14:54.885 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" started.
2025-10-22 15:14:55.577 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:14:55.588 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:14:55.588 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:14:55.607 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:14:55.608 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 31.7686ms
2025-10-22 15:14:55.891 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:14:55.892 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:14:55.892 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:14:55.907 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:14:55.907 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:14:56.013 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:14:56.013 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 122.2837ms
2025-10-22 15:15:10.227 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 15:15:10.238 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 15:15:10.239 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 15:15:10.239 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:15:10.246 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:15:10.249 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:15:10.268 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 15:15:10.269 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:15:10.270 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:15:10.271 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:15:10.271 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:15:10.271 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:15:10.272 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:15:10.371 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:15:10.474 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:15:10.474 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:15:10.479 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:15:10.829 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:15:10.976 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:15:10.991 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:15:11.150 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:15:11.173 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:15:11.203 +02:00 [DBG] Created DbConnection. (28ms).
2025-10-22 15:15:11.205 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.311 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.316 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:15:11.321 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:15:11.322 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:15:11.328 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:15:11.354 +02:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:15:11.404 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:11.414 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:11.417 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.423 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 65ms reading results.
2025-10-22 15:15:11.427 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.431 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 15:15:11.442 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 960.0967ms.
2025-10-22 15:15:11.445 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:15:11.447 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:15:11.447 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:15:11.447 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:15:11.448 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:15:11.448 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:15:11.478 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 1204.1637ms
2025-10-22 15:15:11.478 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:15:11.481 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 1230.4111 ms
2025-10-22 15:15:11.484 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:15:11.487 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:15:11.492 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.494 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:15:11.495 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 1268.2036ms
2025-10-22 15:15:50.232 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:15:50.235 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:15:50.236 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:15:50.237 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:15:50.239 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:15:50.249 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:15:50.250 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:15:50.253 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:15:50.253 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:15:50.284 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:15:50.301 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:15:50.343 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:15:50.344 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:15:50.429 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:15:50.453 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:15:50.454 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:15:50.454 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.454 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.455 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:15:50.455 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:15:50.459 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:15:50.467 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:15:50.495 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:15:50.500 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.514 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.518 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.526 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.531 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 35ms reading results.
2025-10-22 15:15:50.531 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.531 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:15:50.538 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 284.194ms.
2025-10-22 15:15:50.538 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:15:50.538 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:15:50.538 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:15:50.538 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:15:50.538 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:15:50.538 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:15:50.551 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 300.9082ms
2025-10-22 15:15:50.551 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:15:50.551 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 312.1454 ms
2025-10-22 15:15:50.552 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:15:50.552 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:15:50.552 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.553 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:15:50.553 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 321.355ms
2025-10-22 15:16:22.014 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 15:16:22.016 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:16:22.016 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:16:22.017 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:22.021 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:16:22.022 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:16:22.022 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:16:22.023 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:22.035 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:22.041 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:22.048 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:22.053 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:16:22.054 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:16:22.063 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000005": started reading request body.
2025-10-22 15:16:22.063 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000005": done reading request body.
2025-10-22 15:16:22.078 +02:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to System.Int32. Path: $.stars | LineNumber: 3 | BytePositionInLine: 14.
2025-10-22 15:16:22.078 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:22.078 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:22.079 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:22.089 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:22.091 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Invalid"
2025-10-22 15:16:22.094 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 57.8702ms
2025-10-22 15:16:22.094 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:22.095 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 71.3200 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 58
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 15:16:22.117 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 58
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 15:16:22.126 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:16:22.126 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 500 null text/plain; charset=utf-8 111.8541ms
2025-10-22 15:16:36.083 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 15:16:36.086 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:16:36.087 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:16:36.088 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:36.089 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:16:36.089 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:16:36.089 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:16:36.090 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:36.090 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:36.094 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:36.094 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:36.094 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:16:36.095 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:16:36.095 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000006": started reading request body.
2025-10-22 15:16:36.095 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000006": done reading request body.
2025-10-22 15:16:36.098 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 15:16:36.099 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:36.099 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:36.099 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:36.104 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:36.105 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:16:36.150 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:16:36.152 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 15:16:36.153 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:16:36.153 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:16:36.172 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:16:36.180 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:16:36.180 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:16:36.180 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.180 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.180 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:16:36.180 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.181 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.181 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:16:36.195 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:16:36.195 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.195 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.195 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.198 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.198 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:16:36.198 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.198 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:16:36.200 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 15:16:36.201 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:16:36.207 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetInt32(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:16:36.215 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.215 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.215 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:16:36.215 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.215 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.215 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:16:36.235 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:16:36.236 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.236 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.236 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.237 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.237 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:16:36.237 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.237 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:16:36.237 +02:00 [WRN] You have already rated this meal option today.
2025-10-22 15:16:36.238 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 146.4826ms
2025-10-22 15:16:36.238 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:36.238 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 148.0620 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 15:16:36.240 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 15:16:36.243 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:16:36.243 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:16:36.243 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.243 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:16:36.244 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 160.8128ms
2025-10-22 15:16:49.883 +02:00 [INF] Application is shutting down...
2025-10-22 15:16:49.887 +02:00 [DBG] Hosting stopping
2025-10-22 15:16:49.909 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" disconnecting.
2025-10-22 15:16:49.913 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" stopped.
2025-10-22 15:16:49.913 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:16:49.923 +02:00 [DBG] Hosting stopped
2025-10-22 15:20:57.368 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:20:57.738 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:20:57.864 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:20:57.874 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()'
2025-10-22 15:20:57.988 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId
        FROM Ratings AS r) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId
        FROM Ratings AS r, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.004 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:20:58.025 +02:00 [DBG] Created DbConnection. (21ms).
2025-10-22 15:20:58.028 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.235 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.239 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.242 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:20:58.242 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:20:58.245 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId"
FROM "Ratings" AS r
2025-10-22 15:20:58.264 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId"
FROM "Ratings" AS r
2025-10-22 15:20:58.302 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.315 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.317 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.317 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.317 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.318 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.322 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 54ms reading results.
2025-10-22 15:20:58.323 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.325 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:20:58.326 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()'
2025-10-22 15:20:58.329 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.330 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.331 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.331 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.331 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.331 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.331 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:20:58.332 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:20:58.339 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.343 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.346 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-10-22 15:20:58.347 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.347 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.347 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 15:20:58.349 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.350 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.350 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.350 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.350 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.350 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.350 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:20:58.353 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:20:58.354 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.356 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:20:58.356 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.356 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.357 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:20:58.358 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.360 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.360 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.360 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.360 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.360 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.360 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:20:58.361 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:20:58.362 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.365 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:20:58.365 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.365 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.365 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:20:58.366 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:20:58.378 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:20:58.412 +02:00 [DBG] Executing 16 update commands as a batch.
2025-10-22 15:20:58.414 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.414 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.415 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:20:58.419 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:20:58.421 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.421 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.425 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:20:58.427 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Meals"
WHERE "Id" = @p0;
DELETE FROM "Meals"
WHERE "Id" = @p1;
DELETE FROM "Ratings"
WHERE "Id" = @p2;
DELETE FROM "Ratings"
WHERE "Id" = @p3;
DELETE FROM "Ratings"
WHERE "Id" = @p4;
DELETE FROM "Ratings"
WHERE "Id" = @p5;
DELETE FROM "Ratings"
WHERE "Id" = @p6;
DELETE FROM "Meals"
WHERE "Id" = @p7;
DELETE FROM "Meals"
WHERE "Id" = @p8;
DELETE FROM "Meals"
WHERE "Id" = @p9;
DELETE FROM "Meals"
WHERE "Id" = @p10;
DELETE FROM "Users"
WHERE "Id" = @p11;
DELETE FROM "Users"
WHERE "Id" = @p12;
DELETE FROM "MealOptions"
WHERE "Id" = @p13;
DELETE FROM "MealOptions"
WHERE "Id" = @p14;
DELETE FROM "MealOptions"
WHERE "Id" = @p15;
2025-10-22 15:20:58.454 +02:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Meals"
WHERE "Id" = @p0;
DELETE FROM "Meals"
WHERE "Id" = @p1;
DELETE FROM "Ratings"
WHERE "Id" = @p2;
DELETE FROM "Ratings"
WHERE "Id" = @p3;
DELETE FROM "Ratings"
WHERE "Id" = @p4;
DELETE FROM "Ratings"
WHERE "Id" = @p5;
DELETE FROM "Ratings"
WHERE "Id" = @p6;
DELETE FROM "Meals"
WHERE "Id" = @p7;
DELETE FROM "Meals"
WHERE "Id" = @p8;
DELETE FROM "Meals"
WHERE "Id" = @p9;
DELETE FROM "Meals"
WHERE "Id" = @p10;
DELETE FROM "Users"
WHERE "Id" = @p11;
DELETE FROM "Users"
WHERE "Id" = @p12;
DELETE FROM "MealOptions"
WHERE "Id" = @p13;
DELETE FROM "MealOptions"
WHERE "Id" = @p14;
DELETE FROM "MealOptions"
WHERE "Id" = @p15;
2025-10-22 15:20:58.456 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.456 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 15:20:58.458 +02:00 [DBG] Committing transaction.
2025-10-22 15:20:58.461 +02:00 [DBG] Committed transaction.
2025-10-22 15:20:58.461 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.462 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.462 +02:00 [DBG] Disposing transaction.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.469 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 16 entities written to the database.
2025-10-22 15:20:58.485 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:20:58.504 +02:00 [DBG] Hosting starting
2025-10-22 15:20:58.531 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:20:58.532 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:20:58.539 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:20:58.539 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:20:58.539 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:20:58.539 +02:00 [INF] Hosting environment: Development
2025-10-22 15:20:58.539 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:20:58.539 +02:00 [DBG] Hosting started
2025-10-22 15:20:58.930 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" received FIN.
2025-10-22 15:20:58.933 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" accepted.
2025-10-22 15:20:58.934 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" started.
2025-10-22 15:20:58.937 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:20:58.938 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" disconnecting.
2025-10-22 15:20:58.940 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" stopped.
2025-10-22 15:21:00.016 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" accepted.
2025-10-22 15:21:00.018 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" started.
2025-10-22 15:21:00.427 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:21:00.443 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:21:00.444 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:21:00.462 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" completed keep alive response.
2025-10-22 15:21:00.463 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 37.7003ms
2025-10-22 15:21:00.657 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:21:00.657 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:21:00.657 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:21:00.663 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:21:00.664 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:21:00.726 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" completed keep alive response.
2025-10-22 15:21:00.727 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 69.6968ms
2025-10-22 15:21:05.254 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:21:05.283 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:21:05.285 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:21:05.595 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:21:05.618 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:21:05.622 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:21:05.639 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:21:05.640 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:21:05.641 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:21:05.641 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:21:05.642 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:21:05.642 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:21:05.643 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:21:05.721 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:21:05.721 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:21:05.724 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:21:05.752 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:21:05.760 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 15:21:05.794 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:21:05.845 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:21:05.855 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:21:05.855 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:21:05.856 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.857 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.858 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:21:05.858 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:21:05.858 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:21:05.858 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:21:05.869 +02:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:21:05.872 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.873 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:21:05.874 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.875 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:21:05.884 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 157.8997ms.
2025-10-22 15:21:05.887 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:21:05.889 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:21:05.889 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:21:05.889 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:21:05.889 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:21:05.889 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:21:05.922 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 277.9217ms
2025-10-22 15:21:05.923 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:21:05.926 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 302.3778 ms
2025-10-22 15:21:05.933 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" completed keep alive response.
2025-10-22 15:21:05.937 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:21:05.940 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.944 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:21:05.946 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 693.978ms
2025-10-22 15:21:10.492 +02:00 [INF] Application is shutting down...
2025-10-22 15:21:10.496 +02:00 [DBG] Hosting stopping
2025-10-22 15:21:10.532 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" disconnecting.
2025-10-22 15:21:10.536 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" stopped.
2025-10-22 15:21:10.537 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:21:10.550 +02:00 [DBG] Hosting stopped
2025-10-22 15:21:10.561 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:21:10.564 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:10.565 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:22:14.909 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:22:15.095 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:22:15.167 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:22:15.408 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:22:27.934 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:22:28.121 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:22:28.192 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:22:28.203 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:22:28.217 +02:00 [DBG] Created DbConnection. (12ms).
2025-10-22 15:22:28.220 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.282 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.284 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:22:28.287 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:22:28.288 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:22:28.291 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.308 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.322 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.326 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-10-22 15:22:28.327 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.328 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:22:28.331 +02:00 [DBG] Migrating using database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.332 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.333 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.347 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.347 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.349 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:22:28.349 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.349 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.392 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.392 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.392 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.392 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-10-22 15:22:28.396 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-10-22 15:22:28.398 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:22:28.399 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:22:28.399 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-10-22 15:22:28.399 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.400 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.400 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.400 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-10-22 15:22:28.403 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-10-22 15:22:28.403 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:22:28.403 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:22:28.403 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:22:28.404 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.404 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.404 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.404 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:22:28.408 +02:00 [INF] Applying migration '20251022132215_ChangeStarsToDouble'.
2025-10-22 15:22:28.420 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.420 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.420 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.420 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Ratings" ALTER COLUMN "Stars" TYPE double precision;
2025-10-22 15:22:28.448 +02:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Ratings" ALTER COLUMN "Stars" TYPE double precision;
2025-10-22 15:22:28.449 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.449 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.449 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.449 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20251022132215_ChangeStarsToDouble', '9.0.10');
2025-10-22 15:22:28.449 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20251022132215_ChangeStarsToDouble', '9.0.10');
2025-10-22 15:22:28.450 +02:00 [DBG] Committing transaction.
2025-10-22 15:22:28.458 +02:00 [DBG] Committed transaction.
2025-10-22 15:22:28.459 +02:00 [DBG] Disposing transaction.
2025-10-22 15:22:28.459 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.459 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:22:28.460 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:22:28.461 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.461 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:20.617 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:25:21.010 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:25:21.147 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:21.161 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:25:21.288 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:21.305 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:21.327 +02:00 [DBG] Created DbConnection. (21ms).
2025-10-22 15:25:21.330 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.071 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.119 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.123 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:25:23.124 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:25:23.127 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:25:23.208 +02:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:25:23.232 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.238 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-10-22 15:25:23.240 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.242 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:25:23.285 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.286 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.286 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.287 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.289 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.293 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.321 +02:00 [DBG] Executing 3 update commands as a batch.
2025-10-22 15:25:23.322 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.322 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.323 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.325 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.326 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.326 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.328 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:25:23.331 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Guid), @p3='?', @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p0, @p1);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p2, @p3);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p4, @p5);
2025-10-22 15:25:23.435 +02:00 [INF] Executed DbCommand (107ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Guid), @p3='?', @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p0, @p1);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p2, @p3);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p4, @p5);
2025-10-22 15:25:23.437 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.437 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:25:23.439 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.490 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.490 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.490 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.491 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.494 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.494 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.494 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.495 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 3 entities written to the database.
2025-10-22 15:25:23.495 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:25:23.497 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:23.498 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.498 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.498 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.498 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.498 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.498 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:25:23.521 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:25:23.521 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.522 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.522 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.522 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.527 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.527 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.527 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.527 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.529 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.529 +02:00 [DBG] Executing 2 update commands as a batch.
2025-10-22 15:25:23.530 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.530 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.530 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.530 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.530 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.530 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.530 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.530 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = Guid), @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p0, @p1, @p2);
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p3, @p4, @p5);
2025-10-22 15:25:23.575 +02:00 [INF] Executed DbCommand (45ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = Guid), @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p0, @p1, @p2);
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p3, @p4, @p5);
2025-10-22 15:25:23.575 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.575 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.575 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.575 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.575 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.576 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.576 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.576 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.576 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.576 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 2 entities written to the database.
2025-10-22 15:25:23.577 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:25:23.578 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:23.579 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.579 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.579 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.579 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.579 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.579 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:25:23.602 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:25:23.603 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.603 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.603 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.603 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.604 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 15:25:23.628 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:23.631 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.631 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.631 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.631 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.632 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.632 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:23.632 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:23.633 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.634 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:25:23.634 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.634 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.643 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.648 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.649 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.651 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.653 +02:00 [DBG] Executing 3 update commands as a batch.
2025-10-22 15:25:23.653 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.653 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.653 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.653 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.653 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.653 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.653 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.653 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p8, @p9, @p10, @p11);
2025-10-22 15:25:23.746 +02:00 [INF] Executed DbCommand (92ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p8, @p9, @p10, @p11);
2025-10-22 15:25:23.746 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.746 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.746 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.747 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.747 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.747 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.747 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.747 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.747 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.747 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.748 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 3 entities written to the database.
2025-10-22 15:25:23.748 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:25:23.749 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:23.750 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.750 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.750 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.750 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.750 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.750 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:25:23.814 +02:00 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:25:23.815 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.815 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.815 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.815 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.815 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()'
2025-10-22 15:25:23.819 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:23.820 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.820 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.820 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.820 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.820 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.820 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:25:23.821 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:25:23.821 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.821 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.821 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.821 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.822 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:25:23.824 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:23.826 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.826 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.826 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.826 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.826 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.826 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:25:23.827 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:25:23.827 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.827 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.827 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.827 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.834 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.837 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.839 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.839 +02:00 [DBG] Executing 4 update commands as a batch.
2025-10-22 15:25:23.839 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.839 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.840 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.840 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.840 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.840 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.840 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.840 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Double), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Double), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Double), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p8, @p9, @p10, @p11);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p12, @p13, @p14, @p15);
2025-10-22 15:25:23.871 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Double), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Double), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Double), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p8, @p9, @p10, @p11);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p12, @p13, @p14, @p15);
2025-10-22 15:25:23.871 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.871 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.871 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.872 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.872 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.872 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.872 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 4 entities written to the database.
2025-10-22 15:25:23.873 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:23.874 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.875 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.893 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:25:23.912 +02:00 [DBG] Hosting starting
2025-10-22 15:25:23.937 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:25:23.938 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:25:23.944 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:25:23.944 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:25:23.944 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:25:23.944 +02:00 [INF] Hosting environment: Development
2025-10-22 15:25:23.944 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:25:23.944 +02:00 [DBG] Hosting started
2025-10-22 15:25:24.342 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" received FIN.
2025-10-22 15:25:24.347 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" accepted.
2025-10-22 15:25:24.347 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" started.
2025-10-22 15:25:24.351 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:25:24.353 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" disconnecting.
2025-10-22 15:25:24.354 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" stopped.
2025-10-22 15:25:25.303 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" accepted.
2025-10-22 15:25:25.306 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" started.
2025-10-22 15:25:25.981 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:25:25.999 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:25:25.999 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:25:26.020 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:26.021 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 41.6117ms
2025-10-22 15:25:26.275 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:25:26.275 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:25:26.276 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:25:26.287 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:25:26.287 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:25:26.367 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:26.367 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 92.0513ms
2025-10-22 15:25:32.104 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:25:32.115 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:25:32.116 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:25:32.116 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:25:32.130 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:25:32.136 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:25:32.162 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:25:32.162 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:25:32.163 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:25:32.163 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:25:32.163 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:25:32.164 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:25:32.165 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:32.254 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:25:32.254 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:32.257 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:25:32.271 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:32.277 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 15:25:32.288 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:25:32.335 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:32.350 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:32.350 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:25:32.351 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.353 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.353 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:32.353 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:32.353 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:32.353 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:25:32.383 +02:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:25:32.389 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.394 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.394 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.398 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.399 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-10-22 15:25:32.401 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.402 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:32.413 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 153.7908ms.
2025-10-22 15:25:32.417 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:25:32.421 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:25:32.421 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:25:32.421 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:25:32.422 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:25:32.422 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:25:32.475 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 308.7859ms
2025-10-22 15:25:32.476 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:25:32.479 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 341.4622 ms
2025-10-22 15:25:32.483 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:32.484 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:32.491 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.494 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:25:32.494 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 391.1851ms
2025-10-22 15:25:43.872 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 15:25:43.877 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 15:25:43.878 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 15:25:43.881 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 15:25:43.882 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 15:25:43.898 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:25:43.898 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:25:43.898 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:25:43.898 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:25:43.899 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:25:43.899 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:25:43.899 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:43.901 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:43.901 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:25:43.939 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:43.940 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 15:25:43.945 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:43.947 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:43.947 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:25:43.947 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.947 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.947 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:43.948 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:43.948 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:43.948 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:43.953 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:43.953 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:43.953 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:43.953 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:43.953 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.953 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:43.954 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.954 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:43.956 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 54.3906ms.
2025-10-22 15:25:43.956 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:25:43.956 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:25:43.956 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:25:43.956 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:25:43.956 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:25:43.956 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:25:43.960 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 61.4757ms
2025-10-22 15:25:43.960 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 15:25:43.960 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 78.2249 ms
2025-10-22 15:25:43.960 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:43.960 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:43.961 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.961 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:43.961 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 88.8675ms
2025-10-22 15:25:52.514 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/topMeal - null null
2025-10-22 15:25:52.515 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/topMeal'
2025-10-22 15:25:52.516 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)' with route pattern 'api/meal/topMeal' is valid for the request path '/api/meal/topMeal'
2025-10-22 15:25:52.516 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 15:25:52.517 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 15:25:52.523 +02:00 [INF] Route matched with {action = "GetTopMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTopMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:25:52.524 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:52.531 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:52.532 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:25:52.536 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:52.540 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Ratings
        .Any())
    .OrderByDescending(m => m.Ratings
        .Average(r => r.Stars))
    .ThenByDescending(m => m.Ratings.Count)'
2025-10-22 15:25:52.561 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:25:52.561 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:25:52.622 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r2.Id, r2.MealId, r2.Stars, r2.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r2 ON m.Id == r2.MealId
        WHERE EXISTS (
            SELECT 1
            FROM Ratings AS r
            WHERE (m.Id != NULL) && (m.Id == r.MealId))
        ORDER BY (
            SELECT avg(r0.Stars)
            FROM Ratings AS r0
            WHERE (m.Id != NULL) && (m.Id == r0.MealId)) DESC, (
            SELECT CAST(count(*) AS integer)
            FROM Ratings AS r1
            WHERE (m.Id != NULL) && (m.Id == r1.MealId)) DESC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r2.Id, r2.MealId, r2.Stars, r2.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r2 ON m.Id == r2.MealId
        WHERE EXISTS (
            SELECT 1
            FROM Ratings AS r
            WHERE (m.Id != NULL) && (m.Id == r.MealId))
        ORDER BY (
            SELECT avg(r0.Stars)
            FROM Ratings AS r0
            WHERE (m.Id != NULL) && (m.Id == r0.MealId)) DESC, (
            SELECT CAST(count(*) AS integer)
            FROM Ratings AS r1
            WHERE (m.Id != NULL) && (m.Id == r1.MealId)) DESC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:52.638 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:52.638 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:25:52.638 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.639 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.639 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:52.639 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:52.639 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:52.639 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r2."Id", r2."MealId", r2."Stars", r2."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r2 ON m."Id" = r2."MealId"
WHERE EXISTS (
    SELECT 1
    FROM "Ratings" AS r
    WHERE m."Id" = r."MealId")
ORDER BY (
    SELECT avg(r0."Stars")
    FROM "Ratings" AS r0
    WHERE m."Id" = r0."MealId") DESC, (
    SELECT count(*)::int
    FROM "Ratings" AS r1
    WHERE m."Id" = r1."MealId") DESC, m."Id", m0."Id"
2025-10-22 15:25:52.661 +02:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r2."Id", r2."MealId", r2."Stars", r2."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r2 ON m."Id" = r2."MealId"
WHERE EXISTS (
    SELECT 1
    FROM "Ratings" AS r
    WHERE m."Id" = r."MealId")
ORDER BY (
    SELECT avg(r0."Stars")
    FROM "Ratings" AS r0
    WHERE m."Id" = r0."MealId") DESC, (
    SELECT count(*)::int
    FROM "Ratings" AS r1
    WHERE m."Id" = r1."MealId") DESC, m."Id", m0."Id"
2025-10-22 15:25:52.661 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.662 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.662 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.667 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.667 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.668 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-10-22 15:25:52.669 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.669 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:52.673 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 140.9486ms.
2025-10-22 15:25:52.673 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:25:52.674 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:25:52.674 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:25:52.674 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:25:52.674 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:25:52.674 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.TopMealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:25:52.676 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api) in 151.8887ms
2025-10-22 15:25:52.676 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 15:25:52.676 +02:00 [INF] HTTP GET /api/meal/topMeal responded 200 in 158.8820 ms
2025-10-22 15:25:52.676 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:52.676 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:52.676 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.677 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:52.677 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/topMeal - 200 null application/json; charset=utf-8 162.3957ms
2025-10-22 15:26:10.368 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:26:10.371 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:26:10.372 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:26:10.373 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:26:10.377 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:26:10.389 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:26:10.389 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:26:10.390 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:26:10.391 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:26:10.392 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:26:10.397 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:26:10.407 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:26:10.409 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:26:10.409 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:26:10.428 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:26:10.441 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:26:10.441 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:26:10.442 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.442 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.442 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:26:10.442 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:26:10.442 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:26:10.442 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:26:10.452 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:26:10.453 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.453 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.453 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.455 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 15:26:10.455 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.455 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:26:10.460 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 67.5147ms.
2025-10-22 15:26:10.460 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:26:10.460 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:26:10.460 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:26:10.460 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:26:10.460 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:26:10.460 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:26:10.466 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 76.3466ms
2025-10-22 15:26:10.467 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:26:10.467 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 89.6986 ms
2025-10-22 15:26:10.467 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:26:10.467 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:26:10.467 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.467 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:26:10.467 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 98.9679ms
2025-10-22 15:27:13.037 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 134
2025-10-22 15:27:13.039 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 15:27:13.039 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 15:27:13.039 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:13.045 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:27:13.045 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:27:13.045 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:27:13.047 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:13.069 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:27:13.070 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:27:13.070 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:27:13.071 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:27:13.071 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:27:13.071 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:27:13.071 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:13.072 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:13.078 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:13.079 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 15:27:13.080 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:27:13.095 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000007": started reading request body.
2025-10-22 15:27:13.095 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000007": done reading request body.
2025-10-22 15:27:13.102 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 15:27:13.102 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:13.102 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:13.103 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:13.110 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:13.111 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:27:13.114 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:27:13.114 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(m => m.MealOptionId == __mealOptionId_0 && m.Date.Date == __mealDate_Date_1)'
2025-10-22 15:27:13.123 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:27:13.127 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:27:13.127 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:27:13.127 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.127 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.128 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:13.128 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:13.128 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:13.128 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:13.130 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:13.130 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:13.131 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.131 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:27:13.131 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.132 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:13.133 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 21.7525ms.
2025-10-22 15:27:13.133 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:27:13.133 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:27:13.133 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:27:13.133 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:27:13.133 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-10-22 15:27:13.133 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-10-22 15:27:13.134 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 62.7624ms
2025-10-22 15:27:13.134 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:13.134 +02:00 [INF] HTTP POST /api/meal/createMeal responded 400 in 87.5325 ms
2025-10-22 15:27:13.134 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:27:13.134 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:27:13.134 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.134 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:13.134 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 400 null text/plain; charset=utf-8 97.5945ms
2025-10-22 15:27:45.251 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 134
2025-10-22 15:27:45.257 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 15:27:45.258 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 15:27:45.259 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:45.263 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:27:45.264 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:27:45.264 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:27:45.266 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:45.268 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:27:45.270 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:45.273 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:45.274 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:45.275 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 15:27:45.275 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:27:45.276 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000008": started reading request body.
2025-10-22 15:27:45.276 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000008": done reading request body.
2025-10-22 15:27:45.278 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 15:27:45.278 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:45.278 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:45.278 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:45.281 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:45.282 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:27:45.284 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:27:45.296 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:27:45.296 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:27:45.296 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.296 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.296 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:45.296 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:45.296 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:45.297 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:45.299 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:45.299 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:45.300 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.300 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:27:45.300 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.300 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:45.301 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 19.239ms.
2025-10-22 15:27:45.302 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:27:45.302 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:27:45.302 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:27:45.302 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:27:45.302 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-10-22 15:27:45.302 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-10-22 15:27:45.303 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 33.5343ms
2025-10-22 15:27:45.303 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:45.303 +02:00 [INF] HTTP POST /api/meal/createMeal responded 400 in 37.8936 ms
2025-10-22 15:27:45.304 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:27:45.304 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:27:45.304 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.304 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:45.304 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 400 null text/plain; charset=utf-8 53.7494ms
2025-10-22 15:27:59.034 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 134
2025-10-22 15:27:59.034 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 15:27:59.035 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 15:27:59.035 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:59.036 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:27:59.036 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:27:59.036 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:27:59.037 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:59.037 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:27:59.039 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:59.043 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:59.043 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:59.044 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 15:27:59.044 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:27:59.045 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000009": started reading request body.
2025-10-22 15:27:59.045 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000009": done reading request body.
2025-10-22 15:27:59.045 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 15:27:59.045 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:59.046 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:59.046 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:59.049 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:59.049 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:27:59.053 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:27:59.054 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:27:59.054 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:27:59.054 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.055 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.055 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:59.055 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:59.057 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-10-22 15:27:59.058 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:59.061 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:59.061 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.061 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:27:59.061 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.062 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:59.077 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:59.079 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:27:59.082 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:27:59.083 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:27:59.093 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.093 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.094 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:59.094 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:59.094 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:59.094 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:27:59.099 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:27:59.100 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.100 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:27:59.100 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.100 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:59.102 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:59.103 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 15:27:59.104 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 54.6542ms.
2025-10-22 15:27:59.104 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:27:59.104 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:27:59.104 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:27:59.105 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:27:59.105 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:27:59.105 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Domain.Meal'.
2025-10-22 15:27:59.122 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)"] for address (mealId=[aa51c3f1-9a08-4db4-9a4e-62d515e2b733],action=[CreateMeal],controller=[Meal])
2025-10-22 15:27:59.125 +02:00 [DBG] Successfully processed template api/meal/createMeal for BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) resulting in /api/meal/createMeal and ?mealId=aa51c3f1-9a08-4db4-9a4e-62d515e2b733
2025-10-22 15:27:59.127 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)"] with result /api/meal/createMeal?mealId=aa51c3f1-9a08-4db4-9a4e-62d515e2b733
2025-10-22 15:27:59.132 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 93.2693ms
2025-10-22 15:27:59.132 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:59.132 +02:00 [INF] HTTP POST /api/meal/createMeal responded 201 in 95.5618 ms
2025-10-22 15:27:59.132 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:27:59.133 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:27:59.133 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.133 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:59.133 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 201 null application/json; charset=utf-8 99.5255ms
2025-10-22 15:28:38.266 +02:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5175/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733 - application/json 46
2025-10-22 15:28:38.272 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733'
2025-10-22 15:28:38.277 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)' with route pattern 'api/meal/editName/{id:Guid}' is valid for the request path '/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733'
2025-10-22 15:28:38.278 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 15:28:38.281 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:28:38.281 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:28:38.281 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:28:38.283 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 15:28:38.293 +02:00 [INF] Route matched with {action = "UpdateMealName", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateMealName(System.Guid, BistroFoodReview.Api.Models.Dto.UpdateMealNameDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:28:38.293 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:38.294 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' ...
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' using the name 'id' in request data ...
2025-10-22 15:28:38.294 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 15:28:38.294 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Guid' ...
2025-10-22 15:28:38.294 +02:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Guid'.
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' ...
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' using the name '' in request data ...
2025-10-22 15:28:38.295 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:28:38.296 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:0000000A": started reading request body.
2025-10-22 15:28:38.296 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:0000000A": done reading request body.
2025-10-22 15:28:38.299 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'
2025-10-22 15:28:38.299 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 15:28:38.299 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 15:28:38.299 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' ...
2025-10-22 15:28:38.301 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 15:28:38.301 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:28:38.304 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:28:38.312 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(e => object.Equals(
        objA: EF.Property<object>(e, "Id"), 
        objB: __p_0))'
2025-10-22 15:28:38.316 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE m.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE m.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:28:38.319 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:28:38.320 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:28:38.320 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.321 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.321 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:28:38.322 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.322 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.322 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."Id" = @__p_0
LIMIT 1
2025-10-22 15:28:38.325 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."Id" = @__p_0
LIMIT 1
2025-10-22 15:28:38.325 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:38.325 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.325 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:28:38.326 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.326 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:38.326 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:28:38.326 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:28:38.327 +02:00 [DBG] The unchanged property 'Meal.EditedMealName' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-10-22 15:28:38.328 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:38.328 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:28:38.332 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.332 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.332 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:28:38.332 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.332 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.332 +02:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Guid), @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Meals" SET "EditedMealName" = @p0
WHERE "Id" = @p1;
2025-10-22 15:28:38.335 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Meals" SET "EditedMealName" = @p0
WHERE "Id" = @p1;
2025-10-22 15:28:38.335 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.335 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:28:38.335 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.335 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:38.335 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:38.335 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 15:28:38.336 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 34.7642ms.
2025-10-22 15:28:38.336 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:28:38.336 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:28:38.336 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:28:38.336 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:28:38.336 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:28:38.336 +02:00 [INF] Executing OkObjectResult, writing value of type 'BistroFoodReview.Api.Models.Domain.Meal'.
2025-10-22 15:28:38.336 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api) in 43.4175ms
2025-10-22 15:28:38.336 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 15:28:38.336 +02:00 [INF] HTTP PUT /api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733 responded 200 in 53.7333 ms
2025-10-22 15:28:38.337 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:28:38.337 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:28:38.337 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.337 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:38.337 +02:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5175/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733 - 200 null application/json; charset=utf-8 71.0758ms
2025-10-22 15:28:53.978 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:28:53.979 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:28:53.979 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:28:53.979 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:28:53.981 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:28:53.988 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:28:53.988 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:28:53.988 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:28:53.988 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:28:53.989 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:28:53.989 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:28:53.989 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:53.990 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:53.990 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:28:53.992 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:28:53.993 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:28:53.993 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:28:53.993 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.993 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.993 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:28:53.993 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:53.993 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:53.993 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:28:53.996 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:28:53.996 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.996 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.996 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.999 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 15:28:53.999 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.999 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:54.002 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11.8179ms.
2025-10-22 15:28:54.003 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:28:54.003 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:28:54.003 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:28:54.003 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:28:54.003 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:28:54.003 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:28:54.004 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 15.6765ms
2025-10-22 15:28:54.005 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:28:54.005 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 23.4169 ms
2025-10-22 15:28:54.005 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:28:54.005 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:28:54.005 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:54.005 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:54.006 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 27.6177ms
2025-10-22 15:29:12.714 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:29:12.715 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:29:12.715 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:29:12.716 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:29:12.720 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:29:12.721 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:29:12.722 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:29:12.722 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:29:12.722 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:29:12.723 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:29:12.723 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:29:12.723 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:29:12.725 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:29:12.725 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:29:12.729 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:29:12.730 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:29:12.730 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:29:12.730 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.730 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.731 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:29:12.731 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:12.731 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:12.731 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:29:12.734 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:29:12.738 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.738 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.740 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.740 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.740 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-10-22 15:29:12.740 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.740 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:12.741 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.1221ms.
2025-10-22 15:29:12.742 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:29:12.742 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:29:12.742 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:29:12.742 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:29:12.745 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:29:12.745 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:29:12.748 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 24.9916ms
2025-10-22 15:29:12.748 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:29:12.748 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 28.3060 ms
2025-10-22 15:29:12.749 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:29:12.749 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:29:12.749 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.750 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:12.750 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 36.7084ms
2025-10-22 15:29:39.667 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - null null
2025-10-22 15:29:39.671 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/ratings'
2025-10-22 15:29:39.671 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/ratings' is valid for the request path '/api/Rating/ratings'
2025-10-22 15:29:39.672 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:29:39.678 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:29:39.690 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:29:39.691 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:29:39.695 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:29:39.696 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:29:39.701 +02:00 [INF] Fetching all ratings
2025-10-22 15:29:39.704 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:29:39.706 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 15:29:39.707 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:29:39.708 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:29:39.708 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 15:29:39.723 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:29:39.729 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:29:39.729 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:29:39.729 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.729 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.730 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:29:39.730 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:39.730 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:39.730 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:29:39.733 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:29:39.734 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.737 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.737 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:29:39.738 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.738 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:39.741 +02:00 [INF] Retrieved 4 ratings from the database
2025-10-22 15:29:39.741 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 44.9784ms.
2025-10-22 15:29:39.741 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:29:39.741 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:29:39.741 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:29:39.741 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:29:39.742 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:29:39.742 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:29:39.742 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 51.6305ms
2025-10-22 15:29:39.742 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:29:39.742 +02:00 [INF] HTTP GET /api/Rating/ratings responded 200 in 64.7132 ms
2025-10-22 15:29:39.743 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:29:39.743 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:29:39.743 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.743 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:39.743 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - 200 null application/json; charset=utf-8 76.2185ms
2025-10-22 15:29:56.649 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 15:29:56.652 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 15:29:56.654 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 15:29:56.654 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:29:56.658 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:29:56.670 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:29:56.671 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:29:56.671 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:29:56.673 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:29:56.674 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:29:56.681 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:29:56.684 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:29:56.698 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:29:56.702 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:29:56.702 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:29:56.703 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.703 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.705 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:29:56.706 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:56.706 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-10-22 15:29:56.706 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:29:56.708 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:29:56.709 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:56.709 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:56.709 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.709 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:29:56.710 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.710 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:56.713 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.0828ms.
2025-10-22 15:29:56.713 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:29:56.714 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:29:56.714 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:29:56.714 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:29:56.714 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:29:56.715 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:29:56.720 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 49.9129ms
2025-10-22 15:29:56.721 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:29:56.721 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 63.5146 ms
2025-10-22 15:29:56.721 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:29:56.721 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:29:56.721 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.721 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:56.722 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 72.9994ms
2025-10-22 15:30:35.221 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:30:35.222 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:30:35.224 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:30:35.225 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:30:35.229 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:30:35.229 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:30:35.230 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:30:35.233 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:30:35.234 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:30:35.240 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:30:35.244 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:30:35.245 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:30:35.245 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.271 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.272 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:30:35.272 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:35.272 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:35.272 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:30:35.280 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:30:35.280 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.280 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.281 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:30:35.282 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.282 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:35.282 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.6678ms.
2025-10-22 15:30:35.282 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:30:35.283 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:30:35.283 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:30:35.283 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:30:35.283 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:30:35.283 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:30:35.283 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 53.1492ms
2025-10-22 15:30:35.283 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:30:35.283 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 54.6696 ms
2025-10-22 15:30:35.284 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:30:35.284 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:30:35.284 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.284 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:35.284 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 63.7983ms
2025-10-22 15:30:57.209 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 15:30:57.211 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:30:57.212 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:30:57.212 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:30:57.217 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:30:57.218 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:30:57.218 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:30:57.221 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:30:57.236 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:30:57.236 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:30:57.236 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:30:57.238 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:30:57.238 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:30:57.238 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:30:57.239 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:30:57.241 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:30:57.241 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:30:57.241 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:30:57.242 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:30:57.243 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000010": started reading request body.
2025-10-22 15:30:57.243 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000010": done reading request body.
2025-10-22 15:30:57.247 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 15:30:57.247 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:30:57.247 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:30:57.247 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:30:57.250 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:30:57.250 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:30:57.253 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:30:57.254 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 15:30:57.254 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:30:57.254 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:30:57.277 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:30:57.282 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:30:57.283 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:30:57.283 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.283 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.283 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:30:57.283 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:57.283 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:57.283 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:30:57.287 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:30:57.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:57.287 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:57.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:57.288 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.289 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:30:57.289 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.289 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:57.289 +02:00 [WRN] You can only rate meals that are available for today
2025-10-22 15:30:57.289 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 50.7192ms
2025-10-22 15:30:57.289 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:30:57.289 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 68.4230 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: You can only rate meals that are available for today
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 76
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 15:30:57.314 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: You can only rate meals that are available for today
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 76
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 15:30:57.322 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:30:57.322 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:30:57.322 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.322 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:57.322 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 112.5445ms
2025-10-22 15:31:18.933 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:31:18.938 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:31:18.939 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:31:18.940 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:31:18.943 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:31:18.944 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:31:18.945 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:31:18.947 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:31:18.947 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:31:18.949 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:31:18.950 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:31:18.950 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:31:18.950 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.950 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.951 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:18.951 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:18.951 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:18.951 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:31:18.958 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:31:18.960 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.960 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.960 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.962 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:31:18.962 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.962 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:18.963 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.2531ms.
2025-10-22 15:31:18.963 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:31:18.963 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:31:18.963 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:31:18.963 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:31:18.963 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:31:18.963 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:31:18.964 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 19.859ms
2025-10-22 15:31:18.965 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:31:18.965 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 21.1862 ms
2025-10-22 15:31:18.965 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:31:18.966 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:31:18.966 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.966 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:18.966 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 33.9713ms
2025-10-22 15:31:58.889 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 15:31:58.890 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:31:58.891 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:31:58.891 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:31:58.892 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:31:58.892 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:31:58.892 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:31:58.892 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:31:58.893 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:31:58.899 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:31:58.900 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:31:58.900 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:31:58.900 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:31:58.900 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000012": started reading request body.
2025-10-22 15:31:58.900 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000012": done reading request body.
2025-10-22 15:31:58.901 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 15:31:58.901 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:31:58.901 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:31:58.901 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:31:58.902 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:31:58.902 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:31:58.905 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:31:58.906 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:31:58.906 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:31:58.906 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.906 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.906 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:58.906 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.906 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.907 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:31:58.909 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:31:58.910 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.910 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.911 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.911 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.911 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.911 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:31:58.912 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.912 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.913 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 15:31:58.915 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:31:58.925 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:31:58.930 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.930 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.930 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:58.930 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.930 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.931 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:31:58.935 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:31:58.936 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.936 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:31:58.936 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.936 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.940 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.940 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.940 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:31:58.940 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:31:58.940 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:31:58.941 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.941 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.941 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:58.941 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.941 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.941 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:31:58.945 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:31:58.945 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.945 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:31:58.946 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.946 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.946 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.946 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 15:31:58.948 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 45.3513ms.
2025-10-22 15:31:58.948 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:31:58.948 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:31:58.948 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:31:58.948 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:31:58.948 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:31:58.948 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Dto.RatingDto'.
2025-10-22 15:31:58.949 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] for address (id=[c62b88d3-a216-48e0-a081-c26784229777],action=[SaveRating],controller=[Rating])
2025-10-22 15:31:58.950 +02:00 [DBG] Successfully processed template api/Rating/saveRating for BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) resulting in /api/Rating/saveRating and ?id=c62b88d3-a216-48e0-a081-c26784229777
2025-10-22 15:31:58.950 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] with result /api/Rating/saveRating?id=c62b88d3-a216-48e0-a081-c26784229777
2025-10-22 15:31:58.950 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 57.1888ms
2025-10-22 15:31:58.950 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:31:58.950 +02:00 [INF] HTTP POST /api/Rating/saveRating responded 201 in 58.3068 ms
2025-10-22 15:31:58.951 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:31:58.951 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:31:58.951 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.951 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.951 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 201 null application/json; charset=utf-8 62.6323ms
2025-10-22 15:32:14.412 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:32:14.413 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:32:14.413 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:32:14.413 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:32:14.415 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:32:14.415 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:32:14.416 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:32:14.417 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:32:14.417 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:32:14.419 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:32:14.420 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:32:14.420 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:32:14.420 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.420 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.420 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:32:14.420 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:32:14.420 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:32:14.420 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:32:14.424 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:32:14.424 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.426 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:32:14.426 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.426 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:32:14.426 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.94ms.
2025-10-22 15:32:14.426 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:32:14.427 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:32:14.427 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:32:14.427 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:32:14.427 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:32:14.427 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:32:14.428 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 11.7197ms
2025-10-22 15:32:14.428 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:32:14.428 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 12.9033 ms
2025-10-22 15:32:14.428 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:32:14.428 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:32:14.428 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.428 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:32:14.428 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 16.3928ms
2025-10-22 15:33:02.877 +02:00 [INF] Application is shutting down...
2025-10-22 15:33:02.918 +02:00 [DBG] Hosting stopping
2025-10-22 15:33:02.969 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" disconnecting.
2025-10-22 15:33:02.971 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" stopped.
2025-10-22 15:33:02.972 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:33:02.982 +02:00 [DBG] Hosting stopped
2025-10-22 15:33:47.034 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:33:48.717 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:33:49.248 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:33:49.287 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:33:50.212 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:50.313 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:33:50.562 +02:00 [DBG] Created DbConnection. (250ms).
2025-10-22 15:33:50.574 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.050 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.070 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.079 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:33:52.081 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-10-22 15:33:52.088 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:33:52.149 +02:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:33:52.207 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.214 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-10-22 15:33:52.224 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.229 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (7ms).
2025-10-22 15:33:52.237 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:33:52.243 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:52.245 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.246 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.246 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.246 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.246 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.246 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:33:52.248 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:33:52.248 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.249 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:33:52.249 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.249 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.250 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:33:52.252 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:52.253 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.253 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.253 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.253 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.254 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.254 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:33:52.256 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:33:52.256 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.256 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:33:52.256 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.257 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.258 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:33:52.260 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:52.262 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.262 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.262 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.262 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.262 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.262 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:33:52.268 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:33:52.268 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.268 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:33:52.269 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.269 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.270 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:33:52.271 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.272 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.388 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:33:52.449 +02:00 [DBG] Hosting starting
2025-10-22 15:33:52.537 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:33:52.539 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:33:52.566 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:33:52.567 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:33:52.568 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:33:52.568 +02:00 [INF] Hosting environment: Development
2025-10-22 15:33:52.568 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:33:52.569 +02:00 [DBG] Hosting started
2025-10-22 15:33:56.801 +02:00 [DBG] Connection id "0HNGHDUJA3J57" accepted.
2025-10-22 15:33:56.807 +02:00 [DBG] Connection id "0HNGHDUJA3J57" started.
2025-10-22 15:33:56.860 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:33:56.893 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:33:56.893 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:33:56.929 +02:00 [DBG] Connection id "0HNGHDUJA3J57" completed keep alive response.
2025-10-22 15:33:56.931 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 72.372ms
2025-10-22 15:33:56.944 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/index.html - null null
2025-10-22 15:33:56.944 +02:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-10-22 15:33:56.944 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:33:57.027 +02:00 [DBG] Connection id "0HNGHDUJA3J57" completed keep alive response.
2025-10-22 15:33:57.027 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/index.html - 200 null text/html;charset=utf-8 83.3073ms
2025-10-22 15:33:57.293 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:33:57.293 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:33:57.293 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:33:57.303 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:33:57.304 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:33:57.378 +02:00 [DBG] Connection id "0HNGHDUJA3J57" completed keep alive response.
2025-10-22 15:33:57.379 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 85.8472ms
2025-10-22 15:34:05.688 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:34:05.709 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:34:05.713 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:34:05.715 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:34:05.735 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:34:05.740 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:34:05.758 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:34:05.759 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:34:05.759 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:34:05.759 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:34:05.760 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:34:05.760 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:34:05.762 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:34:05.858 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:34:05.858 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:34:05.862 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:34:10.784 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:34:10.809 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:34:10.840 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:34:10.843 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:34:11.036 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:34:11.064 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:34:11.064 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:34:11.065 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.067 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.067 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:34:11.067 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:34:11.072 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:34:11.074 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:34:11.137 +02:00 [INF] Executed DbCommand (65ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:34:11.169 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.195 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.198 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.207 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.210 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.211 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.214 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.214 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 77ms reading results.
2025-10-22 15:34:11.216 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.217 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:14.695 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:38:15.001 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:38:15.112 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:38:15.125 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:38:15.235 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.248 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:38:15.267 +02:00 [DBG] Created DbConnection. (18ms).
2025-10-22 15:38:15.269 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.371 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.375 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.378 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:38:15.378 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:38:15.382 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:38:15.401 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:38:15.424 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.428 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-10-22 15:38:15.430 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.432 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:38:15.433 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:38:15.434 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.435 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.435 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.435 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.435 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.435 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.435 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:38:15.436 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:38:15.436 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.436 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:38:15.437 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.437 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.437 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:38:15.438 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.438 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.438 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.439 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.439 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.439 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.439 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:38:15.462 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:38:15.462 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.462 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:38:15.462 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.462 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.463 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:38:15.465 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.471 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.471 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.471 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.471 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.472 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.472 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:38:15.475 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:38:15.476 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.476 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:38:15.476 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.476 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.477 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:38:15.478 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.479 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.502 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:38:15.521 +02:00 [DBG] Hosting starting
2025-10-22 15:38:15.536 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:38:15.537 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:38:15.542 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:38:15.542 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:38:15.542 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:38:15.542 +02:00 [INF] Hosting environment: Development
2025-10-22 15:38:15.542 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:38:15.542 +02:00 [DBG] Hosting started
2025-10-22 15:38:15.797 +02:00 [DBG] Connection id "0HNGHE10G7SM5" received FIN.
2025-10-22 15:38:15.803 +02:00 [DBG] Connection id "0HNGHE10G7SM5" accepted.
2025-10-22 15:38:15.804 +02:00 [DBG] Connection id "0HNGHE10G7SM5" started.
2025-10-22 15:38:15.812 +02:00 [DBG] Connection id "0HNGHE10G7SM5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:38:15.814 +02:00 [DBG] Connection id "0HNGHE10G7SM5" disconnecting.
2025-10-22 15:38:15.817 +02:00 [DBG] Connection id "0HNGHE10G7SM5" stopped.
2025-10-22 15:38:16.385 +02:00 [DBG] Connection id "0HNGHE10G7SM6" accepted.
2025-10-22 15:38:16.386 +02:00 [DBG] Connection id "0HNGHE10G7SM6" started.
2025-10-22 15:38:16.549 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:38:16.568 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:38:16.569 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:38:16.612 +02:00 [DBG] Connection id "0HNGHE10G7SM6" completed keep alive response.
2025-10-22 15:38:16.615 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 72.9096ms
2025-10-22 15:38:17.043 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:38:17.044 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:38:17.044 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:38:17.049 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:38:17.050 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:38:17.121 +02:00 [DBG] Connection id "0HNGHE10G7SM6" completed keep alive response.
2025-10-22 15:38:17.122 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 78.1852ms
2025-10-22 15:38:41.518 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:38:41.530 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:38:41.531 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:38:41.533 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:38:41.544 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:38:41.551 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:38:41.564 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:38:41.565 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:38:41.567 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:38:41.645 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:38:41.645 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:38:41.647 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:38:41.660 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:38:41.671 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:38:41.685 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:38:41.686 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:38:41.787 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:38:41.807 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:38:41.807 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:38:41.808 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.809 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.810 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:41.810 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:41.813 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:38:41.816 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:38:41.848 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:38:41.878 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.898 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.901 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.910 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.913 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.916 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.916 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 67ms reading results.
2025-10-22 15:38:41.918 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.918 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:41.931 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 280.8657ms.
2025-10-22 15:38:41.934 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:38:41.936 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:38:41.936 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:38:41.936 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:38:41.936 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:38:41.936 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:38:41.970 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 401.586ms
2025-10-22 15:38:41.971 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:38:41.974 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 425.2864 ms
2025-10-22 15:38:41.977 +02:00 [DBG] Connection id "0HNGHE10G7SM6" completed keep alive response.
2025-10-22 15:38:41.978 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:38:41.981 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.982 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:38:41.982 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 465.5756ms
2025-10-22 15:40:35.099 +02:00 [INF] Application is shutting down...
2025-10-22 15:40:35.101 +02:00 [DBG] Hosting stopping
2025-10-22 15:40:35.113 +02:00 [DBG] Connection id "0HNGHE10G7SM6" disconnecting.
2025-10-22 15:40:35.114 +02:00 [DBG] Connection id "0HNGHE10G7SM6" stopped.
2025-10-22 15:40:35.115 +02:00 [DBG] Connection id "0HNGHE10G7SM6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:40:35.122 +02:00 [DBG] Hosting stopped
2025-10-22 15:42:37.058 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:42:37.415 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:42:37.566 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:42:37.583 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:42:37.723 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.738 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:42:37.767 +02:00 [DBG] Created DbConnection. (27ms).
2025-10-22 15:42:37.772 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.856 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.859 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.862 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:42:37.862 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:42:37.866 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:42:37.885 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:42:37.907 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.911 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 22ms reading results.
2025-10-22 15:42:37.913 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.915 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:42:37.916 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:42:37.917 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.918 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.918 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.918 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.918 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.918 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.918 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:42:37.922 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:42:37.922 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.922 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:42:37.922 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.922 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.922 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:42:37.923 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.924 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.924 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.924 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.924 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.924 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.924 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:42:37.926 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:42:37.926 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.926 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:42:37.926 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.926 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.926 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:42:37.927 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.927 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.928 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.928 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.928 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.928 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.928 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:42:37.929 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:42:37.929 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.929 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:42:37.929 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.929 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.930 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:42:37.931 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.932 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.945 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:42:37.964 +02:00 [DBG] Hosting starting
2025-10-22 15:42:37.978 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:42:37.978 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:42:37.983 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:42:37.983 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:42:37.983 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:42:37.983 +02:00 [INF] Hosting environment: Development
2025-10-22 15:42:37.983 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:42:37.983 +02:00 [DBG] Hosting started
2025-10-22 15:42:38.298 +02:00 [DBG] Connection id "0HNGHE3ENKO03" received FIN.
2025-10-22 15:42:38.302 +02:00 [DBG] Connection id "0HNGHE3ENKO03" accepted.
2025-10-22 15:42:38.303 +02:00 [DBG] Connection id "0HNGHE3ENKO03" started.
2025-10-22 15:42:38.307 +02:00 [DBG] Connection id "0HNGHE3ENKO03" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:42:38.309 +02:00 [DBG] Connection id "0HNGHE3ENKO03" disconnecting.
2025-10-22 15:42:38.311 +02:00 [DBG] Connection id "0HNGHE3ENKO03" stopped.
2025-10-22 15:42:38.815 +02:00 [DBG] Connection id "0HNGHE3ENKO04" accepted.
2025-10-22 15:42:38.816 +02:00 [DBG] Connection id "0HNGHE3ENKO04" started.
2025-10-22 15:42:39.207 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:42:39.221 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:42:39.222 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:42:39.252 +02:00 [DBG] Connection id "0HNGHE3ENKO04" completed keep alive response.
2025-10-22 15:42:39.253 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 47.7486ms
2025-10-22 15:42:39.457 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:42:39.458 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:42:39.458 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:42:39.463 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:42:39.464 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:42:39.538 +02:00 [DBG] Connection id "0HNGHE3ENKO04" completed keep alive response.
2025-10-22 15:42:39.538 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 80.9389ms
2025-10-22 15:42:46.685 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:42:46.715 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:42:46.718 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:42:46.723 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:42:46.739 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:42:46.743 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:42:46.756 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:42:46.756 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:42:46.756 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:42:46.757 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:42:46.757 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:42:46.757 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:42:46.757 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:42:46.842 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:42:46.842 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:42:46.845 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:42:46.856 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:42:46.866 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:42:46.880 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:42:46.882 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:42:46.989 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:42:47.010 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:42:47.010 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:42:47.012 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.013 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.013 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:47.013 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:47.017 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:42:47.020 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:42:47.049 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:42:47.076 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.097 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.100 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.112 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.113 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.113 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.113 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.115 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.115 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.117 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.117 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 67ms reading results.
2025-10-22 15:42:47.119 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.119 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:47.135 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 286.4886ms.
2025-10-22 15:42:47.139 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:42:47.141 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:42:47.142 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:42:47.142 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:42:47.142 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:42:47.142 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:42:47.180 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 421.0018ms
2025-10-22 15:42:47.181 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:42:47.184 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 439.9896 ms
2025-10-22 15:42:47.187 +02:00 [DBG] Connection id "0HNGHE3ENKO04" completed keep alive response.
2025-10-22 15:42:47.188 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:42:47.191 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.192 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:42:47.192 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 509.2926ms
2025-10-22 15:43:05.972 +02:00 [INF] Application is shutting down...
2025-10-22 15:43:05.974 +02:00 [DBG] Hosting stopping
2025-10-22 15:43:05.995 +02:00 [DBG] Connection id "0HNGHE3ENKO04" disconnecting.
2025-10-22 15:43:05.997 +02:00 [DBG] Connection id "0HNGHE3ENKO04" stopped.
2025-10-22 15:43:05.997 +02:00 [DBG] Connection id "0HNGHE3ENKO04" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:43:06.006 +02:00 [DBG] Hosting stopped
