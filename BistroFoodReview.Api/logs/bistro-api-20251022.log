2025-10-22 15:08:10.824 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:08:10.909 +02:00 [DBG] Hosting starting
2025-10-22 15:08:10.938 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:08:10.940 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:08:10.947 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:08:10.947 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:08:10.947 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:08:10.947 +02:00 [INF] Hosting environment: Development
2025-10-22 15:08:10.947 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:08:10.948 +02:00 [DBG] Hosting started
2025-10-22 15:08:11.084 +02:00 [DBG] Connection id "0HNGHDG6L56AT" received FIN.
2025-10-22 15:08:11.088 +02:00 [DBG] Connection id "0HNGHDG6L56AT" accepted.
2025-10-22 15:08:11.088 +02:00 [DBG] Connection id "0HNGHDG6L56AT" started.
2025-10-22 15:08:11.095 +02:00 [DBG] Connection id "0HNGHDG6L56AT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:08:11.102 +02:00 [DBG] Connection id "0HNGHDG6L56AT" disconnecting.
2025-10-22 15:08:11.104 +02:00 [DBG] Connection id "0HNGHDG6L56AT" stopped.
2025-10-22 15:08:12.020 +02:00 [DBG] Connection id "0HNGHDG6L56AU" accepted.
2025-10-22 15:08:12.023 +02:00 [DBG] Connection id "0HNGHDG6L56AU" started.
2025-10-22 15:08:12.482 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:08:12.501 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:08:12.501 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:08:12.518 +02:00 [DBG] Connection id "0HNGHDG6L56AU" completed keep alive response.
2025-10-22 15:08:12.520 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 38.9726ms
2025-10-22 15:08:12.735 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:08:12.736 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:08:12.736 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:08:12.746 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:08:12.747 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:08:12.811 +02:00 [DBG] Connection id "0HNGHDG6L56AU" completed keep alive response.
2025-10-22 15:08:12.811 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 76.1061ms
2025-10-22 15:08:27.541 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - null null
2025-10-22 15:08:27.557 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/ratings'
2025-10-22 15:08:27.561 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/ratings' is valid for the request path '/api/Rating/ratings'
2025-10-22 15:08:27.567 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:08:27.577 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:08:27.583 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:08:27.602 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:08:27.603 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:08:27.603 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:08:27.604 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:08:27.604 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:08:27.604 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:08:27.605 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:08:27.770 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:08:27.901 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:08:27.902 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:08:27.907 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:08:27.909 +02:00 [INF] Fetching all ratings
2025-10-22 15:08:28.297 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:08:28.439 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:08:28.463 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 15:08:28.519 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:08:28.520 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:08:28.520 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 15:08:28.690 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetInt32(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:08:28.723 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:08:28.756 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 15:08:28.759 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:28.890 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:28.895 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:08:28.900 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:08:28.901 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:08:28.906 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:08:28.941 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:08:28.994 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.020 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.024 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.030 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.031 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.034 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.034 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.039 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.041 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.042 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.042 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:08:29.045 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:29.051 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 105ms reading results.
2025-10-22 15:08:29.054 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:29.058 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 15:08:29.068 +02:00 [INF] Retrieved 5 ratings from the database
2025-10-22 15:08:29.071 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1161.1086ms.
2025-10-22 15:08:29.075 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:08:29.077 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:08:29.077 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:08:29.077 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:08:29.077 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:08:29.077 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:08:29.112 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 1505.3815ms
2025-10-22 15:08:29.113 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:08:29.116 +02:00 [INF] HTTP GET /api/Rating/ratings responded 200 in 1531.3049 ms
2025-10-22 15:08:29.120 +02:00 [DBG] Connection id "0HNGHDG6L56AU" completed keep alive response.
2025-10-22 15:08:29.124 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:08:29.129 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:08:29.131 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:08:29.132 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - 200 null application/json; charset=utf-8 1591.5069ms
2025-10-22 15:08:54.885 +02:00 [INF] Application is shutting down...
2025-10-22 15:08:54.891 +02:00 [DBG] Hosting stopping
2025-10-22 15:08:54.925 +02:00 [DBG] Connection id "0HNGHDG6L56AU" disconnecting.
2025-10-22 15:08:54.930 +02:00 [DBG] Connection id "0HNGHDG6L56AU" stopped.
2025-10-22 15:08:54.931 +02:00 [DBG] Connection id "0HNGHDG6L56AU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:08:54.937 +02:00 [DBG] Hosting stopped
2025-10-22 15:14:53.412 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:14:53.475 +02:00 [DBG] Hosting starting
2025-10-22 15:14:53.501 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:14:53.504 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:14:53.510 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:14:53.510 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:14:53.510 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:14:53.511 +02:00 [INF] Hosting environment: Development
2025-10-22 15:14:53.511 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:14:53.511 +02:00 [DBG] Hosting started
2025-10-22 15:14:53.996 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" received FIN.
2025-10-22 15:14:53.998 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" accepted.
2025-10-22 15:14:53.998 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" started.
2025-10-22 15:14:54.002 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:14:54.005 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" disconnecting.
2025-10-22 15:14:54.007 +02:00 [DBG] Connection id "0HNGHDJUNJUCP" stopped.
2025-10-22 15:14:54.884 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" accepted.
2025-10-22 15:14:54.885 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" started.
2025-10-22 15:14:55.577 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:14:55.588 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:14:55.588 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:14:55.607 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:14:55.608 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 31.7686ms
2025-10-22 15:14:55.891 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:14:55.892 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:14:55.892 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:14:55.907 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:14:55.907 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:14:56.013 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:14:56.013 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 122.2837ms
2025-10-22 15:15:10.227 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 15:15:10.238 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 15:15:10.239 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 15:15:10.239 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:15:10.246 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:15:10.249 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:15:10.268 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 15:15:10.269 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:15:10.270 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:15:10.271 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:15:10.271 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:15:10.271 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:15:10.272 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:15:10.371 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:15:10.474 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:15:10.474 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:15:10.479 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:15:10.829 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:15:10.976 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:15:10.991 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:15:11.150 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:15:11.173 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:15:11.203 +02:00 [DBG] Created DbConnection. (28ms).
2025-10-22 15:15:11.205 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.311 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.316 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:15:11.321 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:15:11.322 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:15:11.328 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:15:11.354 +02:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:15:11.404 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:11.414 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:11.417 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.423 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 65ms reading results.
2025-10-22 15:15:11.427 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.431 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 15:15:11.442 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 960.0967ms.
2025-10-22 15:15:11.445 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:15:11.447 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:15:11.447 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:15:11.447 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:15:11.448 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:15:11.448 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:15:11.478 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 1204.1637ms
2025-10-22 15:15:11.478 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:15:11.481 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 1230.4111 ms
2025-10-22 15:15:11.484 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:15:11.487 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:15:11.492 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:11.494 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:15:11.495 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 1268.2036ms
2025-10-22 15:15:50.232 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:15:50.235 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:15:50.236 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:15:50.237 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:15:50.239 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:15:50.249 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:15:50.250 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:15:50.250 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:15:50.253 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:15:50.253 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:15:50.284 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:15:50.301 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:15:50.343 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:15:50.344 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:15:50.429 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:15:50.453 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:15:50.454 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:15:50.454 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.454 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.455 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:15:50.455 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:15:50.459 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:15:50.467 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:15:50.495 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:15:50.500 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.514 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.518 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.526 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.529 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:15:50.530 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.531 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 35ms reading results.
2025-10-22 15:15:50.531 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.531 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:15:50.538 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 284.194ms.
2025-10-22 15:15:50.538 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:15:50.538 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:15:50.538 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:15:50.538 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:15:50.538 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:15:50.538 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:15:50.551 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 300.9082ms
2025-10-22 15:15:50.551 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:15:50.551 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 312.1454 ms
2025-10-22 15:15:50.552 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:15:50.552 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:15:50.552 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:15:50.553 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:15:50.553 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 321.355ms
2025-10-22 15:16:22.014 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 15:16:22.016 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:16:22.016 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:16:22.017 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:22.021 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:16:22.022 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:16:22.022 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:16:22.023 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:22.035 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:16:22.036 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:22.041 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:22.048 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:22.053 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:16:22.054 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:16:22.063 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000005": started reading request body.
2025-10-22 15:16:22.063 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000005": done reading request body.
2025-10-22 15:16:22.078 +02:00 [DBG] JSON input formatter threw an exception: The JSON value could not be converted to System.Int32. Path: $.stars | LineNumber: 3 | BytePositionInLine: 14.
2025-10-22 15:16:22.078 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:22.078 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:22.079 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:22.089 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:22.091 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Invalid"
2025-10-22 15:16:22.094 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 57.8702ms
2025-10-22 15:16:22.094 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:22.095 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 71.3200 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 58
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 15:16:22.117 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 58
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 15:16:22.126 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:16:22.126 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 500 null text/plain; charset=utf-8 111.8541ms
2025-10-22 15:16:36.083 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 15:16:36.086 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:16:36.087 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:16:36.088 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:36.089 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:16:36.089 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:16:36.089 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:16:36.090 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:36.090 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:16:36.091 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:36.094 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:16:36.094 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:36.094 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:16:36.095 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:16:36.095 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000006": started reading request body.
2025-10-22 15:16:36.095 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ", Request id "0HNGHDJUNJUCQ:00000006": done reading request body.
2025-10-22 15:16:36.098 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 15:16:36.099 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:36.099 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:36.099 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:16:36.104 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:16:36.105 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:16:36.150 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:16:36.152 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 15:16:36.153 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:16:36.153 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:16:36.172 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (int) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:16:36.180 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:16:36.180 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:16:36.180 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.180 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.180 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:16:36.180 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.181 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.181 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:16:36.195 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:16:36.195 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.195 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.195 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.198 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.198 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:16:36.198 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.198 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:16:36.200 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 15:16:36.201 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:16:36.207 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (int) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetInt32(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:16:36.215 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.215 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.215 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:16:36.215 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.215 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:16:36.215 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:16:36.235 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:16:36.236 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.236 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.236 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:16:36.237 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.237 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:16:36.237 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.237 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:16:36.237 +02:00 [WRN] You have already rated this meal option today.
2025-10-22 15:16:36.238 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 146.4826ms
2025-10-22 15:16:36.238 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:16:36.238 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 148.0620 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 15:16:36.240 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 15:16:36.243 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" completed keep alive response.
2025-10-22 15:16:36.243 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:16:36.243 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:16:36.243 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:16:36.244 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 160.8128ms
2025-10-22 15:16:49.883 +02:00 [INF] Application is shutting down...
2025-10-22 15:16:49.887 +02:00 [DBG] Hosting stopping
2025-10-22 15:16:49.909 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" disconnecting.
2025-10-22 15:16:49.913 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" stopped.
2025-10-22 15:16:49.913 +02:00 [DBG] Connection id "0HNGHDJUNJUCQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:16:49.923 +02:00 [DBG] Hosting stopped
2025-10-22 15:20:57.368 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:20:57.738 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:20:57.864 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:20:57.874 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()'
2025-10-22 15:20:57.988 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId
        FROM Ratings AS r) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId
        FROM Ratings AS r, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.004 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:20:58.025 +02:00 [DBG] Created DbConnection. (21ms).
2025-10-22 15:20:58.028 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.235 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.239 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.242 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:20:58.242 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:20:58.245 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId"
FROM "Ratings" AS r
2025-10-22 15:20:58.264 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId"
FROM "Ratings" AS r
2025-10-22 15:20:58.302 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.315 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.316 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.317 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.317 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.317 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.318 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.322 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 54ms reading results.
2025-10-22 15:20:58.323 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.325 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:20:58.326 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()'
2025-10-22 15:20:58.329 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.330 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.331 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.331 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.331 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.331 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.331 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:20:58.332 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:20:58.339 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.343 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.346 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.346 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-10-22 15:20:58.347 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.347 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.347 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 15:20:58.349 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.350 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.350 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.350 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.350 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.350 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.350 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:20:58.353 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:20:58.354 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.356 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.356 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:20:58.356 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.356 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.357 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:20:58.358 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:20:58.360 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.360 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.360 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.360 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.360 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.360 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:20:58.361 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:20:58.362 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.364 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.365 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:20:58.365 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.365 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.365 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:20:58.366 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:20:58.378 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:20:58.412 +02:00 [DBG] Executing 16 update commands as a batch.
2025-10-22 15:20:58.414 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.414 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.415 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:20:58.419 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:20:58.421 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:20:58.421 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:20:58.425 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:20:58.427 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Meals"
WHERE "Id" = @p0;
DELETE FROM "Meals"
WHERE "Id" = @p1;
DELETE FROM "Ratings"
WHERE "Id" = @p2;
DELETE FROM "Ratings"
WHERE "Id" = @p3;
DELETE FROM "Ratings"
WHERE "Id" = @p4;
DELETE FROM "Ratings"
WHERE "Id" = @p5;
DELETE FROM "Ratings"
WHERE "Id" = @p6;
DELETE FROM "Meals"
WHERE "Id" = @p7;
DELETE FROM "Meals"
WHERE "Id" = @p8;
DELETE FROM "Meals"
WHERE "Id" = @p9;
DELETE FROM "Meals"
WHERE "Id" = @p10;
DELETE FROM "Users"
WHERE "Id" = @p11;
DELETE FROM "Users"
WHERE "Id" = @p12;
DELETE FROM "MealOptions"
WHERE "Id" = @p13;
DELETE FROM "MealOptions"
WHERE "Id" = @p14;
DELETE FROM "MealOptions"
WHERE "Id" = @p15;
2025-10-22 15:20:58.454 +02:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Meals"
WHERE "Id" = @p0;
DELETE FROM "Meals"
WHERE "Id" = @p1;
DELETE FROM "Ratings"
WHERE "Id" = @p2;
DELETE FROM "Ratings"
WHERE "Id" = @p3;
DELETE FROM "Ratings"
WHERE "Id" = @p4;
DELETE FROM "Ratings"
WHERE "Id" = @p5;
DELETE FROM "Ratings"
WHERE "Id" = @p6;
DELETE FROM "Meals"
WHERE "Id" = @p7;
DELETE FROM "Meals"
WHERE "Id" = @p8;
DELETE FROM "Meals"
WHERE "Id" = @p9;
DELETE FROM "Meals"
WHERE "Id" = @p10;
DELETE FROM "Users"
WHERE "Id" = @p11;
DELETE FROM "Users"
WHERE "Id" = @p12;
DELETE FROM "MealOptions"
WHERE "Id" = @p13;
DELETE FROM "MealOptions"
WHERE "Id" = @p14;
DELETE FROM "MealOptions"
WHERE "Id" = @p15;
2025-10-22 15:20:58.456 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.456 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 15:20:58.458 +02:00 [DBG] Committing transaction.
2025-10-22 15:20:58.461 +02:00 [DBG] Committed transaction.
2025-10-22 15:20:58.461 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:20:58.462 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:20:58.462 +02:00 [DBG] Disposing transaction.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.466 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.467 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:20:58.469 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 16 entities written to the database.
2025-10-22 15:20:58.485 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:20:58.504 +02:00 [DBG] Hosting starting
2025-10-22 15:20:58.531 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:20:58.532 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:20:58.539 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:20:58.539 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:20:58.539 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:20:58.539 +02:00 [INF] Hosting environment: Development
2025-10-22 15:20:58.539 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:20:58.539 +02:00 [DBG] Hosting started
2025-10-22 15:20:58.930 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" received FIN.
2025-10-22 15:20:58.933 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" accepted.
2025-10-22 15:20:58.934 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" started.
2025-10-22 15:20:58.937 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:20:58.938 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" disconnecting.
2025-10-22 15:20:58.940 +02:00 [DBG] Connection id "0HNGHDNBFT3D1" stopped.
2025-10-22 15:21:00.016 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" accepted.
2025-10-22 15:21:00.018 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" started.
2025-10-22 15:21:00.427 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:21:00.443 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:21:00.444 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:21:00.462 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" completed keep alive response.
2025-10-22 15:21:00.463 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 37.7003ms
2025-10-22 15:21:00.657 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:21:00.657 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:21:00.657 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:21:00.663 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:21:00.664 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:21:00.726 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" completed keep alive response.
2025-10-22 15:21:00.727 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 69.6968ms
2025-10-22 15:21:05.254 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:21:05.283 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:21:05.285 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:21:05.595 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:21:05.618 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:21:05.622 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:21:05.639 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:21:05.640 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:21:05.641 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:21:05.641 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:21:05.642 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:21:05.642 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:21:05.643 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:21:05.721 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:21:05.721 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:21:05.724 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:21:05.752 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:21:05.760 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 15:21:05.794 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:21:05.845 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:21:05.855 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:21:05.855 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:21:05.856 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.857 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.858 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:21:05.858 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:21:05.858 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:21:05.858 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:21:05.869 +02:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:21:05.872 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.873 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:21:05.874 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.875 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:21:05.884 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 157.8997ms.
2025-10-22 15:21:05.887 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:21:05.889 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:21:05.889 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:21:05.889 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:21:05.889 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:21:05.889 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:21:05.922 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 277.9217ms
2025-10-22 15:21:05.923 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:21:05.926 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 302.3778 ms
2025-10-22 15:21:05.933 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" completed keep alive response.
2025-10-22 15:21:05.937 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:21:05.940 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:05.944 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:21:05.946 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 693.978ms
2025-10-22 15:21:10.492 +02:00 [INF] Application is shutting down...
2025-10-22 15:21:10.496 +02:00 [DBG] Hosting stopping
2025-10-22 15:21:10.532 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" disconnecting.
2025-10-22 15:21:10.536 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" stopped.
2025-10-22 15:21:10.537 +02:00 [DBG] Connection id "0HNGHDNBFT3D2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:21:10.550 +02:00 [DBG] Hosting stopped
2025-10-22 15:21:10.561 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:21:10.564 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:21:10.565 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:22:14.909 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:22:15.095 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:22:15.167 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:22:15.408 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:22:27.934 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:22:28.121 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:22:28.192 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:22:28.203 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:22:28.217 +02:00 [DBG] Created DbConnection. (12ms).
2025-10-22 15:22:28.220 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.282 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.284 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:22:28.287 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:22:28.288 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:22:28.291 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.308 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.322 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.326 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-10-22 15:22:28.327 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.328 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:22:28.331 +02:00 [DBG] Migrating using database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.332 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.333 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.347 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.347 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.349 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:22:28.349 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.349 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.392 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.392 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.392 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.392 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-10-22 15:22:28.396 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-10-22 15:22:28.398 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:22:28.399 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:22:28.399 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-10-22 15:22:28.399 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.400 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.400 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.400 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-10-22 15:22:28.403 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-10-22 15:22:28.403 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:22:28.403 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:22:28.403 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:22:28.404 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.404 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-10-22 15:22:28.404 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.404 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:22:28.408 +02:00 [INF] Applying migration '20251022132215_ChangeStarsToDouble'.
2025-10-22 15:22:28.420 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.420 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.420 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.420 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Ratings" ALTER COLUMN "Stars" TYPE double precision;
2025-10-22 15:22:28.448 +02:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Ratings" ALTER COLUMN "Stars" TYPE double precision;
2025-10-22 15:22:28.449 +02:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-10-22 15:22:28.449 +02:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.449 +02:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-10-22 15:22:28.449 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20251022132215_ChangeStarsToDouble', '9.0.10');
2025-10-22 15:22:28.449 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20251022132215_ChangeStarsToDouble', '9.0.10');
2025-10-22 15:22:28.450 +02:00 [DBG] Committing transaction.
2025-10-22 15:22:28.458 +02:00 [DBG] Committed transaction.
2025-10-22 15:22:28.459 +02:00 [DBG] Disposing transaction.
2025-10-22 15:22:28.459 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.459 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:22:28.460 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:22:28.461 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:22:28.461 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:20.617 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:25:21.010 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:25:21.147 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:21.161 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:25:21.288 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:21.305 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:21.327 +02:00 [DBG] Created DbConnection. (21ms).
2025-10-22 15:25:21.330 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.071 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.119 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.123 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:25:23.124 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:25:23.127 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:25:23.208 +02:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:25:23.232 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.238 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 26ms reading results.
2025-10-22 15:25:23.240 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.242 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:25:23.285 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.286 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.286 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.287 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.289 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.293 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.321 +02:00 [DBG] Executing 3 update commands as a batch.
2025-10-22 15:25:23.322 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.322 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.323 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.325 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.326 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.326 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.328 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:25:23.331 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Guid), @p3='?', @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p0, @p1);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p2, @p3);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p4, @p5);
2025-10-22 15:25:23.435 +02:00 [INF] Executed DbCommand (107ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Guid), @p3='?', @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p0, @p1);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p2, @p3);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p4, @p5);
2025-10-22 15:25:23.437 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.437 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:25:23.439 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.490 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.490 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.490 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.491 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.494 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.494 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.494 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.495 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 3 entities written to the database.
2025-10-22 15:25:23.495 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:25:23.497 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:23.498 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.498 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.498 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.498 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.498 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.498 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:25:23.521 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:25:23.521 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.522 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.522 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.522 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.527 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.527 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.527 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.527 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.529 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.529 +02:00 [DBG] Executing 2 update commands as a batch.
2025-10-22 15:25:23.530 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.530 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.530 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.530 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.530 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.530 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.530 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.530 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = Guid), @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p0, @p1, @p2);
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p3, @p4, @p5);
2025-10-22 15:25:23.575 +02:00 [INF] Executed DbCommand (45ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = Guid), @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p0, @p1, @p2);
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p3, @p4, @p5);
2025-10-22 15:25:23.575 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.575 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.575 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.575 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.575 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.576 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.576 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.576 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.576 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.576 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 2 entities written to the database.
2025-10-22 15:25:23.577 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:25:23.578 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:23.579 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.579 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.579 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.579 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.579 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.579 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:25:23.602 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:25:23.603 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.603 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.603 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.603 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.604 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 15:25:23.628 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:23.631 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.631 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.631 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.631 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.632 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.632 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:23.632 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:23.633 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.634 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:25:23.634 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.634 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.643 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.648 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.649 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.649 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.651 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.653 +02:00 [DBG] Executing 3 update commands as a batch.
2025-10-22 15:25:23.653 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.653 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.653 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.653 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.653 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.653 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.653 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.653 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p8, @p9, @p10, @p11);
2025-10-22 15:25:23.746 +02:00 [INF] Executed DbCommand (92ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p8, @p9, @p10, @p11);
2025-10-22 15:25:23.746 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.746 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.746 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.747 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.747 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.747 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.747 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.747 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.747 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.747 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.748 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 3 entities written to the database.
2025-10-22 15:25:23.748 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:25:23.749 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:25:23.750 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.750 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.750 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.750 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.750 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.750 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:25:23.814 +02:00 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:25:23.815 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.815 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.815 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.815 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.815 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()'
2025-10-22 15:25:23.819 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:23.820 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.820 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.820 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.820 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.820 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.820 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:25:23.821 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 15:25:23.821 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.821 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.821 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.821 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.822 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:25:23.824 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:23.826 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.826 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.826 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.826 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.826 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.826 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:25:23.827 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:25:23.827 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.827 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.827 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.827 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.834 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.836 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.837 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.837 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:25:23.839 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:25:23.839 +02:00 [DBG] Executing 4 update commands as a batch.
2025-10-22 15:25:23.839 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.839 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.840 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 15:25:23.840 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 15:25:23.840 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:23.840 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.840 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:23.840 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Double), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Double), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Double), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p8, @p9, @p10, @p11);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p12, @p13, @p14, @p15);
2025-10-22 15:25:23.871 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Double), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Double), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Double), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p8, @p9, @p10, @p11);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p12, @p13, @p14, @p15);
2025-10-22 15:25:23.871 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.871 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:23.871 +02:00 [DBG] Committing transaction.
2025-10-22 15:25:23.872 +02:00 [DBG] Committed transaction.
2025-10-22 15:25:23.872 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.872 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.872 +02:00 [DBG] Disposing transaction.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:23.872 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 4 entities written to the database.
2025-10-22 15:25:23.873 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:23.874 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:23.875 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:23.893 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:25:23.912 +02:00 [DBG] Hosting starting
2025-10-22 15:25:23.937 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:25:23.938 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:25:23.944 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:25:23.944 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:25:23.944 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:25:23.944 +02:00 [INF] Hosting environment: Development
2025-10-22 15:25:23.944 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:25:23.944 +02:00 [DBG] Hosting started
2025-10-22 15:25:24.342 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" received FIN.
2025-10-22 15:25:24.347 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" accepted.
2025-10-22 15:25:24.347 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" started.
2025-10-22 15:25:24.351 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:25:24.353 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" disconnecting.
2025-10-22 15:25:24.354 +02:00 [DBG] Connection id "0HNGHDPQJ27JH" stopped.
2025-10-22 15:25:25.303 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" accepted.
2025-10-22 15:25:25.306 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" started.
2025-10-22 15:25:25.981 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:25:25.999 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:25:25.999 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:25:26.020 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:26.021 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 41.6117ms
2025-10-22 15:25:26.275 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:25:26.275 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:25:26.276 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:25:26.287 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:25:26.287 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:25:26.367 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:26.367 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 92.0513ms
2025-10-22 15:25:32.104 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:25:32.115 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:25:32.116 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:25:32.116 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:25:32.130 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:25:32.136 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:25:32.162 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:25:32.162 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:25:32.163 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:25:32.163 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:25:32.163 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:25:32.164 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:25:32.165 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:32.254 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:25:32.254 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:32.257 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:25:32.271 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:32.277 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 15:25:32.288 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:25:32.335 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:32.350 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:32.350 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:25:32.351 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.353 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.353 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:32.353 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:32.353 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:32.353 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:25:32.383 +02:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:25:32.389 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.394 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.394 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.396 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:32.398 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.399 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-10-22 15:25:32.401 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.402 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:32.413 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 153.7908ms.
2025-10-22 15:25:32.417 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:25:32.421 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:25:32.421 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:25:32.421 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:25:32.422 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:25:32.422 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:25:32.475 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 308.7859ms
2025-10-22 15:25:32.476 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:25:32.479 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 341.4622 ms
2025-10-22 15:25:32.483 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:32.484 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:32.491 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:32.494 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:25:32.494 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 391.1851ms
2025-10-22 15:25:43.872 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 15:25:43.877 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 15:25:43.878 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 15:25:43.881 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 15:25:43.882 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 15:25:43.898 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:25:43.898 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:25:43.898 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:25:43.898 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:25:43.899 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:25:43.899 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:25:43.899 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:43.901 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:43.901 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:25:43.939 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:43.940 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 15:25:43.945 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:43.947 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:43.947 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:25:43.947 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.947 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.947 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:43.948 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:43.948 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:43.948 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:43.953 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 15:25:43.953 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:43.953 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:43.953 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:43.953 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.953 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:25:43.954 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.954 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:43.956 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 54.3906ms.
2025-10-22 15:25:43.956 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:25:43.956 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:25:43.956 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:25:43.956 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:25:43.956 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:25:43.956 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:25:43.960 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 61.4757ms
2025-10-22 15:25:43.960 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 15:25:43.960 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 78.2249 ms
2025-10-22 15:25:43.960 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:43.960 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:43.961 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:43.961 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:43.961 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 88.8675ms
2025-10-22 15:25:52.514 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/topMeal - null null
2025-10-22 15:25:52.515 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/topMeal'
2025-10-22 15:25:52.516 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)' with route pattern 'api/meal/topMeal' is valid for the request path '/api/meal/topMeal'
2025-10-22 15:25:52.516 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 15:25:52.517 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 15:25:52.523 +02:00 [INF] Route matched with {action = "GetTopMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTopMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:25:52.524 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:25:52.524 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:52.531 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:25:52.532 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:25:52.536 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:25:52.540 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Ratings
        .Any())
    .OrderByDescending(m => m.Ratings
        .Average(r => r.Stars))
    .ThenByDescending(m => m.Ratings.Count)'
2025-10-22 15:25:52.561 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:25:52.561 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:25:52.622 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r2.Id, r2.MealId, r2.Stars, r2.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r2 ON m.Id == r2.MealId
        WHERE EXISTS (
            SELECT 1
            FROM Ratings AS r
            WHERE (m.Id != NULL) && (m.Id == r.MealId))
        ORDER BY (
            SELECT avg(r0.Stars)
            FROM Ratings AS r0
            WHERE (m.Id != NULL) && (m.Id == r0.MealId)) DESC, (
            SELECT CAST(count(*) AS integer)
            FROM Ratings AS r1
            WHERE (m.Id != NULL) && (m.Id == r1.MealId)) DESC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r2.Id, r2.MealId, r2.Stars, r2.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r2 ON m.Id == r2.MealId
        WHERE EXISTS (
            SELECT 1
            FROM Ratings AS r
            WHERE (m.Id != NULL) && (m.Id == r.MealId))
        ORDER BY (
            SELECT avg(r0.Stars)
            FROM Ratings AS r0
            WHERE (m.Id != NULL) && (m.Id == r0.MealId)) DESC, (
            SELECT CAST(count(*) AS integer)
            FROM Ratings AS r1
            WHERE (m.Id != NULL) && (m.Id == r1.MealId)) DESC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:25:52.638 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:25:52.638 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:25:52.638 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.639 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.639 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:25:52.639 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:52.639 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:25:52.639 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r2."Id", r2."MealId", r2."Stars", r2."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r2 ON m."Id" = r2."MealId"
WHERE EXISTS (
    SELECT 1
    FROM "Ratings" AS r
    WHERE m."Id" = r."MealId")
ORDER BY (
    SELECT avg(r0."Stars")
    FROM "Ratings" AS r0
    WHERE m."Id" = r0."MealId") DESC, (
    SELECT count(*)::int
    FROM "Ratings" AS r1
    WHERE m."Id" = r1."MealId") DESC, m."Id", m0."Id"
2025-10-22 15:25:52.661 +02:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r2."Id", r2."MealId", r2."Stars", r2."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r2 ON m."Id" = r2."MealId"
WHERE EXISTS (
    SELECT 1
    FROM "Ratings" AS r
    WHERE m."Id" = r."MealId")
ORDER BY (
    SELECT avg(r0."Stars")
    FROM "Ratings" AS r0
    WHERE m."Id" = r0."MealId") DESC, (
    SELECT count(*)::int
    FROM "Ratings" AS r1
    WHERE m."Id" = r1."MealId") DESC, m."Id", m0."Id"
2025-10-22 15:25:52.661 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.662 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.662 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.667 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.667 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:25:52.668 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.668 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-10-22 15:25:52.669 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.669 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:52.673 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 140.9486ms.
2025-10-22 15:25:52.673 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:25:52.674 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:25:52.674 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:25:52.674 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:25:52.674 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:25:52.674 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.TopMealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:25:52.676 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api) in 151.8887ms
2025-10-22 15:25:52.676 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 15:25:52.676 +02:00 [INF] HTTP GET /api/meal/topMeal responded 200 in 158.8820 ms
2025-10-22 15:25:52.676 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:25:52.676 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:25:52.676 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:25:52.677 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:25:52.677 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/topMeal - 200 null application/json; charset=utf-8 162.3957ms
2025-10-22 15:26:10.368 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:26:10.371 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:26:10.372 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:26:10.373 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:26:10.377 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:26:10.389 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:26:10.389 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:26:10.390 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:26:10.390 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:26:10.391 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:26:10.392 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:26:10.397 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:26:10.407 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:26:10.409 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:26:10.409 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:26:10.428 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:26:10.441 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:26:10.441 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:26:10.442 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.442 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.442 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:26:10.442 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:26:10.442 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:26:10.442 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:26:10.452 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:26:10.453 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.453 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.453 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:26:10.455 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.455 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 15:26:10.455 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.455 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:26:10.460 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 67.5147ms.
2025-10-22 15:26:10.460 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:26:10.460 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:26:10.460 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:26:10.460 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:26:10.460 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:26:10.460 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:26:10.466 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 76.3466ms
2025-10-22 15:26:10.467 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:26:10.467 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 89.6986 ms
2025-10-22 15:26:10.467 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:26:10.467 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:26:10.467 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:26:10.467 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:26:10.467 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 98.9679ms
2025-10-22 15:27:13.037 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 134
2025-10-22 15:27:13.039 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 15:27:13.039 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 15:27:13.039 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:13.045 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:27:13.045 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:27:13.045 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:27:13.047 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:13.069 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:27:13.070 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:27:13.070 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:27:13.071 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:27:13.071 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:27:13.071 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:27:13.071 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:13.072 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:13.078 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:13.079 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 15:27:13.080 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:27:13.095 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000007": started reading request body.
2025-10-22 15:27:13.095 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000007": done reading request body.
2025-10-22 15:27:13.102 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 15:27:13.102 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:13.102 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:13.103 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:13.110 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:13.111 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:27:13.114 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:27:13.114 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(m => m.MealOptionId == __mealOptionId_0 && m.Date.Date == __mealDate_Date_1)'
2025-10-22 15:27:13.123 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:27:13.127 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:27:13.127 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:27:13.127 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.127 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.128 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:13.128 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:13.128 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:13.128 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:13.130 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:13.130 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:13.131 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.131 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:27:13.131 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.132 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:13.133 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 21.7525ms.
2025-10-22 15:27:13.133 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:27:13.133 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:27:13.133 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:27:13.133 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:27:13.133 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-10-22 15:27:13.133 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-10-22 15:27:13.134 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 62.7624ms
2025-10-22 15:27:13.134 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:13.134 +02:00 [INF] HTTP POST /api/meal/createMeal responded 400 in 87.5325 ms
2025-10-22 15:27:13.134 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:27:13.134 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:27:13.134 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:13.134 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:13.134 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 400 null text/plain; charset=utf-8 97.5945ms
2025-10-22 15:27:45.251 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 134
2025-10-22 15:27:45.257 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 15:27:45.258 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 15:27:45.259 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:45.263 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:27:45.264 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:27:45.264 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:27:45.266 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:45.268 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:27:45.269 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:27:45.270 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:45.273 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:45.274 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:45.275 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 15:27:45.275 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:27:45.276 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000008": started reading request body.
2025-10-22 15:27:45.276 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000008": done reading request body.
2025-10-22 15:27:45.278 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 15:27:45.278 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:45.278 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:45.278 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:45.281 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:45.282 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:27:45.284 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:27:45.296 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:27:45.296 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:27:45.296 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.296 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.296 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:45.296 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:45.296 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:45.297 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:45.299 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:45.299 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:45.300 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.300 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:27:45.300 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.300 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:45.301 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 19.239ms.
2025-10-22 15:27:45.302 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:27:45.302 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:27:45.302 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:27:45.302 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:27:45.302 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-10-22 15:27:45.302 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-10-22 15:27:45.303 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 33.5343ms
2025-10-22 15:27:45.303 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:45.303 +02:00 [INF] HTTP POST /api/meal/createMeal responded 400 in 37.8936 ms
2025-10-22 15:27:45.304 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:27:45.304 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:27:45.304 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:45.304 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:45.304 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 400 null text/plain; charset=utf-8 53.7494ms
2025-10-22 15:27:59.034 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 134
2025-10-22 15:27:59.034 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 15:27:59.035 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 15:27:59.035 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:59.036 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:27:59.036 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:27:59.036 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:27:59.037 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:59.037 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:27:59.038 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:27:59.039 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:59.043 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:27:59.043 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:59.044 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 15:27:59.044 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:27:59.045 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000009": started reading request body.
2025-10-22 15:27:59.045 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000009": done reading request body.
2025-10-22 15:27:59.045 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 15:27:59.045 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:59.046 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:59.046 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 15:27:59.049 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 15:27:59.049 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:27:59.053 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:27:59.054 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:27:59.054 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:27:59.054 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.055 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.055 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:59.055 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:59.057 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-10-22 15:27:59.058 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:59.061 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 15:27:59.061 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.061 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:27:59.061 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.062 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:59.077 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:59.079 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:27:59.082 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:27:59.083 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:27:59.093 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.093 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.094 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:27:59.094 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:59.094 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:27:59.094 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:27:59.099 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:27:59.100 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.100 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:27:59.100 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.100 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:59.102 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:27:59.103 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 15:27:59.104 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 54.6542ms.
2025-10-22 15:27:59.104 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:27:59.104 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:27:59.104 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:27:59.105 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:27:59.105 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:27:59.105 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Domain.Meal'.
2025-10-22 15:27:59.122 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)"] for address (mealId=[aa51c3f1-9a08-4db4-9a4e-62d515e2b733],action=[CreateMeal],controller=[Meal])
2025-10-22 15:27:59.125 +02:00 [DBG] Successfully processed template api/meal/createMeal for BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) resulting in /api/meal/createMeal and ?mealId=aa51c3f1-9a08-4db4-9a4e-62d515e2b733
2025-10-22 15:27:59.127 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)"] with result /api/meal/createMeal?mealId=aa51c3f1-9a08-4db4-9a4e-62d515e2b733
2025-10-22 15:27:59.132 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 93.2693ms
2025-10-22 15:27:59.132 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 15:27:59.132 +02:00 [INF] HTTP POST /api/meal/createMeal responded 201 in 95.5618 ms
2025-10-22 15:27:59.132 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:27:59.133 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:27:59.133 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:27:59.133 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:27:59.133 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 201 null application/json; charset=utf-8 99.5255ms
2025-10-22 15:28:38.266 +02:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5175/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733 - application/json 46
2025-10-22 15:28:38.272 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733'
2025-10-22 15:28:38.277 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)' with route pattern 'api/meal/editName/{id:Guid}' is valid for the request path '/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733'
2025-10-22 15:28:38.278 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 15:28:38.281 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:28:38.281 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:28:38.281 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:28:38.283 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 15:28:38.293 +02:00 [INF] Route matched with {action = "UpdateMealName", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateMealName(System.Guid, BistroFoodReview.Api.Models.Dto.UpdateMealNameDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:28:38.293 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:28:38.293 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:38.294 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' ...
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' using the name 'id' in request data ...
2025-10-22 15:28:38.294 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 15:28:38.294 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Guid' ...
2025-10-22 15:28:38.294 +02:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Guid'.
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' ...
2025-10-22 15:28:38.294 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' using the name '' in request data ...
2025-10-22 15:28:38.295 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:28:38.296 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:0000000A": started reading request body.
2025-10-22 15:28:38.296 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:0000000A": done reading request body.
2025-10-22 15:28:38.299 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'
2025-10-22 15:28:38.299 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 15:28:38.299 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 15:28:38.299 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' ...
2025-10-22 15:28:38.301 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 15:28:38.301 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:28:38.304 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:28:38.312 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(e => object.Equals(
        objA: EF.Property<object>(e, "Id"), 
        objB: __p_0))'
2025-10-22 15:28:38.316 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE m.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE m.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:28:38.319 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:28:38.320 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:28:38.320 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.321 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.321 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:28:38.322 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.322 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.322 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."Id" = @__p_0
LIMIT 1
2025-10-22 15:28:38.325 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."Id" = @__p_0
LIMIT 1
2025-10-22 15:28:38.325 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:38.325 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.325 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:28:38.326 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.326 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:38.326 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:28:38.326 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:28:38.327 +02:00 [DBG] The unchanged property 'Meal.EditedMealName' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-10-22 15:28:38.328 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:38.328 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:28:38.332 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.332 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.332 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:28:38.332 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.332 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:38.332 +02:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Guid), @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Meals" SET "EditedMealName" = @p0
WHERE "Id" = @p1;
2025-10-22 15:28:38.335 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Meals" SET "EditedMealName" = @p0
WHERE "Id" = @p1;
2025-10-22 15:28:38.335 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.335 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:28:38.335 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.335 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:38.335 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:38.335 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 15:28:38.336 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 34.7642ms.
2025-10-22 15:28:38.336 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:28:38.336 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:28:38.336 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:28:38.336 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:28:38.336 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:28:38.336 +02:00 [INF] Executing OkObjectResult, writing value of type 'BistroFoodReview.Api.Models.Domain.Meal'.
2025-10-22 15:28:38.336 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api) in 43.4175ms
2025-10-22 15:28:38.336 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 15:28:38.336 +02:00 [INF] HTTP PUT /api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733 responded 200 in 53.7333 ms
2025-10-22 15:28:38.337 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:28:38.337 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:28:38.337 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:38.337 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:38.337 +02:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5175/api/meal/editName/aa51c3f1-9a08-4db4-9a4e-62d515e2b733 - 200 null application/json; charset=utf-8 71.0758ms
2025-10-22 15:28:53.978 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:28:53.979 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:28:53.979 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:28:53.979 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:28:53.981 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:28:53.988 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:28:53.988 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:28:53.988 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:28:53.988 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:28:53.989 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:28:53.989 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:28:53.989 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:53.990 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:28:53.990 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:28:53.992 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:28:53.993 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:28:53.993 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:28:53.993 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.993 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.993 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:28:53.993 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:53.993 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:28:53.993 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:28:53.996 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:28:53.996 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.996 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.996 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.997 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:28:53.998 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.999 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 15:28:53.999 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:53.999 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:54.002 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11.8179ms.
2025-10-22 15:28:54.003 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:28:54.003 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:28:54.003 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:28:54.003 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:28:54.003 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:28:54.003 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:28:54.004 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 15.6765ms
2025-10-22 15:28:54.005 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:28:54.005 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 23.4169 ms
2025-10-22 15:28:54.005 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:28:54.005 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:28:54.005 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:28:54.005 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:28:54.006 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 27.6177ms
2025-10-22 15:29:12.714 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:29:12.715 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:29:12.715 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:29:12.716 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:29:12.720 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:29:12.721 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:29:12.722 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:29:12.722 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:29:12.722 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:29:12.723 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:29:12.723 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:29:12.723 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:29:12.725 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:29:12.725 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:29:12.729 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:29:12.730 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:29:12.730 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:29:12.730 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.730 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.731 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:29:12.731 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:12.731 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:12.731 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:29:12.734 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:29:12.738 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.738 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.739 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.740 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:12.740 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.740 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-10-22 15:29:12.740 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.740 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:12.741 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.1221ms.
2025-10-22 15:29:12.742 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:29:12.742 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:29:12.742 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:29:12.742 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:29:12.745 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:29:12.745 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:29:12.748 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 24.9916ms
2025-10-22 15:29:12.748 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:29:12.748 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 28.3060 ms
2025-10-22 15:29:12.749 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:29:12.749 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:29:12.749 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:12.750 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:12.750 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 36.7084ms
2025-10-22 15:29:39.667 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - null null
2025-10-22 15:29:39.671 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/ratings'
2025-10-22 15:29:39.671 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/ratings' is valid for the request path '/api/Rating/ratings'
2025-10-22 15:29:39.672 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:29:39.678 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:29:39.690 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:29:39.690 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:29:39.691 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:29:39.695 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:29:39.696 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:29:39.701 +02:00 [INF] Fetching all ratings
2025-10-22 15:29:39.704 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:29:39.706 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 15:29:39.707 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:29:39.708 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:29:39.708 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 15:29:39.723 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:29:39.729 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:29:39.729 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:29:39.729 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.729 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.730 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:29:39.730 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:39.730 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:39.730 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:29:39.733 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 15:29:39.734 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.734 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.735 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.736 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:39.737 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.737 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:29:39.738 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.738 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:39.741 +02:00 [INF] Retrieved 4 ratings from the database
2025-10-22 15:29:39.741 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 44.9784ms.
2025-10-22 15:29:39.741 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:29:39.741 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:29:39.741 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:29:39.741 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:29:39.742 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:29:39.742 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:29:39.742 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 51.6305ms
2025-10-22 15:29:39.742 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 15:29:39.742 +02:00 [INF] HTTP GET /api/Rating/ratings responded 200 in 64.7132 ms
2025-10-22 15:29:39.743 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:29:39.743 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:29:39.743 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:39.743 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:39.743 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - 200 null application/json; charset=utf-8 76.2185ms
2025-10-22 15:29:56.649 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 15:29:56.652 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 15:29:56.654 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 15:29:56.654 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:29:56.658 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:29:56.670 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:29:56.670 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:29:56.671 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:29:56.671 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:29:56.673 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 15:29:56.674 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:29:56.681 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:29:56.684 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 15:29:56.698 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:29:56.702 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:29:56.702 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:29:56.703 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.703 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.705 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:29:56.706 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:29:56.706 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-10-22 15:29:56.706 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:29:56.708 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 15:29:56.709 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:56.709 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:29:56.709 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.709 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:29:56.710 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.710 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:56.713 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.0828ms.
2025-10-22 15:29:56.713 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:29:56.714 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:29:56.714 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:29:56.714 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:29:56.714 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:29:56.715 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:29:56.720 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 49.9129ms
2025-10-22 15:29:56.721 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 15:29:56.721 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 63.5146 ms
2025-10-22 15:29:56.721 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:29:56.721 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:29:56.721 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:29:56.721 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:29:56.722 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 72.9994ms
2025-10-22 15:30:35.221 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 15:30:35.222 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 15:30:35.224 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 15:30:35.225 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:30:35.229 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:30:35.229 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:30:35.230 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:30:35.230 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:30:35.233 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:30:35.234 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:30:35.240 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:30:35.244 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:30:35.245 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:30:35.245 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.271 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.272 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:30:35.272 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:35.272 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:35.272 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:30:35.280 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 15:30:35.280 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.280 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:35.281 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.281 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:30:35.282 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.282 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:35.282 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 47.6678ms.
2025-10-22 15:30:35.282 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:30:35.283 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:30:35.283 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:30:35.283 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:30:35.283 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:30:35.283 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:30:35.283 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 53.1492ms
2025-10-22 15:30:35.283 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 15:30:35.283 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 54.6696 ms
2025-10-22 15:30:35.284 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:30:35.284 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:30:35.284 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:35.284 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:35.284 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 63.7983ms
2025-10-22 15:30:57.209 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 15:30:57.211 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:30:57.212 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:30:57.212 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:30:57.217 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:30:57.218 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:30:57.218 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:30:57.221 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:30:57.236 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:30:57.236 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:30:57.236 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:30:57.238 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:30:57.238 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:30:57.238 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:30:57.239 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:30:57.241 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:30:57.241 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:30:57.241 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:30:57.242 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:30:57.243 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000010": started reading request body.
2025-10-22 15:30:57.243 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000010": done reading request body.
2025-10-22 15:30:57.247 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 15:30:57.247 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:30:57.247 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:30:57.247 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:30:57.250 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:30:57.250 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:30:57.253 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:30:57.254 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 15:30:57.254 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:30:57.254 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:30:57.277 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:30:57.282 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:30:57.283 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:30:57.283 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.283 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.283 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:30:57.283 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:57.283 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:30:57.283 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:30:57.287 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:30:57.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:57.287 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:57.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:30:57.288 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.289 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:30:57.289 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.289 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:57.289 +02:00 [WRN] You can only rate meals that are available for today
2025-10-22 15:30:57.289 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 50.7192ms
2025-10-22 15:30:57.289 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:30:57.289 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 68.4230 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: You can only rate meals that are available for today
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 76
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 15:30:57.314 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: You can only rate meals that are available for today
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 76
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 15:30:57.322 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:30:57.322 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:30:57.322 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:30:57.322 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:30:57.322 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 112.5445ms
2025-10-22 15:31:18.933 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:31:18.938 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:31:18.939 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:31:18.940 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:31:18.943 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:31:18.944 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:31:18.944 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:31:18.945 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:31:18.947 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:31:18.947 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:31:18.949 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:31:18.950 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:31:18.950 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:31:18.950 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.950 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.951 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:18.951 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:18.951 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:18.951 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:31:18.958 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:31:18.960 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.960 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.960 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.961 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:18.962 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.962 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 15:31:18.962 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.962 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:18.963 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.2531ms.
2025-10-22 15:31:18.963 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:31:18.963 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:31:18.963 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:31:18.963 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:31:18.963 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:31:18.963 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:31:18.964 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 19.859ms
2025-10-22 15:31:18.965 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:31:18.965 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 21.1862 ms
2025-10-22 15:31:18.965 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:31:18.966 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:31:18.966 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:18.966 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:18.966 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 33.9713ms
2025-10-22 15:31:58.889 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 15:31:58.890 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 15:31:58.891 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 15:31:58.891 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:31:58.892 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 15:31:58.892 +02:00 [INF] CORS policy execution failed.
2025-10-22 15:31:58.892 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 15:31:58.892 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:31:58.893 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 15:31:58.893 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:31:58.899 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 15:31:58.900 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:31:58.900 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 15:31:58.900 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 15:31:58.900 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000012": started reading request body.
2025-10-22 15:31:58.900 +02:00 [DBG] Connection id "0HNGHDPQJ27JI", Request id "0HNGHDPQJ27JI:00000012": done reading request body.
2025-10-22 15:31:58.901 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 15:31:58.901 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:31:58.901 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:31:58.901 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 15:31:58.902 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 15:31:58.902 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:31:58.905 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:31:58.906 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:31:58.906 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:31:58.906 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.906 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.906 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:58.906 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.906 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.907 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:31:58.909 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 15:31:58.910 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.910 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.911 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.911 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.911 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.911 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:31:58.912 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.912 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.913 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 15:31:58.915 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 15:31:58.925 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 15:31:58.930 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.930 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.930 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:58.930 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.930 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.931 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:31:58.935 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 15:31:58.936 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.936 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:31:58.936 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.936 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.940 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.940 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.940 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:31:58.940 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 15:31:58.940 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 15:31:58.941 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.941 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.941 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:31:58.941 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.941 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:31:58.941 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:31:58.945 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 15:31:58.945 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.945 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:31:58.946 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.946 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.946 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:31:58.946 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 15:31:58.948 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 45.3513ms.
2025-10-22 15:31:58.948 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:31:58.948 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:31:58.948 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:31:58.948 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:31:58.948 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:31:58.948 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Dto.RatingDto'.
2025-10-22 15:31:58.949 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] for address (id=[c62b88d3-a216-48e0-a081-c26784229777],action=[SaveRating],controller=[Rating])
2025-10-22 15:31:58.950 +02:00 [DBG] Successfully processed template api/Rating/saveRating for BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) resulting in /api/Rating/saveRating and ?id=c62b88d3-a216-48e0-a081-c26784229777
2025-10-22 15:31:58.950 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] with result /api/Rating/saveRating?id=c62b88d3-a216-48e0-a081-c26784229777
2025-10-22 15:31:58.950 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 57.1888ms
2025-10-22 15:31:58.950 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 15:31:58.950 +02:00 [INF] HTTP POST /api/Rating/saveRating responded 201 in 58.3068 ms
2025-10-22 15:31:58.951 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:31:58.951 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:31:58.951 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:31:58.951 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:31:58.951 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 201 null application/json; charset=utf-8 62.6323ms
2025-10-22 15:32:14.412 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:32:14.413 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:32:14.413 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:32:14.413 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:32:14.415 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:32:14.415 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:32:14.416 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:32:14.416 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:32:14.417 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:32:14.417 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:32:14.419 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:32:14.420 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:32:14.420 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:32:14.420 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.420 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.420 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:32:14.420 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:32:14.420 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:32:14.420 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:32:14.424 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:32:14.424 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:32:14.425 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.426 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 15:32:14.426 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.426 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:32:14.426 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.94ms.
2025-10-22 15:32:14.426 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:32:14.427 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:32:14.427 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:32:14.427 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:32:14.427 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:32:14.427 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:32:14.428 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 11.7197ms
2025-10-22 15:32:14.428 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:32:14.428 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 12.9033 ms
2025-10-22 15:32:14.428 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" completed keep alive response.
2025-10-22 15:32:14.428 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:32:14.428 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:32:14.428 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:32:14.428 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 16.3928ms
2025-10-22 15:33:02.877 +02:00 [INF] Application is shutting down...
2025-10-22 15:33:02.918 +02:00 [DBG] Hosting stopping
2025-10-22 15:33:02.969 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" disconnecting.
2025-10-22 15:33:02.971 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" stopped.
2025-10-22 15:33:02.972 +02:00 [DBG] Connection id "0HNGHDPQJ27JI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:33:02.982 +02:00 [DBG] Hosting stopped
2025-10-22 15:33:47.034 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:33:48.717 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:33:49.248 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:33:49.287 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:33:50.212 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:50.313 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:33:50.562 +02:00 [DBG] Created DbConnection. (250ms).
2025-10-22 15:33:50.574 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.050 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.070 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.079 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-10-22 15:33:52.081 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-10-22 15:33:52.088 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:33:52.149 +02:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:33:52.207 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.214 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-10-22 15:33:52.224 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.229 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (7ms).
2025-10-22 15:33:52.237 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:33:52.243 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:52.245 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.246 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.246 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.246 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.246 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.246 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:33:52.248 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:33:52.248 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.249 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:33:52.249 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.249 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.250 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:33:52.252 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:52.253 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.253 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.253 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.253 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.254 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.254 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:33:52.256 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:33:52.256 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.256 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:33:52.256 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.257 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.258 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:33:52.260 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:33:52.262 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.262 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.262 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:33:52.262 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.262 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:33:52.262 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:33:52.268 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:33:52.268 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.268 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:33:52.269 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.269 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.270 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:33:52.271 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:33:52.272 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:33:52.388 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:33:52.449 +02:00 [DBG] Hosting starting
2025-10-22 15:33:52.537 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:33:52.539 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:33:52.566 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:33:52.567 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:33:52.568 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:33:52.568 +02:00 [INF] Hosting environment: Development
2025-10-22 15:33:52.568 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:33:52.569 +02:00 [DBG] Hosting started
2025-10-22 15:33:56.801 +02:00 [DBG] Connection id "0HNGHDUJA3J57" accepted.
2025-10-22 15:33:56.807 +02:00 [DBG] Connection id "0HNGHDUJA3J57" started.
2025-10-22 15:33:56.860 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:33:56.893 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:33:56.893 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:33:56.929 +02:00 [DBG] Connection id "0HNGHDUJA3J57" completed keep alive response.
2025-10-22 15:33:56.931 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 72.372ms
2025-10-22 15:33:56.944 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/index.html - null null
2025-10-22 15:33:56.944 +02:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-10-22 15:33:56.944 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:33:57.027 +02:00 [DBG] Connection id "0HNGHDUJA3J57" completed keep alive response.
2025-10-22 15:33:57.027 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/index.html - 200 null text/html;charset=utf-8 83.3073ms
2025-10-22 15:33:57.293 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:33:57.293 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:33:57.293 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:33:57.303 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:33:57.304 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:33:57.378 +02:00 [DBG] Connection id "0HNGHDUJA3J57" completed keep alive response.
2025-10-22 15:33:57.379 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 85.8472ms
2025-10-22 15:34:05.688 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:34:05.709 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:34:05.713 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:34:05.715 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:34:05.735 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:34:05.740 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:34:05.758 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:34:05.759 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:34:05.759 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:34:05.759 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:34:05.760 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:34:05.760 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:34:05.762 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:34:05.858 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:34:05.858 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:34:05.862 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:34:10.784 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:34:10.809 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:34:10.840 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:34:10.843 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:34:11.036 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:34:11.064 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:34:11.064 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:34:11.065 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.067 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.067 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:34:11.067 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:34:11.072 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:34:11.074 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:34:11.137 +02:00 [INF] Executed DbCommand (65ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:34:11.169 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.195 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.198 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.207 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.210 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.211 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.212 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:34:11.214 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.214 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 77ms reading results.
2025-10-22 15:34:11.216 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:34:11.217 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:14.695 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:38:15.001 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:38:15.112 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:38:15.125 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:38:15.235 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.248 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:38:15.267 +02:00 [DBG] Created DbConnection. (18ms).
2025-10-22 15:38:15.269 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.371 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.375 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.378 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:38:15.378 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:38:15.382 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:38:15.401 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:38:15.424 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.428 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-10-22 15:38:15.430 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.432 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:38:15.433 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:38:15.434 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.435 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.435 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.435 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.435 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.435 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.435 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:38:15.436 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:38:15.436 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.436 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:38:15.437 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.437 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.437 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:38:15.438 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.438 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.438 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.439 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.439 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.439 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.439 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:38:15.462 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:38:15.462 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.462 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:38:15.462 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.462 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.463 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:38:15.465 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:38:15.471 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.471 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.471 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:15.471 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.472 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:15.472 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:38:15.475 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:38:15.476 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.476 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:38:15.476 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.476 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.477 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:38:15.478 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:15.479 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:15.502 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:38:15.521 +02:00 [DBG] Hosting starting
2025-10-22 15:38:15.536 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:38:15.537 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:38:15.542 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:38:15.542 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:38:15.542 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:38:15.542 +02:00 [INF] Hosting environment: Development
2025-10-22 15:38:15.542 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:38:15.542 +02:00 [DBG] Hosting started
2025-10-22 15:38:15.797 +02:00 [DBG] Connection id "0HNGHE10G7SM5" received FIN.
2025-10-22 15:38:15.803 +02:00 [DBG] Connection id "0HNGHE10G7SM5" accepted.
2025-10-22 15:38:15.804 +02:00 [DBG] Connection id "0HNGHE10G7SM5" started.
2025-10-22 15:38:15.812 +02:00 [DBG] Connection id "0HNGHE10G7SM5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:38:15.814 +02:00 [DBG] Connection id "0HNGHE10G7SM5" disconnecting.
2025-10-22 15:38:15.817 +02:00 [DBG] Connection id "0HNGHE10G7SM5" stopped.
2025-10-22 15:38:16.385 +02:00 [DBG] Connection id "0HNGHE10G7SM6" accepted.
2025-10-22 15:38:16.386 +02:00 [DBG] Connection id "0HNGHE10G7SM6" started.
2025-10-22 15:38:16.549 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:38:16.568 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:38:16.569 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:38:16.612 +02:00 [DBG] Connection id "0HNGHE10G7SM6" completed keep alive response.
2025-10-22 15:38:16.615 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 72.9096ms
2025-10-22 15:38:17.043 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:38:17.044 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:38:17.044 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:38:17.049 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:38:17.050 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:38:17.121 +02:00 [DBG] Connection id "0HNGHE10G7SM6" completed keep alive response.
2025-10-22 15:38:17.122 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 78.1852ms
2025-10-22 15:38:41.518 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:38:41.530 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:38:41.531 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:38:41.533 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:38:41.544 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:38:41.551 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:38:41.564 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:38:41.565 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:38:41.566 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:38:41.567 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:38:41.645 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:38:41.645 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:38:41.647 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:38:41.660 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:38:41.671 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:38:41.685 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:38:41.686 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:38:41.787 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:38:41.807 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:38:41.807 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:38:41.808 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.809 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.810 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:38:41.810 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:38:41.813 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:38:41.816 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:38:41.848 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:38:41.878 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.898 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.901 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.910 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.913 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.914 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:38:41.916 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.916 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 67ms reading results.
2025-10-22 15:38:41.918 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.918 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:38:41.931 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 280.8657ms.
2025-10-22 15:38:41.934 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:38:41.936 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:38:41.936 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:38:41.936 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:38:41.936 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:38:41.936 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:38:41.970 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 401.586ms
2025-10-22 15:38:41.971 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:38:41.974 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 425.2864 ms
2025-10-22 15:38:41.977 +02:00 [DBG] Connection id "0HNGHE10G7SM6" completed keep alive response.
2025-10-22 15:38:41.978 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:38:41.981 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:38:41.982 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:38:41.982 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 465.5756ms
2025-10-22 15:40:35.099 +02:00 [INF] Application is shutting down...
2025-10-22 15:40:35.101 +02:00 [DBG] Hosting stopping
2025-10-22 15:40:35.113 +02:00 [DBG] Connection id "0HNGHE10G7SM6" disconnecting.
2025-10-22 15:40:35.114 +02:00 [DBG] Connection id "0HNGHE10G7SM6" stopped.
2025-10-22 15:40:35.115 +02:00 [DBG] Connection id "0HNGHE10G7SM6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:40:35.122 +02:00 [DBG] Hosting stopped
2025-10-22 15:42:37.058 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 15:42:37.415 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 15:42:37.566 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:42:37.583 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 15:42:37.723 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.738 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:42:37.767 +02:00 [DBG] Created DbConnection. (27ms).
2025-10-22 15:42:37.772 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.856 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.859 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.862 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 15:42:37.862 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 15:42:37.866 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:42:37.885 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 15:42:37.907 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.911 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 22ms reading results.
2025-10-22 15:42:37.913 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.915 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 15:42:37.916 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 15:42:37.917 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.918 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.918 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.918 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.918 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.918 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.918 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:42:37.922 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 15:42:37.922 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.922 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:42:37.922 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.922 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.922 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 15:42:37.923 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.924 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.924 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.924 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.924 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.924 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.924 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:42:37.926 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 15:42:37.926 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.926 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:42:37.926 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.926 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.926 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 15:42:37.927 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 15:42:37.927 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.928 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.928 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:37.928 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.928 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:37.928 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:42:37.929 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 15:42:37.929 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.929 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 15:42:37.929 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.929 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.930 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:42:37.931 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:37.932 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:37.945 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 15:42:37.964 +02:00 [DBG] Hosting starting
2025-10-22 15:42:37.978 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 15:42:37.978 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 15:42:37.983 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 15:42:37.983 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 15:42:37.983 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 15:42:37.983 +02:00 [INF] Hosting environment: Development
2025-10-22 15:42:37.983 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 15:42:37.983 +02:00 [DBG] Hosting started
2025-10-22 15:42:38.298 +02:00 [DBG] Connection id "0HNGHE3ENKO03" received FIN.
2025-10-22 15:42:38.302 +02:00 [DBG] Connection id "0HNGHE3ENKO03" accepted.
2025-10-22 15:42:38.303 +02:00 [DBG] Connection id "0HNGHE3ENKO03" started.
2025-10-22 15:42:38.307 +02:00 [DBG] Connection id "0HNGHE3ENKO03" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:42:38.309 +02:00 [DBG] Connection id "0HNGHE3ENKO03" disconnecting.
2025-10-22 15:42:38.311 +02:00 [DBG] Connection id "0HNGHE3ENKO03" stopped.
2025-10-22 15:42:38.815 +02:00 [DBG] Connection id "0HNGHE3ENKO04" accepted.
2025-10-22 15:42:38.816 +02:00 [DBG] Connection id "0HNGHE3ENKO04" started.
2025-10-22 15:42:39.207 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 15:42:39.221 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 15:42:39.222 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:42:39.252 +02:00 [DBG] Connection id "0HNGHE3ENKO04" completed keep alive response.
2025-10-22 15:42:39.253 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 47.7486ms
2025-10-22 15:42:39.457 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 15:42:39.458 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 15:42:39.458 +02:00 [DBG] Request did not match any endpoints
2025-10-22 15:42:39.463 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:42:39.464 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 15:42:39.538 +02:00 [DBG] Connection id "0HNGHE3ENKO04" completed keep alive response.
2025-10-22 15:42:39.538 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 80.9389ms
2025-10-22 15:42:46.685 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 15:42:46.715 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 15:42:46.718 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 15:42:46.723 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:42:46.739 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 15:42:46.743 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:42:46.756 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 15:42:46.756 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 15:42:46.756 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 15:42:46.757 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 15:42:46.757 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 15:42:46.757 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 15:42:46.757 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:42:46.842 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 15:42:46.842 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 15:42:46.845 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 15:42:46.856 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 15:42:46.866 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 15:42:46.880 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 15:42:46.882 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 15:42:46.989 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 15:42:47.010 +02:00 [DBG] Creating DbConnection.
2025-10-22 15:42:47.010 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 15:42:47.012 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.013 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.013 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 15:42:47.013 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 15:42:47.017 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 15:42:47.020 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:42:47.049 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 15:42:47.076 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.097 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.100 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.112 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.113 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.113 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.113 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.114 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.115 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.115 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 15:42:47.117 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.117 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 67ms reading results.
2025-10-22 15:42:47.119 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.119 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 15:42:47.135 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 286.4886ms.
2025-10-22 15:42:47.139 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 15:42:47.141 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 15:42:47.142 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 15:42:47.142 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 15:42:47.142 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 15:42:47.142 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 15:42:47.180 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 421.0018ms
2025-10-22 15:42:47.181 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 15:42:47.184 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 439.9896 ms
2025-10-22 15:42:47.187 +02:00 [DBG] Connection id "0HNGHE3ENKO04" completed keep alive response.
2025-10-22 15:42:47.188 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 15:42:47.191 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 15:42:47.192 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 15:42:47.192 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 509.2926ms
2025-10-22 15:43:05.972 +02:00 [INF] Application is shutting down...
2025-10-22 15:43:05.974 +02:00 [DBG] Hosting stopping
2025-10-22 15:43:05.995 +02:00 [DBG] Connection id "0HNGHE3ENKO04" disconnecting.
2025-10-22 15:43:05.997 +02:00 [DBG] Connection id "0HNGHE3ENKO04" stopped.
2025-10-22 15:43:05.997 +02:00 [DBG] Connection id "0HNGHE3ENKO04" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 15:43:06.006 +02:00 [DBG] Hosting stopped
2025-10-22 16:14:46.512 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 16:14:47.031 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 16:14:47.186 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:14:47.200 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 16:14:47.328 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:14:47.340 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:14:47.359 +02:00 [DBG] Created DbConnection. (17ms).
2025-10-22 16:14:47.361 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.473 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.477 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:14:47.480 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 16:14:47.480 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 16:14:47.485 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:14:47.564 +02:00 [INF] Executed DbCommand (76ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:14:47.587 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.591 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-10-22 16:14:47.593 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.595 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 16:14:47.597 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 16:14:47.598 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:14:47.599 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.599 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.600 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:14:47.600 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:14:47.600 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:14:47.600 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:14:47.630 +02:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:14:47.630 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.631 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:14:47.631 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.631 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:14:47.631 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 16:14:47.632 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:14:47.632 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.633 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.633 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:14:47.633 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:14:47.633 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:14:47.633 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:14:47.634 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:14:47.634 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.634 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:14:47.634 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.634 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:14:47.635 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 16:14:47.636 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:14:47.636 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.636 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.637 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:14:47.637 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:14:47.637 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:14:47.637 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:14:47.638 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:14:47.638 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.638 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:14:47.638 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.639 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:14:47.641 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:14:47.642 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:14:47.642 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:14:47.668 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 16:14:47.687 +02:00 [DBG] Hosting starting
2025-10-22 16:14:47.702 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 16:14:47.704 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 16:14:47.711 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 16:14:47.711 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 16:14:47.712 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 16:14:47.712 +02:00 [INF] Hosting environment: Development
2025-10-22 16:14:47.712 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 16:14:47.712 +02:00 [DBG] Hosting started
2025-10-22 16:14:47.751 +02:00 [DBG] Connection id "0HNGHELDOAU4F" received FIN.
2025-10-22 16:14:47.753 +02:00 [DBG] Connection id "0HNGHELDOAU4F" accepted.
2025-10-22 16:14:47.754 +02:00 [DBG] Connection id "0HNGHELDOAU4F" started.
2025-10-22 16:14:47.757 +02:00 [DBG] Connection id "0HNGHELDOAU4F" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:14:47.758 +02:00 [DBG] Connection id "0HNGHELDOAU4F" disconnecting.
2025-10-22 16:14:47.761 +02:00 [DBG] Connection id "0HNGHELDOAU4F" stopped.
2025-10-22 16:14:48.530 +02:00 [DBG] Connection id "0HNGHELDOAU4G" accepted.
2025-10-22 16:14:48.536 +02:00 [DBG] Connection id "0HNGHELDOAU4G" started.
2025-10-22 16:14:49.164 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 16:14:49.225 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 16:14:49.226 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:14:49.269 +02:00 [DBG] Connection id "0HNGHELDOAU4G" completed keep alive response.
2025-10-22 16:14:49.272 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 111.0536ms
2025-10-22 16:14:49.631 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 16:14:49.631 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 16:14:49.632 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:14:49.656 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:14:49.662 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:14:49.849 +02:00 [DBG] Connection id "0HNGHELDOAU4G" completed keep alive response.
2025-10-22 16:14:49.851 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 220.5283ms
2025-10-22 16:15:23.180 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 16:15:23.193 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 16:15:23.194 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 16:15:23.198 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 16:15:23.210 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 16:15:23.214 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 16:15:23.230 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:15:23.231 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:15:23.232 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:15:23.232 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:15:23.232 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:15:23.232 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:15:23.234 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:15:23.317 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 16:15:23.318 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:15:23.321 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:15:23.333 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:15:23.340 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 16:15:23.353 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 16:15:23.431 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 16:15:23.443 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:15:23.443 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:15:23.444 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:15:23.445 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:15:23.445 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:15:23.445 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:15:23.445 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:15:23.445 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 16:15:23.482 +02:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 16:15:23.517 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.539 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.542 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.545 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.545 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.545 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.545 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.545 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.545 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.546 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:15:23.547 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:15:23.547 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 64ms reading results.
2025-10-22 16:15:23.549 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:15:23.549 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:15:23.560 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 236.5456ms.
2025-10-22 16:15:23.564 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:15:23.566 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:15:23.566 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:15:23.566 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:15:23.566 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:15:23.567 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:15:23.599 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 364.2245ms
2025-10-22 16:15:23.600 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 16:15:23.603 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 387.8878 ms
2025-10-22 16:15:23.606 +02:00 [DBG] Connection id "0HNGHELDOAU4G" completed keep alive response.
2025-10-22 16:15:23.607 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:15:23.610 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:15:23.611 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 16:15:23.611 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 435.8228ms
2025-10-22 16:16:13.260 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 16:16:13.266 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 16:16:13.268 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 16:16:13.268 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 16:16:13.270 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 16:16:13.275 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 16:16:13.275 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:16:13.275 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:16:13.276 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:16:13.276 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:16:13.276 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:16:13.276 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 16:16:13.278 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 16:16:13.278 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:16:13.312 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:16:13.313 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 16:16:13.319 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 16:16:13.321 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:16:13.321 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:16:13.321 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:13.321 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:13.322 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:16:13.322 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:16:13.322 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:16:13.322 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 16:16:13.337 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 16:16:13.342 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:13.344 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:13.344 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:13.344 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 6ms reading results.
2025-10-22 16:16:13.345 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:13.345 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:16:13.349 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 70.8186ms.
2025-10-22 16:16:13.350 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:16:13.351 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:16:13.351 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:16:13.351 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:16:13.351 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:16:13.351 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:16:13.357 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 80.6776ms
2025-10-22 16:16:13.357 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 16:16:13.357 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 86.9452 ms
2025-10-22 16:16:13.357 +02:00 [DBG] Connection id "0HNGHELDOAU4G" completed keep alive response.
2025-10-22 16:16:13.357 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:16:13.358 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:13.358 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:16:13.358 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 98.6886ms
2025-10-22 16:16:28.019 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 16:16:28.022 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 16:16:28.023 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 16:16:28.024 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 16:16:28.027 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 16:16:28.033 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:16:28.033 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:16:28.033 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:16:28.033 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:16:28.033 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:16:28.033 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:16:28.033 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:16:28.035 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:16:28.035 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:16:28.041 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:16:28.052 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 16:16:28.059 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 16:16:28.059 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 16:16:28.112 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 16:16:28.132 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:16:28.132 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:16:28.132 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:28.133 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:28.133 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:16:28.133 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:16:28.138 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 16:16:28.140 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 16:16:28.161 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 16:16:28.161 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.161 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.162 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.172 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.175 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.175 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.175 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.175 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.175 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.176 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.176 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.176 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.176 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.176 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:16:28.176 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:28.176 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-10-22 16:16:28.176 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:28.176 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:16:28.181 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 146.2127ms.
2025-10-22 16:16:28.182 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:16:28.182 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:16:28.182 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:16:28.182 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:16:28.182 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:16:28.182 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:16:28.187 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 153.7299ms
2025-10-22 16:16:28.187 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 16:16:28.187 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 160.3742 ms
2025-10-22 16:16:28.187 +02:00 [DBG] Connection id "0HNGHELDOAU4G" completed keep alive response.
2025-10-22 16:16:28.187 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:16:28.187 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:16:28.187 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:16:28.188 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 168.9696ms
2025-10-22 16:18:24.105 +02:00 [DBG] Connection id "0HNGHELDOAU4G" received FIN.
2025-10-22 16:18:24.113 +02:00 [DBG] Connection id "0HNGHELDOAU4G" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:18:24.118 +02:00 [DBG] Connection id "0HNGHELDOAU4G" disconnecting.
2025-10-22 16:18:24.121 +02:00 [DBG] Connection id "0HNGHELDOAU4G" stopped.
2025-10-22 16:20:51.056 +02:00 [DBG] Connection id "0HNGHELDOAU4H" accepted.
2025-10-22 16:20:51.061 +02:00 [DBG] Connection id "0HNGHELDOAU4H" started.
2025-10-22 16:20:51.078 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 16:20:51.080 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 16:20:51.080 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 16:20:51.081 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 16:20:51.090 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 16:20:51.091 +02:00 [INF] CORS policy execution failed.
2025-10-22 16:20:51.091 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 16:20:51.095 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 16:20:51.130 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 16:20:51.131 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:20:51.131 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:20:51.131 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 16:20:51.131 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:20:51.131 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 16:20:51.132 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:20:51.140 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:20:51.153 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 16:20:51.156 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 16:20:51.156 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 16:20:51.166 +02:00 [DBG] Connection id "0HNGHELDOAU4H", Request id "0HNGHELDOAU4H:00000001": started reading request body.
2025-10-22 16:20:51.167 +02:00 [DBG] Connection id "0HNGHELDOAU4H", Request id "0HNGHELDOAU4H:00000001": done reading request body.
2025-10-22 16:20:51.182 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 16:20:51.182 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 16:20:51.182 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 16:20:51.182 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 16:20:51.224 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 16:20:51.227 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:20:51.240 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:20:51.243 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 16:20:51.245 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 16:20:51.245 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 16:20:51.278 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 16:20:51.292 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:20:51.293 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:20:51.293 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.640 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.640 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:20:51.641 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:20:51.642 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-10-22 16:20:51.642 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 16:20:51.725 +02:00 [INF] Executed DbCommand (83ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 16:20:51.726 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:20:51.726 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:20:51.726 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:20:51.727 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:20:51.728 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:20:51.729 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.729 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 16:20:51.729 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.729 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:20:51.730 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 16:20:51.732 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 16:20:51.739 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 16:20:51.744 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.744 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.744 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:20:51.744 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:20:51.744 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:20:51.744 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 16:20:51.750 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 16:20:51.750 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.751 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:20:51.751 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.751 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:20:51.751 +02:00 [WRN] You have already rated this meal option today.
2025-10-22 16:20:51.752 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 620.4945ms
2025-10-22 16:20:51.752 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 16:20:51.753 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 658.6736 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 16:20:51.781 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 16:20:51.791 +02:00 [DBG] Connection id "0HNGHELDOAU4H" completed keep alive response.
2025-10-22 16:20:51.791 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:20:51.791 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:20:51.791 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:20:51.791 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 713.3797ms
2025-10-22 16:21:31.567 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 16:21:31.571 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 16:21:31.571 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 16:21:31.571 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 16:21:31.574 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 16:21:31.575 +02:00 [INF] CORS policy execution failed.
2025-10-22 16:21:31.575 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 16:21:31.578 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 16:21:31.580 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 16:21:31.580 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:21:31.580 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:21:31.581 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 16:21:31.581 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:21:31.581 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 16:21:31.582 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:21:31.588 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:21:31.588 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 16:21:31.589 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 16:21:31.589 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 16:21:31.589 +02:00 [DBG] Connection id "0HNGHELDOAU4H", Request id "0HNGHELDOAU4H:00000002": started reading request body.
2025-10-22 16:21:31.589 +02:00 [DBG] Connection id "0HNGHELDOAU4H", Request id "0HNGHELDOAU4H:00000002": done reading request body.
2025-10-22 16:21:31.590 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 16:21:31.590 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 16:21:31.590 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 16:21:31.590 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 16:21:31.590 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 16:21:31.591 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:21:31.592 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:21:31.595 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:21:31.596 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:21:31.596 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.596 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.596 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:21:31.596 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:31.596 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:31.596 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 16:21:31.602 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 16:21:31.603 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.603 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.603 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.603 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.604 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.604 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 16:21:31.604 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.604 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:21:31.604 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.605 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.605 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:21:31.605 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:31.605 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:31.605 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 16:21:31.606 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 16:21:31.606 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.606 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:21:31.606 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.606 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:21:31.643 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.646 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.649 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 16:21:31.652 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 16:21:31.665 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 16:21:31.723 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.723 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.724 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:21:31.724 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:31.724 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:31.724 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 16:21:31.737 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 16:21:31.739 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.739 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 16:21:31.740 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.740 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:21:31.746 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:31.748 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 16:21:31.752 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 161.2142ms.
2025-10-22 16:21:31.752 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:21:31.752 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:21:31.752 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:21:31.752 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:21:31.752 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:21:31.752 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Dto.RatingDto'.
2025-10-22 16:21:31.772 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] for address (id=[9cdf11f5-9da8-4759-95da-042e67718572],action=[SaveRating],controller=[Rating])
2025-10-22 16:21:31.775 +02:00 [DBG] Successfully processed template api/Rating/saveRating for BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) resulting in /api/Rating/saveRating and ?id=9cdf11f5-9da8-4759-95da-042e67718572
2025-10-22 16:21:31.776 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] with result /api/Rating/saveRating?id=9cdf11f5-9da8-4759-95da-042e67718572
2025-10-22 16:21:31.778 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 196.3522ms
2025-10-22 16:21:31.778 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 16:21:31.778 +02:00 [INF] HTTP POST /api/Rating/saveRating responded 201 in 200.4484 ms
2025-10-22 16:21:31.778 +02:00 [DBG] Connection id "0HNGHELDOAU4H" completed keep alive response.
2025-10-22 16:21:31.778 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:21:31.778 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:31.778 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:21:31.778 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 201 null application/json; charset=utf-8 212.2691ms
2025-10-22 16:21:42.417 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 16:21:42.419 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 16:21:42.419 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 16:21:42.419 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 16:21:42.424 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 16:21:42.426 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:21:42.426 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:21:42.426 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:21:42.426 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:21:42.426 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:21:42.426 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:21:42.426 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:21:42.428 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:21:42.429 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:21:42.431 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:21:42.433 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:21:42.433 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:21:42.433 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:42.434 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:42.434 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:21:42.434 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:42.434 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:21:42.434 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 16:21:42.440 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 16:21:42.440 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.441 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.441 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.442 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.443 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:21:42.443 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:42.443 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 16:21:42.443 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:42.443 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:21:42.444 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.5087ms.
2025-10-22 16:21:42.445 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:21:42.445 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:21:42.445 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:21:42.445 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:21:42.445 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:21:42.445 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:21:42.445 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 19.0617ms
2025-10-22 16:21:42.446 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 16:21:42.446 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 24.4489 ms
2025-10-22 16:21:42.446 +02:00 [DBG] Connection id "0HNGHELDOAU4H" completed keep alive response.
2025-10-22 16:21:42.446 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:21:42.446 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:21:42.446 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:21:42.446 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 29.2351ms
2025-10-22 16:21:59.560 +02:00 [INF] Application is shutting down...
2025-10-22 16:21:59.570 +02:00 [DBG] Hosting stopping
2025-10-22 16:21:59.584 +02:00 [DBG] Connection id "0HNGHELDOAU4H" disconnecting.
2025-10-22 16:21:59.584 +02:00 [DBG] Connection id "0HNGHELDOAU4H" stopped.
2025-10-22 16:21:59.584 +02:00 [DBG] Connection id "0HNGHELDOAU4H" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:21:59.588 +02:00 [DBG] Hosting stopped
2025-10-22 16:35:46.552 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 16:35:46.862 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 16:35:46.975 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:35:46.987 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 16:35:47.099 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:35:47.111 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:35:47.130 +02:00 [DBG] Created DbConnection. (17ms).
2025-10-22 16:35:47.132 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.235 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.240 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:35:47.243 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 16:35:47.244 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-10-22 16:35:47.248 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:35:47.346 +02:00 [INF] Executed DbCommand (95ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:35:47.367 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.371 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 21ms reading results.
2025-10-22 16:35:47.372 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.374 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 16:35:47.375 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 16:35:47.377 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:35:47.377 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.378 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:35:47.378 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:35:47.378 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:35:47.378 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:35:47.381 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:35:47.381 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.381 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:35:47.381 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.381 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:35:47.382 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 16:35:47.383 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:35:47.384 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.384 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.384 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:35:47.384 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:35:47.384 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:35:47.384 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:35:47.390 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:35:47.390 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.390 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:35:47.390 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.391 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:35:47.392 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 16:35:47.394 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:35:47.394 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.394 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.394 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:35:47.394 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:35:47.394 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:35:47.394 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:35:47.398 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:35:47.398 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.398 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:35:47.398 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.398 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:35:47.399 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:35:47.401 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:35:47.402 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:35:47.416 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 16:35:47.435 +02:00 [DBG] Hosting starting
2025-10-22 16:35:47.455 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 16:35:47.458 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 16:35:47.462 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 16:35:47.463 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 16:35:47.463 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 16:35:47.463 +02:00 [INF] Hosting environment: Development
2025-10-22 16:35:47.463 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 16:35:47.463 +02:00 [DBG] Hosting started
2025-10-22 16:35:47.604 +02:00 [DBG] Connection id "0HNGHF1577NQD" received FIN.
2025-10-22 16:35:47.608 +02:00 [DBG] Connection id "0HNGHF1577NQD" accepted.
2025-10-22 16:35:47.608 +02:00 [DBG] Connection id "0HNGHF1577NQD" started.
2025-10-22 16:35:47.614 +02:00 [DBG] Connection id "0HNGHF1577NQD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:35:47.615 +02:00 [DBG] Connection id "0HNGHF1577NQD" disconnecting.
2025-10-22 16:35:47.617 +02:00 [DBG] Connection id "0HNGHF1577NQD" stopped.
2025-10-22 16:35:48.268 +02:00 [DBG] Connection id "0HNGHF1577NQE" accepted.
2025-10-22 16:35:48.273 +02:00 [DBG] Connection id "0HNGHF1577NQE" started.
2025-10-22 16:35:48.700 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 16:35:48.712 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 16:35:48.712 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:35:48.731 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:35:48.732 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 32.8965ms
2025-10-22 16:35:48.928 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 16:35:48.928 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 16:35:48.928 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:35:48.939 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:35:48.939 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:35:49.000 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:35:49.000 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 72.3763ms
2025-10-22 16:36:09.883 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 16:36:09.892 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 16:36:09.894 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 16:36:09.895 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 16:36:09.904 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 16:36:09.908 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 16:36:09.923 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:36:09.924 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:36:09.925 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:36:09.925 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:36:09.925 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:36:09.925 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:36:09.927 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:10.012 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 16:36:10.013 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:10.015 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:36:10.026 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:36:10.034 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 16:36:10.047 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 16:36:10.127 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 16:36:10.138 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:36:10.138 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:36:10.139 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:10.140 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:10.141 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:36:10.141 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:10.141 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:10.141 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 16:36:10.151 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 16:36:10.186 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.210 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.213 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.216 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.216 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.216 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.216 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.216 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.216 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.217 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:36:10.218 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:10.218 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 67ms reading results.
2025-10-22 16:36:10.220 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:10.221 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:10.234 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 216.1947ms.
2025-10-22 16:36:10.238 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:36:10.240 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:36:10.240 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:36:10.240 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:36:10.240 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:36:10.240 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:36:10.274 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 346.067ms
2025-10-22 16:36:10.275 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 16:36:10.278 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 368.6307 ms
2025-10-22 16:36:10.281 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:36:10.282 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:36:10.285 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:10.286 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 16:36:10.287 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 403.8635ms
2025-10-22 16:36:21.319 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=Ed - null null
2025-10-22 16:36:21.324 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/autocomplete'
2025-10-22 16:36:21.324 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)' with route pattern 'api/meal/autocomplete' is valid for the request path '/api/meal/autocomplete'
2025-10-22 16:36:21.324 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:21.328 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:21.348 +02:00 [INF] Route matched with {action = "Autocomplete", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Autocomplete(System.String) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:36:21.348 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:36:21.348 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:36:21.348 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:36:21.348 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:36:21.348 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:36:21.348 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:21.350 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:21.359 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' ...
2025-10-22 16:36:21.361 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' using the name 'query' in request data ...
2025-10-22 16:36:21.361 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:21.361 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:21.361 +02:00 [DBG] Attempting to validate the bound parameter 'query' of type 'System.String' ...
2025-10-22 16:36:21.364 +02:00 [DBG] Done attempting to validate the bound parameter 'query' of type 'System.String'.
2025-10-22 16:36:21.365 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:36:21.396 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:36:21.404 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Where(m => !(string.IsNullOrEmpty(m.EditedMealName)) && m.EditedMealName.ToLower().Contains(__ToLower_0))
    .Select(m => m.EditedMealName)
    .Distinct()
    .Take(__p_1)'
2025-10-22 16:36:21.431 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-10-22 16:36:21.441 +02:00 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__ToLower_0_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__ToLower_0", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<string>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT DISTINCT TOP(@__p_1) m.EditedMealName
            FROM Meals AS m
            WHERE (m.EditedMealName IS NOT NULL && (m.EditedMealName != '')) && (lower(m.EditedMealName) LIKE @__ToLower_0_contains)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT DISTINCT TOP(@__p_1) m.EditedMealName
            FROM Meals AS m
            WHERE (m.EditedMealName IS NOT NULL && (m.EditedMealName != '')) && (lower(m.EditedMealName) LIKE @__ToLower_0_contains), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            string value1;
            value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
            return value1;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-10-22 16:36:21.452 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:36:21.452 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:36:21.452 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:21.452 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:21.452 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:36:21.452 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:21.456 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 16:36:21.458 +02:00 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:21.472 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:21.472 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:21.472 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:36:21.473 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:21.473 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:21.473 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 107.8437ms.
2025-10-22 16:36:21.474 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:36:21.474 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:36:21.474 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:36:21.474 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:36:21.474 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:36:21.474 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.AutoCompleteMealNameDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:36:21.478 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) in 129.1974ms
2025-10-22 16:36:21.478 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:21.478 +02:00 [INF] HTTP GET /api/meal/autocomplete responded 200 in 150.1280 ms
2025-10-22 16:36:21.478 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:36:21.478 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:36:21.478 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:21.478 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:21.478 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=Ed - 200 null application/json; charset=utf-8 159.492ms
2025-10-22 16:36:29.515 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=ed - null null
2025-10-22 16:36:29.516 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/autocomplete'
2025-10-22 16:36:29.517 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)' with route pattern 'api/meal/autocomplete' is valid for the request path '/api/meal/autocomplete'
2025-10-22 16:36:29.517 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:29.518 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:29.519 +02:00 [INF] Route matched with {action = "Autocomplete", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Autocomplete(System.String) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:36:29.521 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:36:29.521 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:36:29.521 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:36:29.522 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:36:29.522 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:36:29.522 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:29.526 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:29.527 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' ...
2025-10-22 16:36:29.527 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' using the name 'query' in request data ...
2025-10-22 16:36:29.527 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:29.528 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:29.528 +02:00 [DBG] Attempting to validate the bound parameter 'query' of type 'System.String' ...
2025-10-22 16:36:29.528 +02:00 [DBG] Done attempting to validate the bound parameter 'query' of type 'System.String'.
2025-10-22 16:36:29.528 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:36:29.532 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:36:29.537 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:36:29.538 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:36:29.538 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:29.538 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:29.538 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:36:29.538 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:29.538 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:29.538 +02:00 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:29.540 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:29.541 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:29.541 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:36:29.541 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:29.541 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:29.541 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 13.1925ms.
2025-10-22 16:36:29.542 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:36:29.542 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:36:29.543 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:36:29.543 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:36:29.543 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:36:29.543 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.AutoCompleteMealNameDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:36:29.546 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) in 23.2212ms
2025-10-22 16:36:29.546 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:29.547 +02:00 [INF] HTTP GET /api/meal/autocomplete responded 200 in 28.4345 ms
2025-10-22 16:36:29.547 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:36:29.548 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:36:29.548 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:29.548 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:29.548 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=ed - 200 null application/json; charset=utf-8 33.7033ms
2025-10-22 16:36:48.363 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=bd - null null
2025-10-22 16:36:48.365 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/autocomplete'
2025-10-22 16:36:48.366 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)' with route pattern 'api/meal/autocomplete' is valid for the request path '/api/meal/autocomplete'
2025-10-22 16:36:48.366 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:48.368 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:48.370 +02:00 [INF] Route matched with {action = "Autocomplete", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Autocomplete(System.String) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:36:48.370 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:36:48.370 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:36:48.370 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:36:48.371 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:36:48.371 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:36:48.371 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:48.373 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:48.373 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' ...
2025-10-22 16:36:48.374 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' using the name 'query' in request data ...
2025-10-22 16:36:48.374 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:48.374 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:48.374 +02:00 [DBG] Attempting to validate the bound parameter 'query' of type 'System.String' ...
2025-10-22 16:36:48.374 +02:00 [DBG] Done attempting to validate the bound parameter 'query' of type 'System.String'.
2025-10-22 16:36:48.376 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:36:48.381 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:36:48.383 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:36:48.383 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:36:48.383 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:48.383 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:48.383 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:36:48.383 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:48.384 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:36:48.384 +02:00 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:48.386 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:48.387 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:48.387 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:36:48.388 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:48.389 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:48.390 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 14.284ms.
2025-10-22 16:36:48.391 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:36:48.393 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:36:48.393 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:36:48.393 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:36:48.393 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:36:48.393 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.AutoCompleteMealNameDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:36:48.395 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) in 23.4192ms
2025-10-22 16:36:48.395 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:48.395 +02:00 [INF] HTTP GET /api/meal/autocomplete responded 200 in 26.6149 ms
2025-10-22 16:36:48.395 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:36:48.395 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:36:48.396 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:48.396 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:48.396 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=bd - 200 null application/json; charset=utf-8 32.723ms
2025-10-22 16:36:55.019 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=e - null null
2025-10-22 16:36:55.020 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/autocomplete'
2025-10-22 16:36:55.020 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)' with route pattern 'api/meal/autocomplete' is valid for the request path '/api/meal/autocomplete'
2025-10-22 16:36:55.020 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:55.020 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:55.020 +02:00 [INF] Route matched with {action = "Autocomplete", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Autocomplete(System.String) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 16:36:55.021 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:36:55.021 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:36:55.021 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 16:36:55.021 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:36:55.021 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 16:36:55.021 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:55.022 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 16:36:55.022 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' ...
2025-10-22 16:36:55.022 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' using the name 'query' in request data ...
2025-10-22 16:36:55.023 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:55.023 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 16:36:55.023 +02:00 [DBG] Attempting to validate the bound parameter 'query' of type 'System.String' ...
2025-10-22 16:36:55.023 +02:00 [DBG] Done attempting to validate the bound parameter 'query' of type 'System.String'.
2025-10-22 16:36:55.023 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:36:55.024 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:36:55.025 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:36:55.026 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:36:55.026 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:55.026 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:55.026 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:36:55.028 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 16:36:55.029 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-10-22 16:36:55.029 +02:00 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:55.031 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 16:36:55.031 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:55.031 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:36:55.032 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:55.032 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:55.032 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.7625ms.
2025-10-22 16:36:55.032 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:36:55.033 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:36:55.033 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:36:55.033 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:36:55.033 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:36:55.033 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.AutoCompleteMealNameDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:36:55.033 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) in 12.0709ms
2025-10-22 16:36:55.033 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 16:36:55.033 +02:00 [INF] HTTP GET /api/meal/autocomplete responded 200 in 13.1627 ms
2025-10-22 16:36:55.034 +02:00 [DBG] Connection id "0HNGHF1577NQE" completed keep alive response.
2025-10-22 16:36:55.034 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:36:55.034 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:36:55.034 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:36:55.034 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=e - 200 null application/json; charset=utf-8 15.0925ms
2025-10-22 16:37:00.149 +02:00 [INF] Application is shutting down...
2025-10-22 16:37:00.150 +02:00 [DBG] Hosting stopping
2025-10-22 16:37:00.171 +02:00 [DBG] Connection id "0HNGHF1577NQE" disconnecting.
2025-10-22 16:37:00.173 +02:00 [DBG] Connection id "0HNGHF1577NQE" stopped.
2025-10-22 16:37:00.173 +02:00 [DBG] Connection id "0HNGHF1577NQE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:37:00.180 +02:00 [DBG] Hosting stopped
2025-10-22 16:42:46.320 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 16:42:46.709 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 16:42:46.829 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:42:46.842 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 16:42:46.953 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:42:46.967 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:42:46.995 +02:00 [DBG] Created DbConnection. (28ms).
2025-10-22 16:42:46.998 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.092 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.096 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:42:47.100 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 16:42:47.100 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-10-22 16:42:47.104 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:42:47.124 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:42:47.146 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.151 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-10-22 16:42:47.152 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.155 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 16:42:47.157 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 16:42:47.158 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:42:47.159 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.159 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.159 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:42:47.159 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:47.159 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:47.159 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:42:47.181 +02:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:42:47.181 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.181 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:42:47.181 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.181 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:42:47.183 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 16:42:47.184 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:42:47.185 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.186 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.186 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:42:47.186 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:47.186 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:47.187 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:42:47.210 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:42:47.210 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.211 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:42:47.211 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.211 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:42:47.212 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 16:42:47.213 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:42:47.214 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.214 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.214 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:42:47.214 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:47.214 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:47.215 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:42:47.216 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:42:47.216 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.216 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:42:47.217 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.217 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:42:47.218 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:42:47.219 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:47.219 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:42:47.236 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 16:42:47.252 +02:00 [DBG] Hosting starting
2025-10-22 16:42:47.272 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 16:42:47.273 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 16:42:47.279 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 16:42:47.280 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 16:42:47.280 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 16:42:47.280 +02:00 [INF] Hosting environment: Development
2025-10-22 16:42:47.280 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 16:42:47.280 +02:00 [DBG] Hosting started
2025-10-22 16:42:47.738 +02:00 [DBG] Connection id "0HNGHF52DUF3L" received FIN.
2025-10-22 16:42:47.745 +02:00 [DBG] Connection id "0HNGHF52DUF3L" accepted.
2025-10-22 16:42:47.746 +02:00 [DBG] Connection id "0HNGHF52DUF3L" started.
2025-10-22 16:42:47.754 +02:00 [DBG] Connection id "0HNGHF52DUF3L" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:42:47.757 +02:00 [DBG] Connection id "0HNGHF52DUF3L" disconnecting.
2025-10-22 16:42:47.760 +02:00 [DBG] Connection id "0HNGHF52DUF3L" stopped.
2025-10-22 16:42:48.078 +02:00 [DBG] Connection id "0HNGHF52DUF3M" accepted.
2025-10-22 16:42:48.078 +02:00 [DBG] Connection id "0HNGHF52DUF3M" started.
2025-10-22 16:42:48.587 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 16:42:48.606 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 16:42:48.606 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:42:48.624 +02:00 [DBG] Connection id "0HNGHF52DUF3M" completed keep alive response.
2025-10-22 16:42:48.625 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 40.0273ms
2025-10-22 16:42:48.842 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 16:42:48.842 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 16:42:48.842 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:42:48.850 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:42:48.850 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:42:48.949 +02:00 [DBG] Connection id "0HNGHF52DUF3M" completed keep alive response.
2025-10-22 16:42:48.950 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 107.7453ms
2025-10-22 16:42:51.753 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - null null
2025-10-22 16:42:51.770 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/ratings'
2025-10-22 16:42:51.772 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/ratings' is valid for the request path '/api/Rating/ratings'
2025-10-22 16:42:51.773 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 16:42:51.790 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 16:42:51.795 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 16:42:51.808 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 16:42:51.809 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:42:51.809 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:42:51.809 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 16:42:51.809 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:42:51.809 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 16:42:51.810 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:42:51.891 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 16:42:51.892 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:42:51.895 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:42:51.896 +02:00 [INF] Fetching all ratings
2025-10-22 16:42:51.906 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:42:51.913 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 16:42:51.925 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 16:42:51.927 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 16:42:51.928 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 16:42:52.009 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 16:42:52.022 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:42:52.023 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:42:52.024 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:52.026 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:52.026 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:42:52.026 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:52.026 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:42:52.027 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 16:42:52.035 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 16:42:52.056 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.077 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.080 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.085 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.086 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.088 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.089 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.092 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.093 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.093 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.093 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.093 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.093 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:42:52.095 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:52.095 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 59ms reading results.
2025-10-22 16:42:52.097 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:52.097 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:42:52.104 +02:00 [INF] Retrieved 6 ratings from the database
2025-10-22 16:42:52.108 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 210.1624ms.
2025-10-22 16:42:52.111 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:42:52.112 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:42:52.112 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:42:52.112 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:42:52.112 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:42:52.113 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:42:52.145 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 333.533ms
2025-10-22 16:42:52.145 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 16:42:52.147 +02:00 [INF] HTTP GET /api/Rating/ratings responded 200 in 351.7617 ms
2025-10-22 16:42:52.150 +02:00 [DBG] Connection id "0HNGHF52DUF3M" completed keep alive response.
2025-10-22 16:42:52.151 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:42:52.153 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:42:52.154 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:42:52.155 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/ratings - 200 null application/json; charset=utf-8 401.7359ms
2025-10-22 16:44:47.692 +02:00 [DBG] Connection id "0HNGHF52DUF3M" received FIN.
2025-10-22 16:44:47.704 +02:00 [DBG] Connection id "0HNGHF52DUF3M" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:44:47.707 +02:00 [DBG] Connection id "0HNGHF52DUF3M" disconnecting.
2025-10-22 16:44:47.710 +02:00 [DBG] Connection id "0HNGHF52DUF3M" stopped.
2025-10-22 16:45:45.805 +02:00 [INF] Application is shutting down...
2025-10-22 16:45:45.806 +02:00 [DBG] Hosting stopping
2025-10-22 16:45:45.837 +02:00 [DBG] Hosting stopped
2025-10-22 16:46:13.509 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 16:46:13.842 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 16:46:13.957 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:46:13.969 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 16:46:14.077 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:46:14.090 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:46:14.110 +02:00 [DBG] Created DbConnection. (19ms).
2025-10-22 16:46:14.113 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.205 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.208 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:46:14.211 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 16:46:14.212 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 16:46:14.215 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:46:14.235 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 16:46:14.255 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.259 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 21ms reading results.
2025-10-22 16:46:14.261 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.263 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 16:46:14.264 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 16:46:14.265 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:46:14.265 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.265 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.266 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:46:14.266 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:14.266 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:14.266 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:46:14.267 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 16:46:14.267 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.267 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:46:14.267 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.267 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:46:14.267 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 16:46:14.268 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:46:14.268 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.269 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.269 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:46:14.269 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:14.269 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:14.269 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:46:14.269 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 16:46:14.269 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.269 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:46:14.269 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.270 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:46:14.270 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 16:46:14.271 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 16:46:14.271 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.271 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.271 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:46:14.271 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:14.271 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:14.271 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:46:14.274 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 16:46:14.274 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.274 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 16:46:14.274 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.274 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:46:14.275 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:46:14.276 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:14.276 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:46:14.295 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 16:46:14.314 +02:00 [DBG] Hosting starting
2025-10-22 16:46:14.328 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 16:46:14.328 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 16:46:14.332 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 16:46:14.332 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 16:46:14.332 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 16:46:14.332 +02:00 [INF] Hosting environment: Development
2025-10-22 16:46:14.332 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 16:46:14.333 +02:00 [DBG] Hosting started
2025-10-22 16:46:14.415 +02:00 [DBG] Connection id "0HNGHF700V6HP" received FIN.
2025-10-22 16:46:14.419 +02:00 [DBG] Connection id "0HNGHF700V6HP" accepted.
2025-10-22 16:46:14.419 +02:00 [DBG] Connection id "0HNGHF700V6HP" started.
2025-10-22 16:46:14.425 +02:00 [DBG] Connection id "0HNGHF700V6HP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:46:14.426 +02:00 [DBG] Connection id "0HNGHF700V6HP" disconnecting.
2025-10-22 16:46:14.428 +02:00 [DBG] Connection id "0HNGHF700V6HP" stopped.
2025-10-22 16:46:14.916 +02:00 [DBG] Connection id "0HNGHF700V6HQ" accepted.
2025-10-22 16:46:14.917 +02:00 [DBG] Connection id "0HNGHF700V6HQ" started.
2025-10-22 16:46:15.385 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 16:46:15.402 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 16:46:15.402 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:46:15.420 +02:00 [DBG] Connection id "0HNGHF700V6HQ" completed keep alive response.
2025-10-22 16:46:15.421 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 36.791ms
2025-10-22 16:46:15.625 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 16:46:15.626 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 16:46:15.626 +02:00 [DBG] Request did not match any endpoints
2025-10-22 16:46:15.633 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:46:15.634 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 16:46:15.705 +02:00 [DBG] Connection id "0HNGHF700V6HQ" completed keep alive response.
2025-10-22 16:46:15.705 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 79.717ms
2025-10-22 16:46:32.370 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/allRatings - null null
2025-10-22 16:46:32.380 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/allRatings'
2025-10-22 16:46:32.381 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/allRatings' is valid for the request path '/api/Rating/allRatings'
2025-10-22 16:46:32.382 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 16:46:32.392 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 16:46:32.394 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 16:46:32.403 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 16:46:32.404 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 16:46:32.404 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 16:46:32.404 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 16:46:32.404 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 16:46:32.404 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 16:46:32.405 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:46:32.485 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 16:46:32.486 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 16:46:32.491 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 16:46:32.493 +02:00 [INF] Fetching all ratings
2025-10-22 16:46:32.503 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 16:46:32.511 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 16:46:32.524 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 16:46:32.525 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 16:46:32.525 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 16:46:32.606 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 16:46:32.620 +02:00 [DBG] Creating DbConnection.
2025-10-22 16:46:32.620 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 16:46:32.621 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:32.622 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:32.622 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 16:46:32.623 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:32.623 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 16:46:32.623 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 16:46:32.633 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 16:46:32.660 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.689 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.693 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.700 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.702 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.705 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.706 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.710 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.710 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.711 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.712 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.712 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.712 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 16:46:32.714 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:32.714 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 81ms reading results.
2025-10-22 16:46:32.716 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:32.716 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 16:46:32.726 +02:00 [INF] Retrieved 6 ratings from the database
2025-10-22 16:46:32.729 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 234.9707ms.
2025-10-22 16:46:32.732 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 16:46:32.734 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 16:46:32.734 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 16:46:32.734 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 16:46:32.734 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 16:46:32.734 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 16:46:32.766 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 358.6707ms
2025-10-22 16:46:32.766 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 16:46:32.769 +02:00 [INF] HTTP GET /api/Rating/allRatings responded 200 in 373.2561 ms
2025-10-22 16:46:32.772 +02:00 [DBG] Connection id "0HNGHF700V6HQ" completed keep alive response.
2025-10-22 16:46:32.773 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 16:46:32.776 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 16:46:32.777 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 16:46:32.777 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/allRatings - 200 null application/json; charset=utf-8 407.8663ms
2025-10-22 16:46:39.010 +02:00 [INF] Application is shutting down...
2025-10-22 16:46:39.011 +02:00 [DBG] Hosting stopping
2025-10-22 16:46:39.031 +02:00 [DBG] Connection id "0HNGHF700V6HQ" disconnecting.
2025-10-22 16:46:39.035 +02:00 [DBG] Connection id "0HNGHF700V6HQ" stopped.
2025-10-22 16:46:39.035 +02:00 [DBG] Connection id "0HNGHF700V6HQ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 16:46:39.048 +02:00 [DBG] Hosting stopped
2025-10-22 17:31:25.912 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 17:31:25.985 +02:00 [DBG] Hosting starting
2025-10-22 17:31:26.011 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 17:31:26.012 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 17:31:26.024 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 17:31:26.024 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 17:31:26.024 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 17:31:26.024 +02:00 [INF] Hosting environment: Development
2025-10-22 17:31:26.024 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 17:31:26.024 +02:00 [DBG] Hosting started
2025-10-22 17:31:26.340 +02:00 [DBG] Connection id "0HNGHG087SU25" received FIN.
2025-10-22 17:31:26.345 +02:00 [DBG] Connection id "0HNGHG087SU25" accepted.
2025-10-22 17:31:26.346 +02:00 [DBG] Connection id "0HNGHG087SU25" started.
2025-10-22 17:31:26.357 +02:00 [DBG] Connection id "0HNGHG087SU25" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:31:26.362 +02:00 [DBG] Connection id "0HNGHG087SU25" disconnecting.
2025-10-22 17:31:26.365 +02:00 [DBG] Connection id "0HNGHG087SU25" stopped.
2025-10-22 17:31:26.708 +02:00 [DBG] Connection id "0HNGHG087SU26" accepted.
2025-10-22 17:31:26.709 +02:00 [DBG] Connection id "0HNGHG087SU26" started.
2025-10-22 17:31:27.199 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 17:31:27.213 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 17:31:27.213 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:31:27.231 +02:00 [DBG] Connection id "0HNGHG087SU26" completed keep alive response.
2025-10-22 17:31:27.233 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 34.8654ms
2025-10-22 17:31:27.409 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - null null
2025-10-22 17:31:27.410 +02:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-10-22 17:31:27.410 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:31:27.412 +02:00 [DBG] Connection id "0HNGHG087SU26" received FIN.
2025-10-22 17:31:27.413 +02:00 [DBG] Connection id "0HNGHG087SU26" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:31:27.414 +02:00 [DBG] Connection id "0HNGHG087SU26" disconnecting.
2025-10-22 17:31:27.423 +02:00 [DBG] The request was aborted by the client.
2025-10-22 17:31:27.423 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - 499 628 image/png 13.6943ms
2025-10-22 17:31:27.424 +02:00 [DBG] Connection id "0HNGHG087SU26" stopped.
2025-10-22 17:31:27.450 +02:00 [DBG] Connection id "0HNGHG087SU27" accepted.
2025-10-22 17:31:27.450 +02:00 [DBG] Connection id "0HNGHG087SU27" started.
2025-10-22 17:31:27.450 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 17:31:27.451 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 17:31:27.451 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:31:27.459 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:31:27.459 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:31:27.535 +02:00 [DBG] Connection id "0HNGHG087SU27" completed keep alive response.
2025-10-22 17:31:27.535 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 84.2664ms
2025-10-22 17:31:49.085 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 17:31:49.098 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 17:31:49.098 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 17:31:49.099 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 17:31:49.101 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 17:31:49.105 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 17:31:49.133 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 17:31:49.134 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:31:49.134 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:31:49.134 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:31:49.135 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:31:49.135 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:31:49.136 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 17:31:49.225 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:31:49.310 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 17:31:49.311 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 17:31:49.315 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:31:49.690 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 17:31:49.836 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:31:49.851 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 17:31:50.004 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:31:50.027 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:31:50.057 +02:00 [DBG] Created DbConnection. (28ms).
2025-10-22 17:31:50.059 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:31:50.180 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:31:50.185 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:31:50.190 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:31:50.191 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 17:31:50.196 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:31:50.222 +02:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:31:50.294 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:31:50.309 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:31:50.313 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:31:50.322 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 93ms reading results.
2025-10-22 17:31:50.327 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:31:50.332 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (5ms).
2025-10-22 17:31:50.346 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1028.571ms.
2025-10-22 17:31:50.350 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:31:50.352 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:31:50.352 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:31:50.352 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:31:50.353 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:31:50.353 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:31:50.385 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 1246.581ms
2025-10-22 17:31:50.386 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 17:31:50.389 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 1281.9010 ms
2025-10-22 17:31:50.393 +02:00 [DBG] Connection id "0HNGHG087SU27" completed keep alive response.
2025-10-22 17:31:50.396 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:31:50.400 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:31:50.402 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:31:50.403 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 1318.4485ms
2025-10-22 17:32:34.398 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 17:32:34.404 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 17:32:34.404 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 17:32:34.405 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:32:34.409 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:32:34.420 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:32:34.420 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:32:34.420 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:32:34.420 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:32:34.420 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:32:34.421 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:32:34.421 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:32:34.425 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:32:34.426 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:32:34.452 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:32:34.468 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 17:32:34.508 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 17:32:34.509 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 17:32:34.593 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:32:34.610 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:32:34.610 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:32:34.610 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:32:34.611 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:32:34.611 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:32:34.611 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:32:34.615 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 17:32:34.617 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:32:34.651 +02:00 [INF] Executed DbCommand (33ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:32:34.656 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.669 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.672 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.681 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.684 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.685 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.685 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.685 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.685 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:32:34.685 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:32:34.685 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 33ms reading results.
2025-10-22 17:32:34.685 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:32:34.685 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:32:34.689 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 262.7336ms.
2025-10-22 17:32:34.689 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:32:34.689 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:32:34.689 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:32:34.689 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:32:34.689 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:32:34.689 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:32:34.699 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 278.127ms
2025-10-22 17:32:34.699 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:32:34.699 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 290.1702 ms
2025-10-22 17:32:34.699 +02:00 [DBG] Connection id "0HNGHG087SU27" completed keep alive response.
2025-10-22 17:32:34.699 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:32:34.699 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:32:34.700 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:32:34.700 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 302.355ms
2025-10-22 17:33:29.142 +02:00 [INF] Application is shutting down...
2025-10-22 17:33:29.145 +02:00 [DBG] Hosting stopping
2025-10-22 17:33:29.171 +02:00 [DBG] Connection id "0HNGHG087SU27" disconnecting.
2025-10-22 17:33:29.173 +02:00 [DBG] Connection id "0HNGHG087SU27" stopped.
2025-10-22 17:33:29.174 +02:00 [DBG] Connection id "0HNGHG087SU27" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:33:29.180 +02:00 [DBG] Hosting stopped
2025-10-22 17:34:31.759 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 17:34:31.820 +02:00 [DBG] Hosting starting
2025-10-22 17:34:31.847 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 17:34:31.848 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 17:34:31.861 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 17:34:31.861 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 17:34:31.861 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 17:34:31.861 +02:00 [INF] Hosting environment: Development
2025-10-22 17:34:31.862 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 17:34:31.862 +02:00 [DBG] Hosting started
2025-10-22 17:34:32.242 +02:00 [DBG] Connection id "0HNGHG1VKPUIJ" received FIN.
2025-10-22 17:34:32.248 +02:00 [DBG] Connection id "0HNGHG1VKPUIJ" accepted.
2025-10-22 17:34:32.250 +02:00 [DBG] Connection id "0HNGHG1VKPUIJ" started.
2025-10-22 17:34:32.259 +02:00 [DBG] Connection id "0HNGHG1VKPUIJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:34:32.264 +02:00 [DBG] Connection id "0HNGHG1VKPUIJ" disconnecting.
2025-10-22 17:34:32.266 +02:00 [DBG] Connection id "0HNGHG1VKPUIJ" stopped.
2025-10-22 17:34:32.569 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" accepted.
2025-10-22 17:34:32.570 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" started.
2025-10-22 17:34:33.017 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 17:34:33.028 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 17:34:33.028 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:34:33.042 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" completed keep alive response.
2025-10-22 17:34:33.043 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 27.1117ms
2025-10-22 17:34:33.259 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 17:34:33.259 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 17:34:33.259 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:34:33.265 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:34:33.265 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:34:33.333 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" completed keep alive response.
2025-10-22 17:34:33.333 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 73.9246ms
2025-10-22 17:34:40.553 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 17:34:40.570 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 17:34:40.571 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 17:34:40.572 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:34:40.578 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 17:34:40.580 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:34:40.595 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:34:40.596 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:34:40.596 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:34:40.596 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:34:40.597 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:34:40.597 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:34:40.598 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:34:40.691 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:34:40.772 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 17:34:40.773 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:34:40.776 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:34:41.121 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 17:34:41.263 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:34:41.279 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 17:34:41.425 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:34:41.448 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:34:41.479 +02:00 [DBG] Created DbConnection. (29ms).
2025-10-22 17:34:41.481 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:34:41.588 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:34:41.592 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:34:41.597 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:34:41.599 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 17:34:41.604 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:34:41.630 +02:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:34:41.705 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:34:41.720 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:34:41.720 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:34:41.724 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:34:41.731 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 95ms reading results.
2025-10-22 17:34:41.736 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:34:41.740 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (4ms).
2025-10-22 17:34:41.755 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 975.7435ms.
2025-10-22 17:34:41.759 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:34:41.761 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:34:41.761 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:34:41.761 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:34:41.761 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:34:41.761 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:34:41.794 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 1193.5766ms
2025-10-22 17:34:41.795 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:34:41.798 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 1215.8327 ms
2025-10-22 17:34:41.802 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" completed keep alive response.
2025-10-22 17:34:41.805 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:34:41.810 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:34:41.812 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:34:41.813 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 1260.7591ms
2025-10-22 17:35:30.483 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 144
2025-10-22 17:35:30.489 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 17:35:30.490 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 17:35:30.491 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 17:35:30.494 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 17:35:30.494 +02:00 [INF] CORS policy execution failed.
2025-10-22 17:35:30.494 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 17:35:30.495 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 17:35:30.513 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:35:30.513 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:35:30.513 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:35:30.514 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:35:30.514 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:35:30.514 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:35:30.514 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:35:30.519 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:35:30.529 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 17:35:30.530 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 17:35:30.531 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 17:35:30.538 +02:00 [DBG] Connection id "0HNGHG1VKPUIK", Request id "0HNGHG1VKPUIK:00000004": started reading request body.
2025-10-22 17:35:30.539 +02:00 [DBG] Connection id "0HNGHG1VKPUIK", Request id "0HNGHG1VKPUIK:00000004": done reading request body.
2025-10-22 17:35:30.549 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 17:35:30.549 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 17:35:30.549 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 17:35:30.549 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 17:35:30.559 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 17:35:30.561 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:35:30.580 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:35:30.597 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(m => m.MealOptionId == __mealOptionId_0 && m.Date.Date == __mealDate_Date_1)'
2025-10-22 17:35:30.672 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 17:35:30.689 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:35:30.690 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:35:30.690 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:35:30.690 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:35:30.690 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:35:30.692 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:35:30.699 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-10-22 17:35:30.703 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 17:35:30.845 +02:00 [INF] Executed DbCommand (145ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 17:35:30.852 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:35:30.859 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:35:30.859 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-10-22 17:35:30.859 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:35:30.859 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:35:30.861 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 299.3453ms.
2025-10-22 17:35:30.861 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:35:30.861 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:35:30.861 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:35:30.861 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:35:30.861 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter' and content type 'text/plain' to write the response.
2025-10-22 17:35:30.862 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-10-22 17:35:30.863 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 348.5331ms
2025-10-22 17:35:30.863 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 17:35:30.863 +02:00 [INF] HTTP POST /api/meal/createMeal responded 400 in 368.1370 ms
2025-10-22 17:35:30.863 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" completed keep alive response.
2025-10-22 17:35:30.863 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:35:30.863 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:35:30.863 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:35:30.864 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 400 null text/plain; charset=utf-8 380.9858ms
2025-10-22 17:36:02.940 +02:00 [INF] Application is shutting down...
2025-10-22 17:36:02.978 +02:00 [DBG] Hosting stopping
2025-10-22 17:36:03.034 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" disconnecting.
2025-10-22 17:36:03.036 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" stopped.
2025-10-22 17:36:03.038 +02:00 [DBG] Connection id "0HNGHG1VKPUIK" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:36:03.052 +02:00 [DBG] Hosting stopped
2025-10-22 17:36:28.971 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:36:29.283 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 17:36:29.396 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:36:29.407 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()'
2025-10-22 17:36:29.524 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId
        FROM Ratings AS r) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId
        FROM Ratings AS r, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:36:29.537 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:36:29.555 +02:00 [DBG] Created DbConnection. (16ms).
2025-10-22 17:36:29.558 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.633 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.636 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:36:29.639 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:36:29.639 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-10-22 17:36:29.643 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId"
FROM "Ratings" AS r
2025-10-22 17:36:29.662 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId"
FROM "Ratings" AS r
2025-10-22 17:36:29.696 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.708 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.710 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.710 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.710 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.710 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.710 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.710 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.711 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.711 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.711 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.712 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.717 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 51ms reading results.
2025-10-22 17:36:29.718 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.720 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (1ms).
2025-10-22 17:36:29.721 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()'
2025-10-22 17:36:29.724 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:36:29.725 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.726 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.726 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:36:29.726 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.726 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.726 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 17:36:29.727 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 17:36:29.735 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.740 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.742 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.742 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-10-22 17:36:29.743 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.743 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:36:29.743 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 17:36:29.745 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:36:29.746 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.746 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.746 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:36:29.746 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.746 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.746 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:36:29.747 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:36:29.748 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.750 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.750 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.750 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.750 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.750 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.751 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.751 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 17:36:29.751 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.751 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:36:29.751 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 17:36:29.753 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:36:29.754 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.754 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.754 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:36:29.754 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.754 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.754 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:36:29.757 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:36:29.759 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.761 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.761 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.761 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.761 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 17:36:29.761 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.762 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:36:29.762 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:36:29.763 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:36:29.775 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 17:36:29.807 +02:00 [DBG] Executing 15 update commands as a batch.
2025-10-22 17:36:29.807 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.807 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.808 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 17:36:29.810 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 17:36:29.810 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:36:29.810 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:36:29.812 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:36:29.814 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Meals"
WHERE "Id" = @p0;
DELETE FROM "Ratings"
WHERE "Id" = @p1;
DELETE FROM "Ratings"
WHERE "Id" = @p2;
DELETE FROM "Ratings"
WHERE "Id" = @p3;
DELETE FROM "Ratings"
WHERE "Id" = @p4;
DELETE FROM "Ratings"
WHERE "Id" = @p5;
DELETE FROM "Ratings"
WHERE "Id" = @p6;
DELETE FROM "Meals"
WHERE "Id" = @p7;
DELETE FROM "Meals"
WHERE "Id" = @p8;
DELETE FROM "Meals"
WHERE "Id" = @p9;
DELETE FROM "Users"
WHERE "Id" = @p10;
DELETE FROM "Users"
WHERE "Id" = @p11;
DELETE FROM "MealOptions"
WHERE "Id" = @p12;
DELETE FROM "MealOptions"
WHERE "Id" = @p13;
DELETE FROM "MealOptions"
WHERE "Id" = @p14;
2025-10-22 17:36:29.829 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Meals"
WHERE "Id" = @p0;
DELETE FROM "Ratings"
WHERE "Id" = @p1;
DELETE FROM "Ratings"
WHERE "Id" = @p2;
DELETE FROM "Ratings"
WHERE "Id" = @p3;
DELETE FROM "Ratings"
WHERE "Id" = @p4;
DELETE FROM "Ratings"
WHERE "Id" = @p5;
DELETE FROM "Ratings"
WHERE "Id" = @p6;
DELETE FROM "Meals"
WHERE "Id" = @p7;
DELETE FROM "Meals"
WHERE "Id" = @p8;
DELETE FROM "Meals"
WHERE "Id" = @p9;
DELETE FROM "Users"
WHERE "Id" = @p10;
DELETE FROM "Users"
WHERE "Id" = @p11;
DELETE FROM "MealOptions"
WHERE "Id" = @p12;
DELETE FROM "MealOptions"
WHERE "Id" = @p13;
DELETE FROM "MealOptions"
WHERE "Id" = @p14;
2025-10-22 17:36:29.832 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.832 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 17:36:29.833 +02:00 [DBG] Committing transaction.
2025-10-22 17:36:29.835 +02:00 [DBG] Committed transaction.
2025-10-22 17:36:29.836 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:29.836 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:36:29.837 +02:00 [DBG] Disposing transaction.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.839 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.840 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.840 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.840 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.840 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.840 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:36:29.840 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 15 entities written to the database.
2025-10-22 17:36:29.855 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 17:36:29.871 +02:00 [DBG] Hosting starting
2025-10-22 17:36:29.888 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 17:36:29.889 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 17:36:29.894 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 17:36:29.894 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 17:36:29.894 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 17:36:29.894 +02:00 [INF] Hosting environment: Development
2025-10-22 17:36:29.894 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 17:36:29.894 +02:00 [DBG] Hosting started
2025-10-22 17:36:29.992 +02:00 [DBG] Connection id "0HNGHG32NOD61" received FIN.
2025-10-22 17:36:29.994 +02:00 [DBG] Connection id "0HNGHG32NOD61" accepted.
2025-10-22 17:36:29.995 +02:00 [DBG] Connection id "0HNGHG32NOD61" started.
2025-10-22 17:36:29.999 +02:00 [DBG] Connection id "0HNGHG32NOD61" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:36:30.000 +02:00 [DBG] Connection id "0HNGHG32NOD61" disconnecting.
2025-10-22 17:36:30.001 +02:00 [DBG] Connection id "0HNGHG32NOD61" stopped.
2025-10-22 17:36:30.511 +02:00 [DBG] Connection id "0HNGHG32NOD62" accepted.
2025-10-22 17:36:30.513 +02:00 [DBG] Connection id "0HNGHG32NOD62" started.
2025-10-22 17:36:30.908 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 17:36:30.923 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 17:36:30.923 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:36:30.965 +02:00 [DBG] Connection id "0HNGHG32NOD62" completed keep alive response.
2025-10-22 17:36:30.966 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 59.1547ms
2025-10-22 17:36:31.178 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 17:36:31.179 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 17:36:31.179 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:36:31.192 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:36:31.192 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:36:31.265 +02:00 [DBG] Connection id "0HNGHG32NOD62" completed keep alive response.
2025-10-22 17:36:31.266 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 87.8326ms
2025-10-22 17:36:36.451 +02:00 [INF] Application is shutting down...
2025-10-22 17:36:36.458 +02:00 [DBG] Hosting stopping
2025-10-22 17:36:36.510 +02:00 [DBG] Connection id "0HNGHG32NOD62" disconnecting.
2025-10-22 17:36:36.511 +02:00 [DBG] Connection id "0HNGHG32NOD62" stopped.
2025-10-22 17:36:36.512 +02:00 [DBG] Connection id "0HNGHG32NOD62" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:36:36.519 +02:00 [DBG] Hosting stopped
2025-10-22 17:36:36.527 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:36:36.529 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:36:36.530 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:09.800 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:37:10.174 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 17:37:10.297 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:37:10.313 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()
    .Any()'
2025-10-22 17:37:10.456 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM MealOptions AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 17:37:10.471 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:37:10.499 +02:00 [DBG] Created DbConnection. (26ms).
2025-10-22 17:37:10.502 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:10.813 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:10.820 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:10.827 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-10-22 17:37:10.829 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-10-22 17:37:10.834 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 17:37:10.896 +02:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "MealOptions" AS m)
2025-10-22 17:37:10.936 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:10.944 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 42ms reading results.
2025-10-22 17:37:10.947 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:10.954 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (5ms).
2025-10-22 17:37:11.015 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.018 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.018 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.020 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.023 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.029 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 17:37:11.077 +02:00 [DBG] Executing 3 update commands as a batch.
2025-10-22 17:37:11.077 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.078 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.079 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 17:37:11.081 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 17:37:11.082 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.082 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.085 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-10-22 17:37:11.090 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Guid), @p3='?', @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p0, @p1);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p2, @p3);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p4, @p5);
2025-10-22 17:37:11.137 +02:00 [INF] Executed DbCommand (52ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Guid), @p3='?', @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p0, @p1);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p2, @p3);
INSERT INTO "MealOptions" ("Id", "Name")
VALUES (@p4, @p5);
2025-10-22 17:37:11.140 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.140 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 17:37:11.141 +02:00 [DBG] Committing transaction.
2025-10-22 17:37:11.153 +02:00 [DBG] Committed transaction.
2025-10-22 17:37:11.153 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.154 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.154 +02:00 [DBG] Disposing transaction.
2025-10-22 17:37:11.160 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.161 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.161 +02:00 [DBG] An entity of type 'MealOption' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.162 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 3 entities written to the database.
2025-10-22 17:37:11.163 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-10-22 17:37:11.167 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Users AS u), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 17:37:11.169 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.169 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.169 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.170 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.170 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.170 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 17:37:11.172 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS u)
2025-10-22 17:37:11.172 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.172 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.172 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.172 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.178 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.179 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.179 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.179 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.183 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 17:37:11.185 +02:00 [DBG] Executing 2 update commands as a batch.
2025-10-22 17:37:11.185 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.185 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.186 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 17:37:11.186 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 17:37:11.186 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.186 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.186 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.187 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = Guid), @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p0, @p1, @p2);
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p3, @p4, @p5);
2025-10-22 17:37:11.197 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?' (DbType = Guid), @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p0, @p1, @p2);
INSERT INTO "Users" ("Id", "FirstName", "LastName")
VALUES (@p3, @p4, @p5);
2025-10-22 17:37:11.197 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.197 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.198 +02:00 [DBG] Committing transaction.
2025-10-22 17:37:11.201 +02:00 [DBG] Committed transaction.
2025-10-22 17:37:11.201 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.201 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.202 +02:00 [DBG] Disposing transaction.
2025-10-22 17:37:11.202 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.203 +02:00 [DBG] An entity of type 'User' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.203 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 2 entities written to the database.
2025-10-22 17:37:11.204 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Any()'
2025-10-22 17:37:11.207 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Meals AS m), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 17:37:11.208 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.208 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.209 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.209 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.209 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.209 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 17:37:11.211 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Meals" AS m)
2025-10-22 17:37:11.211 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.211 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.211 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.211 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.214 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 17:37:11.262 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:37:11.268 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.268 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.268 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.268 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.268 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.269 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:37:11.272 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:37:11.277 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.278 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-10-22 17:37:11.278 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.279 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.501 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.518 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.519 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.519 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.519 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.519 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.519 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.520 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.525 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 17:37:11.528 +02:00 [DBG] Executing 3 update commands as a batch.
2025-10-22 17:37:11.528 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.528 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.528 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 17:37:11.528 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 17:37:11.528 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.528 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.529 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.529 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p8, @p9, @p10, @p11);
2025-10-22 17:37:11.681 +02:00 [INF] Executed DbCommand (152ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = DateTime), @p10='?', @p11='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p8, @p9, @p10, @p11);
2025-10-22 17:37:11.682 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.682 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.682 +02:00 [DBG] Committing transaction.
2025-10-22 17:37:11.683 +02:00 [DBG] Committed transaction.
2025-10-22 17:37:11.683 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.683 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.683 +02:00 [DBG] Disposing transaction.
2025-10-22 17:37:11.683 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.683 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.683 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.683 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 3 entities written to the database.
2025-10-22 17:37:11.684 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Any()'
2025-10-22 17:37:11.685 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Ratings AS r), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-10-22 17:37:11.686 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.686 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.686 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.686 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.686 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.686 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 17:37:11.688 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Ratings" AS r)
2025-10-22 17:37:11.688 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.688 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.688 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.689 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.689 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()'
2025-10-22 17:37:11.695 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId
        FROM Meals AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:37:11.697 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.698 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.698 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.698 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.698 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.698 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 17:37:11.699 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
2025-10-22 17:37:11.700 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.700 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.700 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.700 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.700 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 17:37:11.703 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:37:11.705 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.705 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.705 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.705 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.705 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.705 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:37:11.706 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:37:11.707 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.707 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.707 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.707 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.719 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.721 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.722 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.722 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.722 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.722 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.722 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.722 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.723 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.723 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.723 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.723 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.723 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.723 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:37:11.726 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 17:37:11.727 +02:00 [DBG] Executing 4 update commands as a batch.
2025-10-22 17:37:11.727 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.727 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.727 +02:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-10-22 17:37:11.727 +02:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-10-22 17:37:11.727 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:11.727 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.727 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:11.727 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Double), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Double), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Double), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p8, @p9, @p10, @p11);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p12, @p13, @p14, @p15);
2025-10-22 17:37:11.733 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Double), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Double), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Double), @p15='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p8, @p9, @p10, @p11);
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p12, @p13, @p14, @p15);
2025-10-22 17:37:11.734 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.734 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:37:11.734 +02:00 [DBG] Committing transaction.
2025-10-22 17:37:11.735 +02:00 [DBG] Committed transaction.
2025-10-22 17:37:11.735 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.735 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:11.736 +02:00 [DBG] Disposing transaction.
2025-10-22 17:37:11.736 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.736 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.736 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.736 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:11.737 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 4 entities written to the database.
2025-10-22 17:37:11.739 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:37:11.741 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:11.744 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 17:37:11.777 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 17:37:11.801 +02:00 [DBG] Hosting starting
2025-10-22 17:37:11.830 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 17:37:11.831 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 17:37:11.841 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 17:37:11.841 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 17:37:11.841 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 17:37:11.841 +02:00 [INF] Hosting environment: Development
2025-10-22 17:37:11.842 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 17:37:11.842 +02:00 [DBG] Hosting started
2025-10-22 17:37:12.017 +02:00 [DBG] Connection id "0HNGHG3F8H6T3" received FIN.
2025-10-22 17:37:12.019 +02:00 [DBG] Connection id "0HNGHG3F8H6T3" accepted.
2025-10-22 17:37:12.020 +02:00 [DBG] Connection id "0HNGHG3F8H6T3" started.
2025-10-22 17:37:12.024 +02:00 [DBG] Connection id "0HNGHG3F8H6T3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:37:12.025 +02:00 [DBG] Connection id "0HNGHG3F8H6T3" disconnecting.
2025-10-22 17:37:12.026 +02:00 [DBG] Connection id "0HNGHG3F8H6T3" stopped.
2025-10-22 17:37:12.518 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" accepted.
2025-10-22 17:37:12.537 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" started.
2025-10-22 17:37:12.786 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 17:37:12.814 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 17:37:12.816 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:37:12.863 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:37:12.864 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 83.2309ms
2025-10-22 17:37:13.175 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 17:37:13.176 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 17:37:13.176 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:37:13.192 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:37:13.194 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:37:13.312 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:37:13.313 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 137.7854ms
2025-10-22 17:37:22.180 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/allRatings - null null
2025-10-22 17:37:22.195 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/allRatings'
2025-10-22 17:37:22.202 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/allRatings' is valid for the request path '/api/Rating/allRatings'
2025-10-22 17:37:22.206 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 17:37:22.223 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 17:37:22.228 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 17:37:22.241 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 17:37:22.243 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:37:22.244 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:37:22.244 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 17:37:22.244 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:37:22.244 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 17:37:22.244 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:37:22.327 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 17:37:22.328 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:37:22.330 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:37:22.331 +02:00 [INF] Fetching all ratings
2025-10-22 17:37:22.340 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:37:22.346 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 17:37:22.355 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 17:37:22.355 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 17:37:22.356 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 17:37:22.402 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:37:22.415 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:37:22.416 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:37:22.417 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:22.418 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:22.418 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:22.418 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:22.418 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:22.419 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 17:37:22.427 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 17:37:22.433 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.436 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.436 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.437 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.437 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.437 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.437 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.438 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.439 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.439 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.439 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.439 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:22.440 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:22.441 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 13ms reading results.
2025-10-22 17:37:22.442 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:22.443 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:22.448 +02:00 [INF] Retrieved 4 ratings from the database
2025-10-22 17:37:22.451 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 119.1159ms.
2025-10-22 17:37:22.457 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:37:22.458 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:37:22.458 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:37:22.458 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:37:22.459 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:37:22.459 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:37:22.485 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 239.048ms
2025-10-22 17:37:22.485 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 17:37:22.487 +02:00 [INF] HTTP GET /api/Rating/allRatings responded 200 in 259.9554 ms
2025-10-22 17:37:22.490 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:37:22.491 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:37:22.493 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:22.494 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:22.495 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/allRatings - 200 null application/json; charset=utf-8 314.4994ms
2025-10-22 17:37:31.958 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 17:37:31.961 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 17:37:31.961 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 17:37:31.962 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:37:31.965 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:37:31.981 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:37:31.981 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:37:31.981 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:37:31.982 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:37:31.982 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:37:31.982 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:37:31.982 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:37:31.985 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:37:31.986 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:37:32.034 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:37:32.040 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 17:37:32.044 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 17:37:32.044 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 17:37:32.086 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:37:32.097 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:37:32.097 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:37:32.097 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:32.098 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:32.098 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:37:32.098 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:32.098 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:37:32.098 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:37:32.104 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:37:32.104 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.105 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.105 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.108 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:37:32.109 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:32.110 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-10-22 17:37:32.110 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:32.110 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:32.113 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 127.2625ms.
2025-10-22 17:37:32.114 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:37:32.114 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:37:32.114 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:37:32.114 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:37:32.115 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:37:32.115 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:37:32.122 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 140.0419ms
2025-10-22 17:37:32.122 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:37:32.122 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 157.8378 ms
2025-10-22 17:37:32.123 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:37:32.123 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:37:32.123 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:37:32.123 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:37:32.123 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 164.9869ms
2025-10-22 17:38:14.188 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 17:38:14.194 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 17:38:14.196 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 17:38:14.196 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 17:38:14.197 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 17:38:14.202 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 17:38:14.202 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:38:14.202 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:38:14.202 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:38:14.202 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:38:14.202 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:38:14.202 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 17:38:14.203 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 17:38:14.204 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:38:14.209 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:38:14.210 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 17:38:14.216 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:38:14.222 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:38:14.222 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:38:14.222 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:14.222 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:14.223 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:38:14.223 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:38:14.223 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:38:14.223 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:38:14.227 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 17:38:14.230 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:38:14.231 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:38:14.231 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:14.231 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-10-22 17:38:14.232 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:14.232 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:38:14.239 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 34.8932ms.
2025-10-22 17:38:14.239 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:38:14.239 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:38:14.240 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:38:14.240 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:38:14.240 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:38:14.240 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:38:14.244 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 41.7783ms
2025-10-22 17:38:14.244 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 17:38:14.244 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 46.8133 ms
2025-10-22 17:38:14.244 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:38:14.244 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:38:14.244 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:14.245 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:38:14.245 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 57.0862ms
2025-10-22 17:38:36.975 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 17:38:36.977 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 17:38:36.978 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 17:38:36.978 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:38:36.980 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 17:38:36.980 +02:00 [INF] CORS policy execution failed.
2025-10-22 17:38:36.980 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 17:38:36.981 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:38:37.007 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 17:38:37.007 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:38:37.007 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:38:37.007 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 17:38:37.007 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:38:37.007 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 17:38:37.007 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:38:37.009 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:38:37.012 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:38:37.014 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 17:38:37.014 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 17:38:37.018 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000006": started reading request body.
2025-10-22 17:38:37.018 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000006": done reading request body.
2025-10-22 17:38:37.033 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 17:38:37.033 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:38:37.033 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:38:37.033 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:38:37.038 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:38:37.039 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:38:37.040 +02:00 [WRN] Invalid rating value 6 for MealId "b0d92446-c1d4-4ae1-a17f-c46f01bdcecf" by UserId "3fa85f64-5717-4562-b3fc-2c963f66afa6"
2025-10-22 17:38:37.042 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 34.2005ms
2025-10-22 17:38:37.042 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:38:37.042 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 61.0080 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: Stars must be in between 1 and 5
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 62
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 17:38:37.056 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: Stars must be in between 1 and 5
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 62
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 17:38:37.062 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:38:37.062 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 87.2179ms
2025-10-22 17:38:47.054 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 17:38:47.055 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 17:38:47.055 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 17:38:47.055 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:38:47.057 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 17:38:47.057 +02:00 [INF] CORS policy execution failed.
2025-10-22 17:38:47.057 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 17:38:47.057 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:38:47.058 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 17:38:47.058 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:38:47.058 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:38:47.058 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 17:38:47.058 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:38:47.058 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 17:38:47.059 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:38:47.061 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:38:47.061 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:38:47.062 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 17:38:47.062 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 17:38:47.062 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000007": started reading request body.
2025-10-22 17:38:47.062 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000007": done reading request body.
2025-10-22 17:38:47.063 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 17:38:47.063 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:38:47.063 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:38:47.063 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:38:47.063 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:38:47.063 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:38:47.066 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:38:47.068 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 17:38:47.070 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 17:38:47.071 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 17:38:47.102 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 17:38:47.111 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:38:47.111 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:38:47.111 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:47.111 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:47.111 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:38:47.111 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:38:47.111 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:38:47.111 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 17:38:47.114 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 17:38:47.115 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:47.115 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 17:38:47.115 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:47.116 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:38:47.116 +02:00 [WRN] Meal with Id "b0d92446-c1d4-4ae1-a17f-c46f01bdcecf" not found when UserId "3fa85f64-5717-4562-b3fc-2c963f66afa6" attempted rating
2025-10-22 17:38:47.116 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 57.8272ms
2025-10-22 17:38:47.116 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:38:47.117 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 59.2730 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: The selected meal is not available
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 70
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 17:38:47.119 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: The selected meal is not available
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 70
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 17:38:47.121 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:38:47.121 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:38:47.121 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:38:47.122 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:38:47.122 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 68.1771ms
2025-10-22 17:40:22.072 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 17:40:22.076 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 17:40:22.076 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 17:40:22.076 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:40:22.081 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 17:40:22.081 +02:00 [INF] CORS policy execution failed.
2025-10-22 17:40:22.081 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 17:40:22.083 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:40:22.085 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 17:40:22.086 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:40:22.086 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:40:22.087 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 17:40:22.089 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:40:22.089 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 17:40:22.089 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:40:22.090 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:40:22.091 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:40:22.091 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 17:40:22.092 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 17:40:22.092 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000008": started reading request body.
2025-10-22 17:40:22.092 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000008": done reading request body.
2025-10-22 17:40:22.092 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 17:40:22.092 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:40:22.092 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:40:22.092 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:40:22.093 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:40:22.093 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:40:22.097 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:40:22.112 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:40:22.113 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:40:22.113 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.114 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.119 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:40:22.120 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-10-22 17:40:22.120 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:40:22.122 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 17:40:22.138 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 17:40:22.140 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:40:22.140 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:40:22.141 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:40:22.143 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:40:22.144 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.144 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-10-22 17:40:22.144 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.144 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:40:22.146 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 17:40:22.147 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 17:40:22.155 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 17:40:22.159 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.159 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.160 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:40:22.160 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:40:22.160 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:40:22.160 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 17:40:22.163 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 17:40:22.163 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.163 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:40:22.163 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.163 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:40:22.164 +02:00 [WRN] You have already rated this meal option today.
2025-10-22 17:40:22.164 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 75.0992ms
2025-10-22 17:40:22.165 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:40:22.165 +02:00 [ERR] HTTP POST /api/Rating/saveRating responded 500 in 82.2604 ms
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-10-22 17:40:22.171 +02:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Http.BadHttpRequestException: You have already rated this meal option today.
   at BistroFoodReview.Api.Controllers.RatingController.ValidateRatingAsync(CreateRatingDto dto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 85
   at BistroFoodReview.Api.Controllers.RatingController.SaveRating(CreateRatingDto createRatingDto) in /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api/Controllers/RatingController.cs:line 48
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-10-22 17:40:22.173 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:40:22.173 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:40:22.173 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:40:22.173 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:40:22.173 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 400 null text/plain; charset=utf-8 101.9203ms
2025-10-22 17:41:21.127 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 120
2025-10-22 17:41:21.131 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 17:41:21.131 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 17:41:21.132 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:41:21.139 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 17:41:21.140 +02:00 [INF] CORS policy execution failed.
2025-10-22 17:41:21.140 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 17:41:21.142 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:41:21.143 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 17:41:21.143 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:41:21.143 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:41:21.143 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 17:41:21.143 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:41:21.143 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 17:41:21.143 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:41:21.146 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 17:41:21.147 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:41:21.147 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 17:41:21.147 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 17:41:21.147 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000009": started reading request body.
2025-10-22 17:41:21.147 +02:00 [DBG] Connection id "0HNGHG3F8H6T4", Request id "0HNGHG3F8H6T4:00000009": done reading request body.
2025-10-22 17:41:21.148 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 17:41:21.148 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:41:21.148 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:41:21.148 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 17:41:21.148 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 17:41:21.148 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:41:21.153 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:41:21.157 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:41:21.157 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 17:41:21.157 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.157 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.157 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:41:21.157 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:41:21.157 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:41:21.158 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 17:41:21.160 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 17:41:21.160 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.160 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.161 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.161 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.161 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.161 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 17:41:21.161 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.161 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:41:21.162 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.162 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.162 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:41:21.162 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:41:21.162 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:41:21.162 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 17:41:21.162 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 17:41:21.163 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.163 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:41:21.164 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.164 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:41:21.184 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.185 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.187 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:41:21.188 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 17:41:21.188 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 17:41:21.198 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.198 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.199 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:41:21.199 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:41:21.199 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 17:41:21.199 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 17:41:21.205 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 17:41:21.206 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.206 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 17:41:21.206 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.206 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:41:21.208 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:41:21.209 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 17:41:21.211 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 62.64ms.
2025-10-22 17:41:21.211 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:41:21.211 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:41:21.211 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:41:21.211 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:41:21.211 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:41:21.211 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Dto.RatingDto'.
2025-10-22 17:41:21.232 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] for address (id=[7fcdb052-e567-49b8-acc6-90dd660c34ba],action=[SaveRating],controller=[Rating])
2025-10-22 17:41:21.237 +02:00 [DBG] Successfully processed template api/Rating/saveRating for BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) resulting in /api/Rating/saveRating and ?id=7fcdb052-e567-49b8-acc6-90dd660c34ba
2025-10-22 17:41:21.238 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] with result /api/Rating/saveRating?id=7fcdb052-e567-49b8-acc6-90dd660c34ba
2025-10-22 17:41:21.239 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 96.2573ms
2025-10-22 17:41:21.239 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 17:41:21.239 +02:00 [INF] HTTP POST /api/Rating/saveRating responded 201 in 97.8943 ms
2025-10-22 17:41:21.239 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" completed keep alive response.
2025-10-22 17:41:21.240 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:41:21.240 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:41:21.240 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:41:21.240 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 201 null application/json; charset=utf-8 113.7564ms
2025-10-22 17:42:05.229 +02:00 [INF] Application is shutting down...
2025-10-22 17:42:05.234 +02:00 [DBG] Hosting stopping
2025-10-22 17:42:05.255 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" disconnecting.
2025-10-22 17:42:05.256 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" stopped.
2025-10-22 17:42:05.257 +02:00 [DBG] Connection id "0HNGHG3F8H6T4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:42:05.261 +02:00 [DBG] Hosting stopped
2025-10-22 17:57:16.319 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 17:57:16.384 +02:00 [DBG] Hosting starting
2025-10-22 17:57:16.411 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 17:57:16.413 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 17:57:16.419 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 17:57:16.419 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 17:57:16.419 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 17:57:16.419 +02:00 [INF] Hosting environment: Development
2025-10-22 17:57:16.419 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 17:57:16.420 +02:00 [DBG] Hosting started
2025-10-22 17:57:16.693 +02:00 [DBG] Connection id "0HNGHGEM975AB" received FIN.
2025-10-22 17:57:16.696 +02:00 [DBG] Connection id "0HNGHGEM975AB" accepted.
2025-10-22 17:57:16.696 +02:00 [DBG] Connection id "0HNGHGEM975AB" started.
2025-10-22 17:57:16.701 +02:00 [DBG] Connection id "0HNGHGEM975AB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:57:16.704 +02:00 [DBG] Connection id "0HNGHGEM975AB" disconnecting.
2025-10-22 17:57:16.705 +02:00 [DBG] Connection id "0HNGHGEM975AB" stopped.
2025-10-22 17:57:17.610 +02:00 [DBG] Connection id "0HNGHGEM975AC" accepted.
2025-10-22 17:57:17.613 +02:00 [DBG] Connection id "0HNGHGEM975AC" started.
2025-10-22 17:57:18.142 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 17:57:18.156 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 17:57:18.156 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:57:18.184 +02:00 [DBG] Connection id "0HNGHGEM975AC" completed keep alive response.
2025-10-22 17:57:18.186 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 47.0493ms
2025-10-22 17:57:18.416 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - null null
2025-10-22 17:57:18.416 +02:00 [DBG] Connection id "0HNGHGEM975AC" received FIN.
2025-10-22 17:57:18.416 +02:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-10-22 17:57:18.417 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:57:18.418 +02:00 [DBG] Connection id "0HNGHGEM975AC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:57:18.420 +02:00 [DBG] Connection id "0HNGHGEM975AC" disconnecting.
2025-10-22 17:57:18.440 +02:00 [DBG] The request was aborted by the client.
2025-10-22 17:57:18.441 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - 499 628 image/png 25.1132ms
2025-10-22 17:57:18.444 +02:00 [DBG] Connection id "0HNGHGEM975AC" stopped.
2025-10-22 17:57:18.490 +02:00 [DBG] Connection id "0HNGHGEM975AD" accepted.
2025-10-22 17:57:18.490 +02:00 [DBG] Connection id "0HNGHGEM975AD" started.
2025-10-22 17:57:18.493 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 17:57:18.493 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 17:57:18.493 +02:00 [DBG] Request did not match any endpoints
2025-10-22 17:57:18.502 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:57:18.503 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 17:57:18.622 +02:00 [DBG] Connection id "0HNGHGEM975AD" completed keep alive response.
2025-10-22 17:57:18.622 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 129.9302ms
2025-10-22 17:57:27.285 +02:00 [DBG] Connection id "0HNGHGEM975AE" accepted.
2025-10-22 17:57:27.291 +02:00 [DBG] Connection id "0HNGHGEM975AF" accepted.
2025-10-22 17:57:27.291 +02:00 [DBG] Connection id "0HNGHGEM975AE" started.
2025-10-22 17:57:27.291 +02:00 [DBG] Connection id "0HNGHGEM975AF" started.
2025-10-22 17:57:27.291 +02:00 [DBG] Connection id "0HNGHGEM975AG" accepted.
2025-10-22 17:57:27.292 +02:00 [DBG] Connection id "0HNGHGEM975AH" accepted.
2025-10-22 17:57:27.292 +02:00 [DBG] Connection id "0HNGHGEM975AI" accepted.
2025-10-22 17:57:27.292 +02:00 [DBG] Connection id "0HNGHGEM975AJ" accepted.
2025-10-22 17:57:27.292 +02:00 [DBG] Connection id "0HNGHGEM975AH" started.
2025-10-22 17:57:27.294 +02:00 [DBG] Connection id "0HNGHGEM975AG" started.
2025-10-22 17:57:27.297 +02:00 [DBG] Connection id "0HNGHGEM975AI" started.
2025-10-22 17:57:27.297 +02:00 [DBG] Connection id "0HNGHGEM975AJ" started.
2025-10-22 17:57:27.298 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 17:57:27.298 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 17:57:27.298 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 17:57:27.298 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 17:57:27.298 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 17:57:27.298 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 17:57:27.305 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 17:57:27.305 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 17:57:27.305 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 17:57:27.305 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 17:57:27.305 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 17:57:27.305 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 17:57:27.306 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 17:57:27.306 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 17:57:27.306 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 17:57:27.306 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 17:57:27.306 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 17:57:27.306 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 17:57:27.307 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 17:57:27.308 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:57:27.307 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:57:27.307 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:57:27.307 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:57:27.308 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 17:57:27.311 +02:00 [DBG] The request has an origin header: 'http://localhost:3000'.
2025-10-22 17:57:27.311 +02:00 [DBG] The request has an origin header: 'http://localhost:3000'.
2025-10-22 17:57:27.311 +02:00 [INF] CORS policy execution successful.
2025-10-22 17:57:27.311 +02:00 [INF] CORS policy execution successful.
2025-10-22 17:57:27.311 +02:00 [DBG] The request has an origin header: 'http://localhost:3000'.
2025-10-22 17:57:27.311 +02:00 [DBG] The request has an origin header: 'http://localhost:3000'.
2025-10-22 17:57:27.311 +02:00 [DBG] The request has an origin header: 'http://localhost:3000'.
2025-10-22 17:57:27.312 +02:00 [INF] CORS policy execution successful.
2025-10-22 17:57:27.312 +02:00 [INF] CORS policy execution successful.
2025-10-22 17:57:27.311 +02:00 [DBG] The request has an origin header: 'http://localhost:3000'.
2025-10-22 17:57:27.312 +02:00 [INF] CORS policy execution successful.
2025-10-22 17:57:27.311 +02:00 [INF] CORS policy execution successful.
2025-10-22 17:57:27.312 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 17:57:27.316 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 17:57:27.316 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:57:27.316 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:57:27.316 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 17:57:27.316 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:57:27.316 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:57:27.329 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:57:27.329 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:57:27.329 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:57:27.329 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:57:27.329 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:57:27.329 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:57:27.329 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:57:27.330 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:57:27.331 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.331 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 17:57:27.331 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.331 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.331 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.331 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 17:57:27.332 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.423 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:57:27.423 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:57:27.423 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:57:27.423 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:57:27.423 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:57:27.423 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 17:57:27.509 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 17:57:27.510 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.510 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.510 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.510 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.510 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.510 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 17:57:27.514 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:57:27.514 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:57:27.514 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:57:27.514 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:57:27.514 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:57:27.514 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 17:57:27.862 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 17:57:28.016 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:57:28.016 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:57:28.016 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:57:28.016 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:57:28.016 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:57:28.016 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 17:57:28.034 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 17:57:28.035 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 17:57:28.036 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 17:57:28.079 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 17:57:28.079 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 17:57:28.081 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 17:57:28.193 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:57:28.193 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:57:28.194 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 17:57:28.218 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:57:28.218 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:57:28.218 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:57:28.218 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:57:28.218 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:57:28.218 +02:00 [DBG] Creating DbConnection.
2025-10-22 17:57:28.251 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 17:57:28.251 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 17:57:28.251 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 17:57:28.251 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 17:57:28.251 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 17:57:28.251 +02:00 [DBG] Created DbConnection. (31ms).
2025-10-22 17:57:28.253 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.253 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.253 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.253 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.254 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.254 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.378 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.382 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:57:28.382 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:57:28.382 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:57:28.382 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:57:28.382 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:57:28.382 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 17:57:28.387 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:57:28.387 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:57:28.387 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:57:28.387 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:57:28.387 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:57:28.387 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 17:57:28.388 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 17:57:28.388 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 17:57:28.388 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 17:57:28.388 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 17:57:28.391 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-10-22 17:57:28.391 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-10-22 17:57:28.393 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 17:57:28.393 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:57:28.393 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:57:28.393 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 17:57:28.393 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:57:28.393 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:57:28.418 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:57:28.418 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 17:57:28.418 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 17:57:28.418 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 17:57:28.449 +02:00 [INF] Executed DbCommand (57ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:57:28.449 +02:00 [INF] Executed DbCommand (57ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 17:57:28.459 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.459 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.459 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.459 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.459 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.459 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.471 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.471 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.471 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.471 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.475 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.475 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.478 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.478 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.478 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.478 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.481 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.481 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.481 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.481 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.482 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.482 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.483 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.483 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.483 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.483 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.483 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-10-22 17:57:28.483 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-10-22 17:57:28.483 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 63ms reading results.
2025-10-22 17:57:28.483 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 63ms reading results.
2025-10-22 17:57:28.487 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.488 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.487 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.488 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.491 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.491 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.492 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (4ms).
2025-10-22 17:57:28.492 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (4ms).
2025-10-22 17:57:28.492 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (4ms).
2025-10-22 17:57:28.492 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (4ms).
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.494 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 17:57:28.495 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.495 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.495 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 46ms reading results.
2025-10-22 17:57:28.495 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 46ms reading results.
2025-10-22 17:57:28.496 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.496 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:57:28.496 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.496 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 17:57:28.505 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 988.0178ms.
2025-10-22 17:57:28.505 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 988.0822ms.
2025-10-22 17:57:28.505 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 988.0625ms.
2025-10-22 17:57:28.505 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 988.2347ms.
2025-10-22 17:57:28.505 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 987.8739ms.
2025-10-22 17:57:28.505 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 988.1645ms.
2025-10-22 17:57:28.509 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:57:28.509 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:57:28.509 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:57:28.509 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:57:28.509 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:57:28.509 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 17:57:28.511 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:57:28.511 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:57:28.511 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:57:28.511 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:57:28.511 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:57:28.511 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:57:28.511 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 17:57:28.511 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:57:28.511 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:57:28.511 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:57:28.511 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 17:57:28.511 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:57:28.512 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:57:28.512 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 17:57:28.512 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:57:28.512 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 17:57:28.512 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 17:57:28.550 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 1214.5655ms
2025-10-22 17:57:28.550 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 1214.0455ms
2025-10-22 17:57:28.550 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 1215.1942ms
2025-10-22 17:57:28.550 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 1214.9706ms
2025-10-22 17:57:28.550 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 1214.7649ms
2025-10-22 17:57:28.551 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 1214.486ms
2025-10-22 17:57:28.551 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 17:57:28.551 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:57:28.552 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 17:57:28.551 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 17:57:28.552 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:57:28.551 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 17:57:28.556 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 1237.7043 ms
2025-10-22 17:57:28.556 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 1237.7065 ms
2025-10-22 17:57:28.556 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 1237.6885 ms
2025-10-22 17:57:28.556 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 1237.6970 ms
2025-10-22 17:57:28.556 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 1237.6854 ms
2025-10-22 17:57:28.556 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 1237.7033 ms
2025-10-22 17:57:28.561 +02:00 [DBG] Connection id "0HNGHGEM975AJ" completed keep alive response.
2025-10-22 17:57:28.561 +02:00 [DBG] Connection id "0HNGHGEM975AE" completed keep alive response.
2025-10-22 17:57:28.561 +02:00 [DBG] Connection id "0HNGHGEM975AH" completed keep alive response.
2025-10-22 17:57:28.561 +02:00 [DBG] Connection id "0HNGHGEM975AF" completed keep alive response.
2025-10-22 17:57:28.561 +02:00 [DBG] Connection id "0HNGHGEM975AI" completed keep alive response.
2025-10-22 17:57:28.561 +02:00 [DBG] Connection id "0HNGHGEM975AG" completed keep alive response.
2025-10-22 17:57:28.566 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:57:28.566 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:57:28.566 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:57:28.566 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:57:28.566 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:57:28.566 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 17:57:28.571 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.571 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.571 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.571 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.571 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.571 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 17:57:28.574 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:57:28.574 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:57:28.574 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:57:28.574 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:57:28.574 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:57:28.574 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 17:57:28.575 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 1277.042ms
2025-10-22 17:57:28.575 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 1277.1077ms
2025-10-22 17:57:28.575 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 1277.028ms
2025-10-22 17:57:28.575 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 1277.0992ms
2025-10-22 17:57:28.575 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 1277.1357ms
2025-10-22 17:57:28.576 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 1277.0645ms
2025-10-22 17:59:13.694 +02:00 [DBG] Connection id "0HNGHGEM975AD" received FIN.
2025-10-22 17:59:13.703 +02:00 [DBG] Connection id "0HNGHGEM975AD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:13.705 +02:00 [DBG] Connection id "0HNGHGEM975AD" disconnecting.
2025-10-22 17:59:13.708 +02:00 [DBG] Connection id "0HNGHGEM975AD" stopped.
2025-10-22 17:59:23.695 +02:00 [DBG] Connection id "0HNGHGEM975AE" received FIN.
2025-10-22 17:59:23.696 +02:00 [DBG] Connection id "0HNGHGEM975AI" received FIN.
2025-10-22 17:59:23.695 +02:00 [DBG] Connection id "0HNGHGEM975AG" received FIN.
2025-10-22 17:59:23.696 +02:00 [DBG] Connection id "0HNGHGEM975AF" received FIN.
2025-10-22 17:59:23.696 +02:00 [DBG] Connection id "0HNGHGEM975AH" received FIN.
2025-10-22 17:59:23.697 +02:00 [DBG] Connection id "0HNGHGEM975AJ" received FIN.
2025-10-22 17:59:23.697 +02:00 [DBG] Connection id "0HNGHGEM975AE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:23.698 +02:00 [DBG] Connection id "0HNGHGEM975AI" disconnecting.
2025-10-22 17:59:23.700 +02:00 [DBG] Connection id "0HNGHGEM975AG" disconnecting.
2025-10-22 17:59:23.704 +02:00 [DBG] Connection id "0HNGHGEM975AF" disconnecting.
2025-10-22 17:59:23.704 +02:00 [DBG] Connection id "0HNGHGEM975AI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:23.713 +02:00 [DBG] Connection id "0HNGHGEM975AG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:23.704 +02:00 [DBG] Connection id "0HNGHGEM975AE" disconnecting.
2025-10-22 17:59:23.713 +02:00 [DBG] Connection id "0HNGHGEM975AF" stopped.
2025-10-22 17:59:23.714 +02:00 [DBG] Connection id "0HNGHGEM975AH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:23.714 +02:00 [DBG] Connection id "0HNGHGEM975AI" stopped.
2025-10-22 17:59:23.715 +02:00 [DBG] Connection id "0HNGHGEM975AG" stopped.
2025-10-22 17:59:23.718 +02:00 [DBG] Connection id "0HNGHGEM975AE" stopped.
2025-10-22 17:59:23.718 +02:00 [DBG] Connection id "0HNGHGEM975AJ" disconnecting.
2025-10-22 17:59:23.718 +02:00 [DBG] Connection id "0HNGHGEM975AH" disconnecting.
2025-10-22 17:59:23.727 +02:00 [DBG] Connection id "0HNGHGEM975AF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:23.729 +02:00 [DBG] Connection id "0HNGHGEM975AJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 17:59:23.729 +02:00 [DBG] Connection id "0HNGHGEM975AH" stopped.
2025-10-22 17:59:23.735 +02:00 [DBG] Connection id "0HNGHGEM975AJ" stopped.
2025-10-22 18:40:51.294 +02:00 [INF] Application is shutting down...
2025-10-22 18:40:51.304 +02:00 [DBG] Hosting stopping
2025-10-22 18:40:51.418 +02:00 [DBG] Hosting stopped
2025-10-22 19:18:12.194 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 19:18:12.367 +02:00 [DBG] Hosting starting
2025-10-22 19:18:12.435 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 19:18:12.438 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 19:18:12.452 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 19:18:12.452 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 19:18:12.453 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 19:18:12.453 +02:00 [INF] Hosting environment: Development
2025-10-22 19:18:12.453 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 19:18:12.453 +02:00 [DBG] Hosting started
2025-10-22 19:19:33.012 +02:00 [DBG] Config reload token fired. Checking for changes...
2025-10-22 19:19:33.026 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 19:19:33.029 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 19:19:48.944 +02:00 [INF] Application is shutting down...
2025-10-22 19:19:48.949 +02:00 [DBG] Hosting stopping
2025-10-22 19:19:48.969 +02:00 [DBG] Hosting stopped
2025-10-22 19:19:54.822 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 19:19:55.003 +02:00 [DBG] Hosting starting
2025-10-22 19:19:55.181 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 19:19:55.189 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 19:19:55.224 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 19:19:55.225 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 19:19:55.225 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 19:19:55.225 +02:00 [INF] Hosting environment: Development
2025-10-22 19:19:55.225 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 19:19:55.225 +02:00 [DBG] Hosting started
2025-10-22 19:19:55.629 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" accepted.
2025-10-22 19:19:55.630 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" started.
2025-10-22 19:19:56.125 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 19:19:56.146 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 19:19:56.146 +02:00 [DBG] Request did not match any endpoints
2025-10-22 19:19:56.169 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" completed keep alive response.
2025-10-22 19:19:56.171 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 59.2792ms
2025-10-22 19:19:56.376 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" received FIN.
2025-10-22 19:19:56.377 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - null null
2025-10-22 19:19:56.377 +02:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-10-22 19:19:56.377 +02:00 [DBG] Request did not match any endpoints
2025-10-22 19:19:56.378 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 19:19:56.378 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" disconnecting.
2025-10-22 19:19:56.397 +02:00 [DBG] The request was aborted by the client.
2025-10-22 19:19:56.398 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - 499 628 image/png 21.7224ms
2025-10-22 19:19:56.400 +02:00 [DBG] Connection id "0HNGHHSS5A5M1" stopped.
2025-10-22 19:19:56.430 +02:00 [DBG] Connection id "0HNGHHSS5A5M2" accepted.
2025-10-22 19:19:56.431 +02:00 [DBG] Connection id "0HNGHHSS5A5M2" started.
2025-10-22 19:19:56.432 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 19:19:56.432 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 19:19:56.433 +02:00 [DBG] Request did not match any endpoints
2025-10-22 19:19:56.442 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 19:19:56.443 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 19:19:56.531 +02:00 [DBG] Connection id "0HNGHHSS5A5M2" completed keep alive response.
2025-10-22 19:19:56.531 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 98.7495ms
2025-10-22 19:20:31.757 +02:00 [INF] Application is shutting down...
2025-10-22 19:20:31.758 +02:00 [DBG] Hosting stopping
2025-10-22 19:20:31.786 +02:00 [DBG] Connection id "0HNGHHSS5A5M2" disconnecting.
2025-10-22 19:20:31.787 +02:00 [DBG] Connection id "0HNGHHSS5A5M2" stopped.
2025-10-22 19:20:31.787 +02:00 [DBG] Connection id "0HNGHHSS5A5M2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 19:20:31.794 +02:00 [DBG] Hosting stopped
2025-10-22 19:20:41.386 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 19:20:42.060 +02:00 [DBG] Hosting starting
2025-10-22 19:20:42.214 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 19:20:42.218 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 19:20:42.239 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 19:20:42.240 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 19:20:42.240 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 19:20:42.240 +02:00 [INF] Hosting environment: Development
2025-10-22 19:20:42.241 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 19:20:42.241 +02:00 [DBG] Hosting started
2025-10-22 19:20:42.423 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" accepted.
2025-10-22 19:20:42.423 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" started.
2025-10-22 19:20:42.454 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 19:20:42.466 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 19:20:42.467 +02:00 [DBG] Request did not match any endpoints
2025-10-22 19:20:42.491 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" completed keep alive response.
2025-10-22 19:20:42.493 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 39.9512ms
2025-10-22 19:20:43.022 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 19:20:43.025 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 19:20:43.025 +02:00 [DBG] Request did not match any endpoints
2025-10-22 19:20:43.040 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 19:20:43.041 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 19:20:43.146 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" completed keep alive response.
2025-10-22 19:20:43.146 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 126.8098ms
2025-10-22 19:20:52.305 +02:00 [INF] Application is shutting down...
2025-10-22 19:20:52.311 +02:00 [DBG] Hosting stopping
2025-10-22 19:20:52.346 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" disconnecting.
2025-10-22 19:20:52.349 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" stopped.
2025-10-22 19:20:52.356 +02:00 [DBG] Connection id "0HNGHHTA3IMV5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 19:20:52.359 +02:00 [DBG] Hosting stopped
2025-10-22 20:09:19.439 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 20:09:19.535 +02:00 [DBG] Hosting starting
2025-10-22 20:09:19.563 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 20:09:19.566 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 20:09:19.614 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 20:09:19.615 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 20:09:19.615 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 20:09:19.615 +02:00 [INF] Hosting environment: Development
2025-10-22 20:09:19.615 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 20:09:19.615 +02:00 [DBG] Hosting started
2025-10-22 20:09:19.846 +02:00 [DBG] Connection id "0HNGHIOFI9P1R" received FIN.
2025-10-22 20:09:19.851 +02:00 [DBG] Connection id "0HNGHIOFI9P1R" accepted.
2025-10-22 20:09:19.852 +02:00 [DBG] Connection id "0HNGHIOFI9P1R" started.
2025-10-22 20:09:19.858 +02:00 [DBG] Connection id "0HNGHIOFI9P1R" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:09:19.862 +02:00 [DBG] Connection id "0HNGHIOFI9P1R" disconnecting.
2025-10-22 20:09:19.863 +02:00 [DBG] Connection id "0HNGHIOFI9P1R" stopped.
2025-10-22 20:09:21.548 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" accepted.
2025-10-22 20:09:21.551 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" started.
2025-10-22 20:09:22.606 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 20:09:22.625 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 20:09:22.625 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:09:22.656 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" completed keep alive response.
2025-10-22 20:09:22.660 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 54.6556ms
2025-10-22 20:09:22.825 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" received FIN.
2025-10-22 20:09:22.826 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:09:22.826 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/swagger-ui.css - null null
2025-10-22 20:09:22.826 +02:00 [DBG] No candidates found for the request path '/swagger/swagger-ui.css'
2025-10-22 20:09:22.827 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:09:22.830 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" disconnecting.
2025-10-22 20:09:22.835 +02:00 [DBG] Connection id "0HNGHIOFI9P1T" accepted.
2025-10-22 20:09:22.835 +02:00 [DBG] Connection id "0HNGHIOFI9P1T" started.
2025-10-22 20:09:22.835 +02:00 [DBG] Connection id "0HNGHIOFI9P1U" accepted.
2025-10-22 20:09:22.835 +02:00 [DBG] Connection id "0HNGHIOFI9P1U" started.
2025-10-22 20:09:22.882 +02:00 [DBG] The request was aborted by the client.
2025-10-22 20:09:22.883 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/swagger-ui.css - 499 23647 text/css 57.0549ms
2025-10-22 20:09:22.885 +02:00 [DBG] Connection id "0HNGHIOFI9P1S" stopped.
2025-10-22 20:09:23.065 +02:00 [DBG] Connection id "0HNGHIOFI9P1T" received FIN.
2025-10-22 20:09:23.065 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - null null
2025-10-22 20:09:23.065 +02:00 [DBG] Connection id "0HNGHIOFI9P1T" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:09:23.065 +02:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-10-22 20:09:23.065 +02:00 [DBG] Connection id "0HNGHIOFI9P1T" disconnecting.
2025-10-22 20:09:23.067 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:09:23.075 +02:00 [DBG] The request was aborted by the client.
2025-10-22 20:09:23.075 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - 499 628 image/png 10.2809ms
2025-10-22 20:09:23.075 +02:00 [DBG] Connection id "0HNGHIOFI9P1T" stopped.
2025-10-22 20:09:23.161 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 20:09:23.162 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 20:09:23.162 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:09:23.172 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 20:09:23.172 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 20:09:23.258 +02:00 [DBG] Connection id "0HNGHIOFI9P1U" completed keep alive response.
2025-10-22 20:09:23.259 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 97.1725ms
2025-10-22 20:09:41.464 +02:00 [INF] Application is shutting down...
2025-10-22 20:09:41.474 +02:00 [DBG] Hosting stopping
2025-10-22 20:09:41.515 +02:00 [DBG] Connection id "0HNGHIOFI9P1U" disconnecting.
2025-10-22 20:09:41.516 +02:00 [DBG] Connection id "0HNGHIOFI9P1U" stopped.
2025-10-22 20:09:41.516 +02:00 [DBG] Connection id "0HNGHIOFI9P1U" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:09:41.522 +02:00 [DBG] Hosting stopped
2025-10-22 20:11:47.468 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 20:11:47.550 +02:00 [DBG] Hosting starting
2025-10-22 20:11:47.575 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 20:11:47.576 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 20:11:47.583 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 20:11:47.583 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 20:11:47.583 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 20:11:47.584 +02:00 [INF] Hosting environment: Development
2025-10-22 20:11:47.584 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 20:11:47.584 +02:00 [DBG] Hosting started
2025-10-22 20:11:47.939 +02:00 [DBG] Connection id "0HNGHIPRMK3PR" received FIN.
2025-10-22 20:11:47.942 +02:00 [DBG] Connection id "0HNGHIPRMK3PR" accepted.
2025-10-22 20:11:47.942 +02:00 [DBG] Connection id "0HNGHIPRMK3PR" started.
2025-10-22 20:11:47.947 +02:00 [DBG] Connection id "0HNGHIPRMK3PR" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:11:47.951 +02:00 [DBG] Connection id "0HNGHIPRMK3PR" disconnecting.
2025-10-22 20:11:47.953 +02:00 [DBG] Connection id "0HNGHIPRMK3PR" stopped.
2025-10-22 20:11:48.590 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" accepted.
2025-10-22 20:11:48.591 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" started.
2025-10-22 20:11:49.403 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 20:11:49.425 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 20:11:49.425 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:11:49.447 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" completed keep alive response.
2025-10-22 20:11:49.448 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 48.684ms
2025-10-22 20:11:49.457 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" received FIN.
2025-10-22 20:11:49.469 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/index.html - null null
2025-10-22 20:11:49.470 +02:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-10-22 20:11:49.469 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:11:49.470 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:11:49.479 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" disconnecting.
2025-10-22 20:11:49.485 +02:00 [DBG] The request was aborted by the client.
2025-10-22 20:11:49.485 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/index.html - 499 null text/html;charset=utf-8 16.0307ms
2025-10-22 20:11:49.493 +02:00 [DBG] Connection id "0HNGHIPRMK3PS" stopped.
2025-10-22 20:11:49.586 +02:00 [DBG] Connection id "0HNGHIPRMK3PT" accepted.
2025-10-22 20:11:49.586 +02:00 [DBG] Connection id "0HNGHIPRMK3PT" started.
2025-10-22 20:11:49.587 +02:00 [DBG] Connection id "0HNGHIPRMK3PU" accepted.
2025-10-22 20:11:49.590 +02:00 [DBG] Connection id "0HNGHIPRMK3PU" started.
2025-10-22 20:11:49.590 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/swagger-ui.css - null null
2025-10-22 20:11:49.590 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/index.css - null null
2025-10-22 20:11:49.591 +02:00 [DBG] No candidates found for the request path '/swagger/index.css'
2025-10-22 20:11:49.590 +02:00 [DBG] No candidates found for the request path '/swagger/swagger-ui.css'
2025-10-22 20:11:49.591 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:11:49.591 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:11:49.591 +02:00 [DBG] Connection id "0HNGHIPRMK3PT" received FIN.
2025-10-22 20:11:49.591 +02:00 [DBG] Connection id "0HNGHIPRMK3PU" received FIN.
2025-10-22 20:11:49.592 +02:00 [DBG] Connection id "0HNGHIPRMK3PT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:11:49.592 +02:00 [DBG] Connection id "0HNGHIPRMK3PU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:11:49.592 +02:00 [DBG] Connection id "0HNGHIPRMK3PT" disconnecting.
2025-10-22 20:11:49.595 +02:00 [DBG] Connection id "0HNGHIPRMK3PU" disconnecting.
2025-10-22 20:11:49.620 +02:00 [DBG] The request was aborted by the client.
2025-10-22 20:11:49.620 +02:00 [DBG] The request was aborted by the client.
2025-10-22 20:11:49.620 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/swagger-ui.css - 499 23647 text/css 29.619ms
2025-10-22 20:11:49.620 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/index.css - 499 152 text/css 29.7739ms
2025-10-22 20:11:49.620 +02:00 [DBG] Connection id "0HNGHIPRMK3PT" stopped.
2025-10-22 20:11:49.622 +02:00 [DBG] Connection id "0HNGHIPRMK3PU" stopped.
2025-10-22 20:11:49.897 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" accepted.
2025-10-22 20:11:49.897 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" started.
2025-10-22 20:11:49.899 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 20:11:49.900 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 20:11:49.900 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:11:49.916 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 20:11:49.917 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 20:11:49.998 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" completed keep alive response.
2025-10-22 20:11:49.999 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 99.1456ms
2025-10-22 20:11:49.999 +02:00 [DBG] Connection id "0HNGHIPRMK3Q0" accepted.
2025-10-22 20:11:49.999 +02:00 [DBG] Connection id "0HNGHIPRMK3Q0" started.
2025-10-22 20:11:49.999 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - null null
2025-10-22 20:11:49.999 +02:00 [DBG] Connection id "0HNGHIPRMK3Q0" received FIN.
2025-10-22 20:11:49.999 +02:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-10-22 20:11:49.999 +02:00 [DBG] Connection id "0HNGHIPRMK3Q0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:11:49.999 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:11:49.999 +02:00 [DBG] Connection id "0HNGHIPRMK3Q0" disconnecting.
2025-10-22 20:11:50.001 +02:00 [DBG] The request was aborted by the client.
2025-10-22 20:11:50.001 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - 499 628 image/png 1.9527ms
2025-10-22 20:11:50.002 +02:00 [DBG] Connection id "0HNGHIPRMK3Q0" stopped.
2025-10-22 20:11:57.514 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 20:11:57.523 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 20:11:57.524 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 20:11:57.524 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 20:11:57.527 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 20:11:57.534 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 20:11:57.551 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 20:11:57.552 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 20:11:57.552 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 20:11:57.552 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 20:11:57.552 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 20:11:57.553 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 20:11:57.553 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 20:11:57.635 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 20:11:57.718 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 20:11:57.718 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 20:11:57.722 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 20:11:58.049 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 20:11:58.199 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 20:11:58.223 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 20:11:58.279 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 20:11:58.444 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 20:11:58.472 +02:00 [DBG] Creating DbConnection.
2025-10-22 20:11:58.502 +02:00 [DBG] Created DbConnection. (28ms).
2025-10-22 20:11:58.504 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:11:58.604 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:11:58.608 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 20:11:58.612 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 20:11:58.613 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-10-22 20:11:58.619 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 20:11:58.644 +02:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 20:11:58.700 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.722 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.726 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.729 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.729 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.729 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.729 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.729 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.730 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:11:58.733 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:11:58.740 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 90ms reading results.
2025-10-22 20:11:58.744 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:11:58.747 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 20:11:58.761 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1036.4292ms.
2025-10-22 20:11:58.764 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 20:11:58.766 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 20:11:58.766 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 20:11:58.766 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 20:11:58.766 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 20:11:58.766 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 20:11:58.799 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 1243.6345ms
2025-10-22 20:11:58.799 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 20:11:58.802 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 1268.2657 ms
2025-10-22 20:11:58.806 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" completed keep alive response.
2025-10-22 20:11:58.808 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 20:11:58.812 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:11:58.815 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 20:11:58.816 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 1303.0683ms
2025-10-22 20:12:06.267 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 20:12:06.272 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 20:12:06.272 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 20:12:06.273 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 20:12:06.274 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 20:12:06.281 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 20:12:06.281 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 20:12:06.281 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 20:12:06.281 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 20:12:06.282 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 20:12:06.282 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 20:12:06.282 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 20:12:06.288 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 20:12:06.289 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 20:12:06.310 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 20:12:06.312 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 20:12:06.318 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 20:12:06.320 +02:00 [DBG] Creating DbConnection.
2025-10-22 20:12:06.320 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 20:12:06.321 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:12:06.323 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:12:06.324 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 20:12:06.325 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-10-22 20:12:06.326 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-10-22 20:12:06.326 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 20:12:06.339 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 20:12:06.339 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:12:06.340 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:12:06.340 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 20:12:06.340 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:12:06.340 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 20:12:06.340 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:12:06.340 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 20:12:06.342 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 53.1563ms.
2025-10-22 20:12:06.343 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 20:12:06.343 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 20:12:06.343 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 20:12:06.343 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 20:12:06.343 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 20:12:06.343 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 20:12:06.349 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 66.7433ms
2025-10-22 20:12:06.349 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 20:12:06.349 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 75.2051 ms
2025-10-22 20:12:06.349 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" completed keep alive response.
2025-10-22 20:12:06.350 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 20:12:06.350 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 20:12:06.351 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 20:12:06.351 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 85.5744ms
2025-10-22 20:12:13.993 +02:00 [INF] Application is shutting down...
2025-10-22 20:12:13.998 +02:00 [DBG] Hosting stopping
2025-10-22 20:12:14.014 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" disconnecting.
2025-10-22 20:12:14.015 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" stopped.
2025-10-22 20:12:14.016 +02:00 [DBG] Connection id "0HNGHIPRMK3PV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:12:14.022 +02:00 [DBG] Hosting stopped
2025-10-22 20:32:46.559 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 20:32:46.719 +02:00 [DBG] Hosting starting
2025-10-22 20:32:46.786 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 20:32:46.789 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 20:32:46.795 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 20:32:46.796 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 20:32:46.796 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 20:32:46.796 +02:00 [INF] Hosting environment: Development
2025-10-22 20:32:46.796 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 20:32:46.796 +02:00 [DBG] Hosting started
2025-10-22 20:32:47.532 +02:00 [DBG] Connection id "0HNGHJ5J3156B" accepted.
2025-10-22 20:32:47.533 +02:00 [DBG] Connection id "0HNGHJ5J3156B" started.
2025-10-22 20:32:47.555 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 20:32:47.569 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 20:32:47.570 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:32:47.590 +02:00 [DBG] Connection id "0HNGHJ5J3156B" completed keep alive response.
2025-10-22 20:32:47.592 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 37.9089ms
2025-10-22 20:32:47.954 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 20:32:47.955 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 20:32:47.955 +02:00 [DBG] Request did not match any endpoints
2025-10-22 20:32:47.965 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 20:32:47.965 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 20:32:48.070 +02:00 [DBG] Connection id "0HNGHJ5J3156B" completed keep alive response.
2025-10-22 20:32:48.070 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 116.3582ms
2025-10-22 20:34:44.136 +02:00 [DBG] Connection id "0HNGHJ5J3156B" received FIN.
2025-10-22 20:34:44.173 +02:00 [DBG] Connection id "0HNGHJ5J3156B" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 20:34:44.198 +02:00 [DBG] Connection id "0HNGHJ5J3156B" disconnecting.
2025-10-22 20:34:44.202 +02:00 [DBG] Connection id "0HNGHJ5J3156B" stopped.
2025-10-22 20:35:28.412 +02:00 [INF] Application is shutting down...
2025-10-22 20:35:28.417 +02:00 [DBG] Hosting stopping
2025-10-22 20:35:28.439 +02:00 [DBG] Hosting stopped
2025-10-22 21:04:53.113 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 21:04:53.365 +02:00 [DBG] Hosting starting
2025-10-22 21:04:53.452 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 21:04:53.457 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 21:04:53.485 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 21:04:53.485 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 21:04:53.485 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 21:04:53.486 +02:00 [INF] Hosting environment: Development
2025-10-22 21:04:53.486 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 21:04:53.486 +02:00 [DBG] Hosting started
2025-10-22 21:04:54.250 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" accepted.
2025-10-22 21:04:54.257 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" started.
2025-10-22 21:04:55.290 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 21:04:55.327 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 21:04:55.328 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:04:55.372 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" completed keep alive response.
2025-10-22 21:04:55.374 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 86.8937ms
2025-10-22 21:04:55.657 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" received FIN.
2025-10-22 21:04:55.658 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - null null
2025-10-22 21:04:55.658 +02:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-10-22 21:04:55.658 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:04:55.658 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 21:04:55.669 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" disconnecting.
2025-10-22 21:04:55.784 +02:00 [DBG] The request was aborted by the client.
2025-10-22 21:04:55.788 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/favicon-32x32.png - 499 628 image/png 131.531ms
2025-10-22 21:04:55.810 +02:00 [DBG] Connection id "0HNGHJNH9JUBD" stopped.
2025-10-22 21:04:56.188 +02:00 [DBG] Connection id "0HNGHJNH9JUBE" accepted.
2025-10-22 21:04:56.189 +02:00 [DBG] Connection id "0HNGHJNH9JUBE" started.
2025-10-22 21:04:56.190 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 21:04:56.191 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 21:04:56.191 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:04:56.223 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:04:56.226 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:04:56.465 +02:00 [DBG] Connection id "0HNGHJNH9JUBE" completed keep alive response.
2025-10-22 21:04:56.466 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 275.6236ms
2025-10-22 21:05:45.804 +02:00 [INF] Application is shutting down...
2025-10-22 21:05:45.817 +02:00 [DBG] Hosting stopping
2025-10-22 21:05:45.858 +02:00 [DBG] Connection id "0HNGHJNH9JUBE" disconnecting.
2025-10-22 21:05:45.860 +02:00 [DBG] Connection id "0HNGHJNH9JUBE" stopped.
2025-10-22 21:05:45.862 +02:00 [DBG] Connection id "0HNGHJNH9JUBE" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 21:05:45.871 +02:00 [DBG] Hosting stopped
2025-10-22 21:06:53.322 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 21:06:53.470 +02:00 [DBG] Hosting starting
2025-10-22 21:06:53.531 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 21:06:53.535 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 21:06:53.549 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 21:06:53.549 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 21:06:53.549 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 21:06:53.757 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" accepted.
2025-10-22 21:06:53.811 +02:00 [INF] Hosting environment: Development
2025-10-22 21:06:53.812 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 21:06:53.813 +02:00 [DBG] Hosting started
2025-10-22 21:06:53.814 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" started.
2025-10-22 21:06:53.877 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 21:06:53.902 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 21:06:53.902 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:06:53.926 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" completed keep alive response.
2025-10-22 21:06:53.929 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 53.467ms
2025-10-22 21:06:54.287 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 21:06:54.287 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 21:06:54.288 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:06:54.298 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:06:54.299 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:06:54.386 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" completed keep alive response.
2025-10-22 21:06:54.386 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 99.8085ms
2025-10-22 21:07:22.529 +02:00 [INF] Application is shutting down...
2025-10-22 21:07:22.533 +02:00 [DBG] Hosting stopping
2025-10-22 21:07:22.560 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" disconnecting.
2025-10-22 21:07:22.561 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" stopped.
2025-10-22 21:07:22.564 +02:00 [DBG] Connection id "0HNGHJOKTBK4L" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 21:07:22.569 +02:00 [DBG] Hosting stopped
2025-10-22 21:08:27.127 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 21:08:27.241 +02:00 [DBG] Hosting starting
2025-10-22 21:08:27.302 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 21:08:27.304 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 21:08:27.316 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 21:08:27.316 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 21:08:27.316 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 21:08:27.317 +02:00 [INF] Hosting environment: Development
2025-10-22 21:08:27.317 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 21:08:27.317 +02:00 [DBG] Hosting started
2025-10-22 21:08:27.403 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" accepted.
2025-10-22 21:08:27.404 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" started.
2025-10-22 21:08:27.424 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 21:08:27.435 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 21:08:27.435 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:08:27.456 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:08:27.458 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 34.6024ms
2025-10-22 21:08:27.709 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 21:08:27.709 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 21:08:27.709 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:08:27.716 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:08:27.718 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:08:27.787 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:08:27.787 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 78.3358ms
2025-10-22 21:08:34.891 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - null null
2025-10-22 21:08:34.906 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/allMeal'
2025-10-22 21:08:34.907 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)' with route pattern 'api/meal/allMeal' is valid for the request path '/api/meal/allMeal'
2025-10-22 21:08:34.908 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 21:08:34.916 +02:00 [WRN] Failed to determine the https port for redirect.
2025-10-22 21:08:34.922 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 21:08:34.941 +02:00 [INF] Route matched with {action = "GetAllMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:08:34.944 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:08:34.944 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:08:34.945 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:08:34.945 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:08:34.945 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:08:34.946 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:08:35.032 +02:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-10-22 21:08:35.124 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software AutoMapper. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-22 21:08:35.125 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:08:35.128 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:08:35.466 +02:00 [DBG] The index {'MealId'} was not created on entity type 'Rating' as the properties are already covered by the index {'MealId', 'UserId'}.
2025-10-22 21:08:35.615 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:08:35.639 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)'
2025-10-22 21:08:35.695 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 21:08:35.865 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Meal entity;
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Meal instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Meal);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Meal)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            MealOption instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(MealOption);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (MealOption)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 21:08:35.892 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:08:35.921 +02:00 [DBG] Created DbConnection. (28ms).
2025-10-22 21:08:35.923 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:36.089 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:36.093 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:08:36.098 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-10-22 21:08:36.100 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 21:08:36.105 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 21:08:36.131 +02:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
2025-10-22 21:08:36.186 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.206 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.210 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.213 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.213 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.213 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.213 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.214 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.214 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:36.218 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:36.226 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 90ms reading results.
2025-10-22 21:08:36.230 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:36.234 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (3ms).
2025-10-22 21:08:36.250 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1118.3181ms.
2025-10-22 21:08:36.253 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:08:36.255 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:08:36.255 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:08:36.255 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:08:36.255 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:08:36.255 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:08:36.287 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api) in 1339.5493ms
2025-10-22 21:08:36.288 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetAllMeals (BistroFoodReview.Api)'
2025-10-22 21:08:36.290 +02:00 [INF] HTTP GET /api/meal/allMeal responded 200 in 1367.4423 ms
2025-10-22 21:08:36.294 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:08:36.296 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:08:36.300 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:36.302 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (2ms).
2025-10-22 21:08:36.303 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/allMeal - 200 null application/json; charset=utf-8 1411.9751ms
2025-10-22 21:08:42.187 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - null null
2025-10-22 21:08:42.194 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/mealOptions'
2025-10-22 21:08:42.195 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)' with route pattern 'api/meal/mealOptions' is valid for the request path '/api/meal/mealOptions'
2025-10-22 21:08:42.195 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 21:08:42.199 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 21:08:42.217 +02:00 [INF] Route matched with {action = "GetMealOptions", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMealOptions() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:08:42.218 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:08:42.219 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:08:42.219 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:08:42.219 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:08:42.220 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:08:42.220 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:08:42.228 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:08:42.230 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:08:42.251 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:08:42.252 +02:00 [DBG] Compiling query expression: 
'DbSet<MealOption>()'
2025-10-22 21:08:42.257 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<MealOption>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: MealOption.Name (string) Required, 1] }
        SELECT m.Id, m.Name
        FROM MealOptions AS m, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        MealOption entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            MealOption instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(MealOption);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (MealOption)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 21:08:42.259 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:08:42.259 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:08:42.259 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:42.260 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:42.261 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:08:42.261 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:08:42.261 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:08:42.261 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 21:08:42.265 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Name"
FROM "MealOptions" AS m
2025-10-22 21:08:42.265 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:42.266 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:42.266 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:42.266 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:42.266 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 1ms reading results.
2025-10-22 21:08:42.267 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:42.267 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:08:42.270 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 38.8898ms.
2025-10-22 21:08:42.270 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:08:42.270 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:08:42.270 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:08:42.270 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:08:42.271 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:08:42.271 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.MealOptionDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:08:42.276 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api) in 55.495ms
2025-10-22 21:08:42.276 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetMealOptions (BistroFoodReview.Api)'
2025-10-22 21:08:42.276 +02:00 [INF] HTTP GET /api/meal/mealOptions responded 200 in 77.1885 ms
2025-10-22 21:08:42.276 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:08:42.276 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:08:42.276 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:42.276 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:08:42.277 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/mealOptions - 200 null application/json; charset=utf-8 90.4462ms
2025-10-22 21:08:48.337 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/topMeal - null null
2025-10-22 21:08:48.338 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/topMeal'
2025-10-22 21:08:48.339 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)' with route pattern 'api/meal/topMeal' is valid for the request path '/api/meal/topMeal'
2025-10-22 21:08:48.339 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 21:08:48.340 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 21:08:48.349 +02:00 [INF] Route matched with {action = "GetTopMeals", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTopMeals() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:08:48.349 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:08:48.349 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:08:48.349 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:08:48.350 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:08:48.350 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:08:48.350 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:08:48.357 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:08:48.357 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:08:48.410 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:08:48.412 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Ratings
        .Any())
    .OrderByDescending(m => m.Ratings
        .Average(r => r.Stars))
    .ThenByDescending(m => m.Ratings.Count)'
2025-10-22 21:08:48.433 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 21:08:48.433 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 21:08:48.493 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r2.Id, r2.MealId, r2.Stars, r2.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r2 ON m.Id == r2.MealId
        WHERE EXISTS (
            SELECT 1
            FROM Ratings AS r
            WHERE (m.Id != NULL) && (m.Id == r.MealId))
        ORDER BY (
            SELECT avg(r0.Stars)
            FROM Ratings AS r0
            WHERE (m.Id != NULL) && (m.Id == r0.MealId)) DESC, (
            SELECT CAST(count(*) AS integer)
            FROM Ratings AS r1
            WHERE (m.Id != NULL) && (m.Id == r1.MealId)) DESC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r2.Id, r2.MealId, r2.Stars, r2.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r2 ON m.Id == r2.MealId
        WHERE EXISTS (
            SELECT 1
            FROM Ratings AS r
            WHERE (m.Id != NULL) && (m.Id == r.MealId))
        ORDER BY (
            SELECT avg(r0.Stars)
            FROM Ratings AS r0
            WHERE (m.Id != NULL) && (m.Id == r0.MealId)) DESC, (
            SELECT CAST(count(*) AS integer)
            FROM Ratings AS r1
            WHERE (m.Id != NULL) && (m.Id == r1.MealId)) DESC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 21:08:48.505 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:08:48.506 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:08:48.506 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:48.506 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:48.506 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:08:48.506 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:08:48.506 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:08:48.506 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r2."Id", r2."MealId", r2."Stars", r2."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r2 ON m."Id" = r2."MealId"
WHERE EXISTS (
    SELECT 1
    FROM "Ratings" AS r
    WHERE m."Id" = r."MealId")
ORDER BY (
    SELECT avg(r0."Stars")
    FROM "Ratings" AS r0
    WHERE m."Id" = r0."MealId") DESC, (
    SELECT count(*)::int
    FROM "Ratings" AS r1
    WHERE m."Id" = r1."MealId") DESC, m."Id", m0."Id"
2025-10-22 21:08:48.518 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r2."Id", r2."MealId", r2."Stars", r2."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r2 ON m."Id" = r2."MealId"
WHERE EXISTS (
    SELECT 1
    FROM "Ratings" AS r
    WHERE m."Id" = r."MealId")
ORDER BY (
    SELECT avg(r0."Stars")
    FROM "Ratings" AS r0
    WHERE m."Id" = r0."MealId") DESC, (
    SELECT count(*)::int
    FROM "Ratings" AS r1
    WHERE m."Id" = r1."MealId") DESC, m."Id", m0."Id"
2025-10-22 21:08:48.519 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.519 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.519 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.531 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.534 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.535 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.535 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:08:48.535 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:48.535 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-10-22 21:08:48.535 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:48.535 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:08:48.539 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 181.6428ms.
2025-10-22 21:08:48.539 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:08:48.539 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:08:48.539 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:08:48.539 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:08:48.539 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:08:48.539 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.TopMealDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:08:48.541 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api) in 191.2215ms
2025-10-22 21:08:48.541 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetTopMeals (BistroFoodReview.Api)'
2025-10-22 21:08:48.541 +02:00 [INF] HTTP GET /api/meal/topMeal responded 200 in 201.6641 ms
2025-10-22 21:08:48.541 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:08:48.541 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:08:48.541 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:08:48.541 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:08:48.542 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/topMeal - 200 null application/json; charset=utf-8 204.6447ms
2025-10-22 21:09:46.977 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - application/json 131
2025-10-22 21:09:46.982 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/createMeal'
2025-10-22 21:09:46.982 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)' with route pattern 'api/meal/createMeal' is valid for the request path '/api/meal/createMeal'
2025-10-22 21:09:46.983 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 21:09:46.989 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 21:09:46.989 +02:00 [INF] CORS policy execution failed.
2025-10-22 21:09:46.990 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 21:09:46.992 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 21:09:47.014 +02:00 [INF] Route matched with {action = "CreateMeal", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateMeal(BistroFoodReview.Api.Models.Dto.CreateMealDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:09:47.016 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:09:47.016 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:09:47.016 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:09:47.016 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:09:47.016 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:09:47.016 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:09:47.017 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:09:47.030 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 21:09:47.035 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' using the name '' in request data ...
2025-10-22 21:09:47.037 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 21:09:47.046 +02:00 [DBG] Connection id "0HNGHJPGQE1BB", Request id "0HNGHJPGQE1BB:00000006": started reading request body.
2025-10-22 21:09:47.046 +02:00 [DBG] Connection id "0HNGHJPGQE1BB", Request id "0HNGHJPGQE1BB:00000006": done reading request body.
2025-10-22 21:09:47.059 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'
2025-10-22 21:09:47.059 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 21:09:47.059 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 21:09:47.059 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto' ...
2025-10-22 21:09:47.068 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.CreateMealDto'.
2025-10-22 21:09:47.069 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:09:47.073 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:09:47.078 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(m => m.MealOptionId == __mealOptionId_0 && m.Date.Date == __mealDate_Date_1)'
2025-10-22 21:09:47.089 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE (m.MealOptionId == @__mealOptionId_0) && (date_trunc('day', m.Date, 'UTC') == @__mealDate_Date_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 21:09:47.098 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:09:47.099 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:09:47.099 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.099 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.099 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:09:47.099 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:09:47.106 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-10-22 21:09:47.110 +02:00 [DBG] Executing DbCommand [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 21:09:47.129 +02:00 [INF] Executed DbCommand (21ms) [Parameters=[@__mealOptionId_0='?' (DbType = Guid), @__mealDate_Date_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."MealOptionId" = @__mealOptionId_0 AND date_trunc('day', m."Date", 'UTC') = @__mealDate_Date_1
LIMIT 1
2025-10-22 21:09:47.130 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.130 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 21:09:47.130 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.130 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:09:47.156 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:09:47.158 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 21:09:47.160 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 21:09:47.168 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 21:09:47.248 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.248 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.250 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:09:47.250 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:09:47.250 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:09:47.250 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 21:09:47.259 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Meals" ("Id", "Date", "EditedMealName", "MealOptionId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 21:09:47.262 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.262 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 21:09:47.265 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.266 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:09:47.274 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:09:47.276 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 21:09:47.276 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 207.0016ms.
2025-10-22 21:09:47.277 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:09:47.277 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:09:47.277 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:09:47.277 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:09:47.277 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:09:47.277 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Domain.Meal'.
2025-10-22 21:09:47.294 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)"] for address (mealId=[5a00c75a-eec9-4056-82ef-689dfa14ab49],action=[CreateMeal],controller=[Meal])
2025-10-22 21:09:47.296 +02:00 [DBG] Successfully processed template api/meal/createMeal for BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) resulting in /api/meal/createMeal and ?mealId=5a00c75a-eec9-4056-82ef-689dfa14ab49
2025-10-22 21:09:47.299 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)"] with result /api/meal/createMeal?mealId=5a00c75a-eec9-4056-82ef-689dfa14ab49
2025-10-22 21:09:47.306 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api) in 289.4265ms
2025-10-22 21:09:47.306 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.CreateMeal (BistroFoodReview.Api)'
2025-10-22 21:09:47.306 +02:00 [INF] HTTP POST /api/meal/createMeal responded 201 in 314.7881 ms
2025-10-22 21:09:47.306 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:09:47.306 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:09:47.306 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:09:47.307 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:09:47.307 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/meal/createMeal - 201 null application/json; charset=utf-8 330.0817ms
2025-10-22 21:10:24.925 +02:00 [INF] Request starting HTTP/1.1 PUT http://localhost:5175/api/meal/editName/5a00c75a-eec9-4056-82ef-689dfa14ab49 - application/json 42
2025-10-22 21:10:24.926 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/editName/5a00c75a-eec9-4056-82ef-689dfa14ab49'
2025-10-22 21:10:24.927 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)' with route pattern 'api/meal/editName/{id:Guid}' is valid for the request path '/api/meal/editName/5a00c75a-eec9-4056-82ef-689dfa14ab49'
2025-10-22 21:10:24.929 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 21:10:24.930 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 21:10:24.930 +02:00 [INF] CORS policy execution failed.
2025-10-22 21:10:24.930 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 21:10:24.931 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 21:10:24.940 +02:00 [INF] Route matched with {action = "UpdateMealName", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateMealName(System.Guid, BistroFoodReview.Api.Models.Dto.UpdateMealNameDto) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:10:24.940 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:10:24.940 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:10:24.940 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:10:24.940 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:10:24.940 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:10:24.940 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:10:24.941 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:10:24.942 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' ...
2025-10-22 21:10:24.943 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' using the name 'id' in request data ...
2025-10-22 21:10:24.943 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 21:10:24.943 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 21:10:24.943 +02:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Guid' ...
2025-10-22 21:10:24.943 +02:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Guid'.
2025-10-22 21:10:24.943 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' ...
2025-10-22 21:10:24.944 +02:00 [DBG] Attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' using the name '' in request data ...
2025-10-22 21:10:24.944 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 21:10:24.945 +02:00 [DBG] Connection id "0HNGHJPGQE1BB", Request id "0HNGHJPGQE1BB:00000007": started reading request body.
2025-10-22 21:10:24.945 +02:00 [DBG] Connection id "0HNGHJPGQE1BB", Request id "0HNGHJPGQE1BB:00000007": done reading request body.
2025-10-22 21:10:24.946 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'
2025-10-22 21:10:24.946 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 21:10:24.946 +02:00 [DBG] Done attempting to bind parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 21:10:24.946 +02:00 [DBG] Attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto' ...
2025-10-22 21:10:24.947 +02:00 [DBG] Done attempting to validate the bound parameter 'dto' of type 'BistroFoodReview.Api.Models.Dto.UpdateMealNameDto'.
2025-10-22 21:10:24.947 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:10:24.954 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:10:24.972 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .FirstOrDefault(e => object.Equals(
        objA: EF.Property<object>(e, "Id"), 
        objB: __p_0))'
2025-10-22 21:10:24.976 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE m.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Meals AS m
            WHERE m.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 21:10:24.979 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:10:24.979 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:10:24.979 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.980 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.980 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:10:24.981 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:10:24.981 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-10-22 21:10:24.982 +02:00 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."Id" = @__p_0
LIMIT 1
2025-10-22 21:10:24.987 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Meals" AS m
WHERE m."Id" = @__p_0
LIMIT 1
2025-10-22 21:10:24.987 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:10:24.987 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.987 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 21:10:24.988 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.988 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:10:24.988 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 21:10:24.988 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 21:10:24.989 +02:00 [DBG] The unchanged property 'Meal.EditedMealName' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-10-22 21:10:24.989 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:10:24.989 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 21:10:24.993 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.994 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.994 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:10:24.994 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:10:24.994 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:10:24.994 +02:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Guid), @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Meals" SET "EditedMealName" = @p0
WHERE "Id" = @p1;
2025-10-22 21:10:24.998 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Meals" SET "EditedMealName" = @p0
WHERE "Id" = @p1;
2025-10-22 21:10:24.998 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.998 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 21:10:24.998 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:24.999 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:10:24.999 +02:00 [DBG] An entity of type 'Meal' tracked by 'BistroReviewDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:10:24.999 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 21:10:24.999 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 51.533ms.
2025-10-22 21:10:24.999 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:10:24.999 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:10:24.999 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:10:25.000 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:10:25.000 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:10:25.000 +02:00 [INF] Executing OkObjectResult, writing value of type 'BistroFoodReview.Api.Models.Domain.Meal'.
2025-10-22 21:10:25.002 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api) in 62.0094ms
2025-10-22 21:10:25.002 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.UpdateMealName (BistroFoodReview.Api)'
2025-10-22 21:10:25.003 +02:00 [INF] HTTP PUT /api/meal/editName/5a00c75a-eec9-4056-82ef-689dfa14ab49 responded 200 in 71.8146 ms
2025-10-22 21:10:25.003 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:10:25.003 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:10:25.003 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:25.004 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:10:25.004 +02:00 [INF] Request finished HTTP/1.1 PUT http://localhost:5175/api/meal/editName/5a00c75a-eec9-4056-82ef-689dfa14ab49 - 200 null application/json; charset=utf-8 79.5699ms
2025-10-22 21:10:53.346 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=last - null null
2025-10-22 21:10:53.348 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/autocomplete'
2025-10-22 21:10:53.348 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)' with route pattern 'api/meal/autocomplete' is valid for the request path '/api/meal/autocomplete'
2025-10-22 21:10:53.349 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 21:10:53.352 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 21:10:53.377 +02:00 [INF] Route matched with {action = "Autocomplete", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Autocomplete(System.String) on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:10:53.377 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:10:53.377 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:10:53.377 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:10:53.378 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:10:53.378 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:10:53.378 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:10:53.379 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:10:53.386 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' ...
2025-10-22 21:10:53.387 +02:00 [DBG] Attempting to bind parameter 'query' of type 'System.String' using the name 'query' in request data ...
2025-10-22 21:10:53.388 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 21:10:53.388 +02:00 [DBG] Done attempting to bind parameter 'query' of type 'System.String'.
2025-10-22 21:10:53.388 +02:00 [DBG] Attempting to validate the bound parameter 'query' of type 'System.String' ...
2025-10-22 21:10:53.388 +02:00 [DBG] Done attempting to validate the bound parameter 'query' of type 'System.String'.
2025-10-22 21:10:53.388 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:10:53.392 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:10:53.395 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Where(m => !(string.IsNullOrEmpty(m.EditedMealName)) && m.EditedMealName.ToLower().Contains(__ToLower_0))
    .Select(m => m.EditedMealName)
    .Distinct()
    .Take(__p_1)'
2025-10-22 21:10:53.420 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-10-22 21:10:53.423 +02:00 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__ToLower_0_contains", 
        value: (object)Invoke(queryContext => NpgsqlSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__ToLower_0", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<string>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT DISTINCT TOP(@__p_1) m.EditedMealName
            FROM Meals AS m
            WHERE (m.EditedMealName IS NOT NULL && (m.EditedMealName != '')) && (lower(m.EditedMealName) LIKE @__ToLower_0_contains)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT DISTINCT TOP(@__p_1) m.EditedMealName
            FROM Meals AS m
            WHERE (m.EditedMealName IS NOT NULL && (m.EditedMealName != '')) && (lower(m.EditedMealName) LIKE @__ToLower_0_contains), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            string value1;
            value1 = dataReader.IsDBNull(0) ? default(string) : dataReader.GetString(0);
            return value1;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-10-22 21:10:53.426 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:10:53.426 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:10:53.426 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:53.426 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:53.427 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:10:53.427 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:10:53.427 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:10:53.427 +02:00 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 21:10:53.440 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ToLower_0_contains='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT m."EditedMealName"
FROM "Meals" AS m
WHERE m."EditedMealName" IS NOT NULL AND m."EditedMealName" <> '' AND lower(m."EditedMealName") LIKE @__ToLower_0_contains
LIMIT @__p_1
2025-10-22 21:10:53.440 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:53.440 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 21:10:53.440 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:53.441 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:10:53.442 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 53.6962ms.
2025-10-22 21:10:53.442 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:10:53.443 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:10:53.443 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:10:53.443 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:10:53.443 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:10:53.444 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.AutoCompleteMealNameDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:10:53.446 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api) in 68.2162ms
2025-10-22 21:10:53.446 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.Autocomplete (BistroFoodReview.Api)'
2025-10-22 21:10:53.446 +02:00 [INF] HTTP GET /api/meal/autocomplete responded 200 in 94.1065 ms
2025-10-22 21:10:53.446 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:10:53.447 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:10:53.447 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:10:53.447 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:10:53.447 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/autocomplete?query=last - 200 null application/json; charset=utf-8 102.129ms
2025-10-22 21:11:02.561 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/Rating/allRatings - null null
2025-10-22 21:11:02.562 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/allRatings'
2025-10-22 21:11:02.563 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)' with route pattern 'api/Rating/allRatings' is valid for the request path '/api/Rating/allRatings'
2025-10-22 21:11:02.563 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 21:11:02.567 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 21:11:02.593 +02:00 [INF] Route matched with {action = "GetAllRatings", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllRatings() on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 21:11:02.594 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:11:02.594 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:11:02.595 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 21:11:02.596 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:11:02.596 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 21:11:02.596 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 21:11:02.598 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 21:11:02.599 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:11:02.611 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:11:02.618 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .Include(r => r.User)'
2025-10-22 21:11:02.621 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 21:11:02.621 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 21:11:02.622 +02:00 [DBG] Including navigation: 'Rating.User'.
2025-10-22 21:11:02.640 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Rating>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            2 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: MealOption.Name (string) Required, 9] }
            3 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: User.FirstName (string) Required, 11], [Property: User.LastName (string) Required, 12] }
        SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, u.Id, u.FirstName, u.LastName
        FROM Ratings AS r
        INNER JOIN Meals AS m ON r.MealId == m.Id
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        INNER JOIN Users AS u ON r.UserId == u.Id, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Rating entity;
        Meal entity;
        MealOption entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Rating instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Rating);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Rating)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                        {
                            return 
                            {
                                Rating instance;
                                instance = new Rating();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Rating)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Meal instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Meal);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Meal)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                        {
                            return 
                            {
                                Meal instance;
                                instance = new Meal();
                                instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Meal)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            MealOption instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(MealOption);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(8) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (MealOption)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                        {
                            return 
                            {
                                MealOption instance;
                                instance = new MealOption();
                                instance.<Id>k__BackingField = dataReader.GetGuid(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(MealOption)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        entity = 
        {
            MaterializationContext materializationContext4;
            IEntityType entityType4;
            User instance4;
            InternalEntityEntry entry4;
            bool hasNullKey4;
            materializationContext4 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance4 = default(User);
            entry4 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey4);
            !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
            {
                entityType4 = entry4.EntityType;
                return instance4 = (User)entry4.Entity;
            } : 
            {
                ISnapshot shadowSnapshot4;
                shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType4 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance4 = switch (entityType4)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(10);
                                instance.<FirstName>k__BackingField = dataReader.GetString(11);
                                instance.<LastName>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext4.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType4, 
                    entity: instance4, 
                    snapshot: shadowSnapshot4);
                return instance4;
            } : default(void);
            return instance4;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
            fixup: (namelessParameter{14}, namelessParameter{15}) => 
            {
                namelessParameter{14}.<MealOption>k__BackingField = namelessParameter{15};
                return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                    entity: namelessParameter{15}, 
                    value: namelessParameter{14}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
            fixup: (namelessParameter{19}, namelessParameter{20}) => 
            {
                namelessParameter{19}.<Meal>k__BackingField = namelessParameter{20};
                return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{20}, 
                    value: namelessParameter{19}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
            fixup: (namelessParameter{24}, namelessParameter{25}) => 
            {
                namelessParameter{24}.<User>k__BackingField = namelessParameter{25};
                return [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{25}, 
                    value: namelessParameter{24}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 21:11:02.650 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:11:02.650 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:11:02.651 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:02.651 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:02.651 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:11:02.651 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:11:02.651 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:11:02.651 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 21:11:02.698 +02:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", u."Id", u."FirstName", u."LastName"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
INNER JOIN "Users" AS u ON r."UserId" = u."Id"
2025-10-22 21:11:02.699 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.701 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.701 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.701 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.701 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.703 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.704 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.706 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.706 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.706 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.706 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.706 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.706 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.707 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.707 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.707 +02:00 [DBG] The navigation 'Rating.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.707 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.707 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.707 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.708 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.708 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.709 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:02.709 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:02.710 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-10-22 21:11:02.710 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:02.710 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:11:02.716 +02:00 [INF] Retrieved 5 ratings from the database
2025-10-22 21:11:02.716 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 116.8945ms.
2025-10-22 21:11:02.716 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:11:02.716 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:11:02.716 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:11:02.717 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:11:02.717 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:11:02.717 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.RatingDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:11:02.722 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api) in 126.2216ms
2025-10-22 21:11:02.723 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.GetAllRatings (BistroFoodReview.Api)'
2025-10-22 21:11:02.723 +02:00 [INF] HTTP GET /api/Rating/allRatings responded 200 in 155.6304 ms
2025-10-22 21:11:02.723 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:11:02.723 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:11:02.723 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:02.723 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:11:02.723 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/Rating/allRatings - 200 null application/json; charset=utf-8 162.9191ms
2025-10-22 21:11:18.400 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/allUsers - null null
2025-10-22 21:11:18.403 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/allUsers'
2025-10-22 21:11:18.404 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)' with route pattern 'api/User/allUsers' is valid for the request path '/api/User/allUsers'
2025-10-22 21:11:18.404 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 21:11:18.408 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 21:11:18.424 +02:00 [INF] Route matched with {action = "GetUsers", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsers() on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 21:11:18.425 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:11:18.425 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:11:18.425 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:11:18.425 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:11:18.425 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:11:18.426 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 21:11:18.427 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 21:11:18.427 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:11:18.435 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:11:18.438 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()'
2025-10-22 21:11:18.443 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
        SELECT u.Id, u.FirstName, u.LastName
        FROM Users AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                instance.<LastName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 21:11:18.445 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:11:18.445 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:11:18.446 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:18.446 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:18.446 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:11:18.446 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:11:18.446 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:11:18.446 +02:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 21:11:18.450 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u."Id", u."FirstName", u."LastName"
FROM "Users" AS u
2025-10-22 21:11:18.453 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:18.454 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:11:18.454 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:18.454 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 21:11:18.454 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:18.454 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:11:18.458 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 30.6513ms.
2025-10-22 21:11:18.458 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:11:18.458 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:11:18.458 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:11:18.458 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:11:18.458 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:11:18.458 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.UserDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:11:18.462 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api) in 36.8324ms
2025-10-22 21:11:18.462 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsers (BistroFoodReview.Api)'
2025-10-22 21:11:18.462 +02:00 [INF] HTTP GET /api/User/allUsers responded 200 in 55.9372 ms
2025-10-22 21:11:18.463 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:11:18.463 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:11:18.463 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:11:18.463 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:11:18.463 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/allUsers - 200 null application/json; charset=utf-8 63.6891ms
2025-10-22 21:12:00.401 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - null null
2025-10-22 21:12:00.402 +02:00 [DBG] 1 candidate(s) found for the request path '/api/meal/dailyMenu'
2025-10-22 21:12:00.403 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)' with route pattern 'api/meal/dailyMenu' is valid for the request path '/api/meal/dailyMenu'
2025-10-22 21:12:00.403 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 21:12:00.405 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 21:12:00.412 +02:00 [INF] Route matched with {action = "GetDailyMealMenu", controller = "Meal"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDailyMealMenu() on controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api).
2025-10-22 21:12:00.412 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:12:00.412 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:12:00.412 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:12:00.412 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:12:00.412 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:12:00.412 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:12:00.413 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.MealController (BistroFoodReview.Api)
2025-10-22 21:12:00.413 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:12:00.417 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:12:00.426 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .Where(m => m.Date.Date == __date_Date_0)
    .OrderBy(m => m.MealOption.Name)'
2025-10-22 21:12:00.429 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 21:12:00.429 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 21:12:00.446 +02:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Meal>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
            1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
            2 -> 0
            3 -> 4
            4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
            5 -> 6
        SELECT m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id, m0.Name, r.Id, r.MealId, r.Stars, r.UserId
        FROM Meals AS m
        INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
        LEFT JOIN Ratings AS r ON m.Id == r.MealId
        WHERE date_trunc('day', m.Date, 'UTC') == @__date_Date_0
        ORDER BY m0.Name ASC, m.Id ASC, m0.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            Meal entity;
            MealOption entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Meal instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Meal);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Meal)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                MealOption instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(MealOption);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (MealOption)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                            {
                                return 
                                {
                                    MealOption instance;
                                    instance = new MealOption();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(MealOption)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            resultContext.Values = new object[]
            { 
                entity, 
                entity 
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                queryContext: queryContext, 
                entity: (Meal)(resultContext.Values[0]), 
                relatedEntity: (MealOption)(resultContext.Values[1]), 
                navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (Meal)(resultContext.Values[0]), 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
            { 
                (object)(Guid?)dataReader.GetGuid(0), 
                (object)(Guid?)dataReader.GetGuid(4) 
            }], 
            selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
            { 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
            }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                Rating entity;
                entity = 
                {
                    MaterializationContext materializationContext3;
                    IEntityType entityType3;
                    Rating instance3;
                    InternalEntityEntry entry3;
                    bool hasNullKey3;
                    materializationContext3 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance3 = default(Rating);
                    entry3 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey3);
                    !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                    {
                        entityType3 = entry3.EntityType;
                        return instance3 = (Rating)entry3.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot3;
                        shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                        instance3 = switch (entityType3)
                        {
                            case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                {
                                    return 
                                    {
                                        Rating instance;
                                        instance = new Rating();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                        instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                        instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext3.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Rating)
                        }
                        ;
                        entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType3, 
                            entity: instance3, 
                            snapshot: shadowSnapshot3);
                        return instance3;
                    } : default(void);
                    return instance3;
                };
                return entity;
            }, 
            inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
            fixup: (namelessParameter{17}, namelessParameter{18}) => 
            {
                [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{18}, 
                    forMaterialization: True);
                return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (Meal)(resultContext.Values[0]) : default(Meal);
    }, 
    contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-10-22 21:12:00.457 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:12:00.458 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:12:00.458 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:00.458 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:00.458 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:12:00.458 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:00.458 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:00.458 +02:00 [DBG] Executing DbCommand [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 21:12:00.472 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[@__date_Date_0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id", m0."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM "Meals" AS m
INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
LEFT JOIN "Ratings" AS r ON m."Id" = r."MealId"
WHERE date_trunc('day', m."Date", 'UTC') = @__date_Date_0
ORDER BY m0."Name", m."Id", m0."Id"
2025-10-22 21:12:00.474 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.475 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.475 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.477 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.478 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.478 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:00.478 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:00.478 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-10-22 21:12:00.478 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:00.478 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:12:00.483 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 69.7372ms.
2025-10-22 21:12:00.483 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:12:00.484 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:12:00.484 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:12:00.484 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:12:00.484 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:12:00.484 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[BistroFoodReview.Api.Models.Dto.DailyMealMenuDto, BistroFoodReview.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-22 21:12:00.487 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api) in 75.5067ms
2025-10-22 21:12:00.488 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.MealController.GetDailyMealMenu (BistroFoodReview.Api)'
2025-10-22 21:12:00.488 +02:00 [INF] HTTP GET /api/meal/dailyMenu responded 200 in 83.0035 ms
2025-10-22 21:12:00.488 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:12:00.488 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:12:00.488 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:00.488 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:12:00.488 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/meal/dailyMenu - 200 null application/json; charset=utf-8 87.7768ms
2025-10-22 21:12:54.204 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - application/json 122
2025-10-22 21:12:54.211 +02:00 [DBG] 1 candidate(s) found for the request path '/api/Rating/saveRating'
2025-10-22 21:12:54.211 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)' with route pattern 'api/Rating/saveRating' is valid for the request path '/api/Rating/saveRating'
2025-10-22 21:12:54.211 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 21:12:54.212 +02:00 [DBG] The request has an origin header: 'http://localhost:5175'.
2025-10-22 21:12:54.213 +02:00 [INF] CORS policy execution failed.
2025-10-22 21:12:54.213 +02:00 [INF] Request origin http://localhost:5175 does not have permission to access the resource.
2025-10-22 21:12:54.217 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 21:12:54.224 +02:00 [INF] Route matched with {action = "SaveRating", controller = "Rating"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SaveRating(BistroFoodReview.Api.Models.Dto.CreateRatingDto) on controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api).
2025-10-22 21:12:54.225 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:12:54.225 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:12:54.225 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-10-22 21:12:54.225 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:12:54.225 +02:00 [DBG] Execution plan of result filters (in the following order): ["None"]
2025-10-22 21:12:54.225 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 21:12:54.230 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.RatingController (BistroFoodReview.Api)
2025-10-22 21:12:54.231 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 21:12:54.232 +02:00 [DBG] Attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' using the name '' in request data ...
2025-10-22 21:12:54.233 +02:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-10-22 21:12:54.237 +02:00 [DBG] Connection id "0HNGHJPGQE1BB", Request id "0HNGHJPGQE1BB:0000000C": started reading request body.
2025-10-22 21:12:54.237 +02:00 [DBG] Connection id "0HNGHJPGQE1BB", Request id "0HNGHJPGQE1BB:0000000C": done reading request body.
2025-10-22 21:12:54.250 +02:00 [DBG] JSON input formatter succeeded, deserializing to type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'
2025-10-22 21:12:54.250 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 21:12:54.251 +02:00 [DBG] Done attempting to bind parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 21:12:54.251 +02:00 [DBG] Attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto' ...
2025-10-22 21:12:54.262 +02:00 [DBG] Done attempting to validate the bound parameter 'createRatingDto' of type 'BistroFoodReview.Api.Models.Dto.CreateRatingDto'.
2025-10-22 21:12:54.263 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:12:54.275 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:12:54.276 +02:00 [DBG] Compiling query expression: 
'DbSet<Meal>()
    .Include(m => m.MealOption)
    .Include(m => m.Ratings)
    .FirstOrDefault(m => m.Id == __id_0)'
2025-10-22 21:12:54.277 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 21:12:54.278 +02:00 [DBG] Including navigation: 'Meal.Ratings'.
2025-10-22 21:12:54.296 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Meal>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Meal>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Meal.Date (DateTime) Required, 1], [Property: Meal.EditedMealName (string), 2], [Property: Meal.MealOptionId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: MealOption.Name (string) Required, 5] }
                2 -> 0
                3 -> 4
                4 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Rating.MealId (Guid) Required FK Index, 7], [Property: Rating.Stars (double) Required, 8], [Property: Rating.UserId (Guid) Required FK Index, 9] }
                5 -> 6
            SELECT s.Id, s.Date, s.EditedMealName, s.MealOptionId, s.Id0, s.Name, r.Id, r.MealId, r.Stars, r.UserId
            FROM 
            (
                SELECT TOP(1) m.Id, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id0, m0.Name
                FROM Meals AS m
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
                WHERE m.Id == @__id_0
            ) AS s
            LEFT JOIN Ratings AS r ON s.Id == r.MealId
            ORDER BY s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Meal entity;
                MealOption entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Meal instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Meal);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Meal)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                {
                                    return 
                                    {
                                        Meal instance;
                                        instance = new Meal();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<Date>k__BackingField = dataReader.GetDateTime(1);
                                        instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(2) ? default(string) : dataReader.GetString(2);
                                        instance.<MealOptionId>k__BackingField = dataReader.GetGuid(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Meal)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    MealOption instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(MealOption);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (MealOption)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                {
                                    return 
                                    {
                                        MealOption instance;
                                        instance = new MealOption();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                        instance.<Name>k__BackingField = dataReader.GetString(5);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(MealOption)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                    queryContext: queryContext, 
                    entity: (Meal)(resultContext.Values[0]), 
                    relatedEntity: (MealOption)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                    inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                    fixup: (namelessParameter{8}, namelessParameter{9}) => 
                    {
                        namelessParameter{8}.<MealOption>k__BackingField = namelessParameter{9};
                        return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                            entity: namelessParameter{9}, 
                            value: namelessParameter{8}, 
                            forMaterialization: True);
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Meal, Meal>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Meal)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(Guid?)dataReader.GetGuid(0), 
                        (object)(Guid?)dataReader.GetGuid(4) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Meal, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(Guid?)dataReader.GetGuid(0), 
                    (object)(Guid?)dataReader.GetGuid(4) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(6) ? default(Guid?) : (Guid?)dataReader.GetGuid(6) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Rating instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Rating);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(6) ? default(object) : (object)dataReader.GetGuid(6) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Rating)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(8) ? default(double) : dataReader.GetDouble(8);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(9) ? default(Guid) : dataReader.GetGuid(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                fixup: (namelessParameter{17}, namelessParameter{18}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{18}, 
                        forMaterialization: True);
                    return namelessParameter{18}.<Meal>k__BackingField = namelessParameter{17};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Meal)(resultContext.Values[0]) : default(Meal);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 21:12:54.308 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:12:54.308 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:12:54.308 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.309 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.309 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:12:54.309 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:54.309 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:54.309 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 21:12:54.317 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Id", s."Date", s."EditedMealName", s."MealOptionId", s."Id0", s."Name", r."Id", r."MealId", r."Stars", r."UserId"
FROM (
    SELECT m."Id", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id0", m0."Name"
    FROM "Meals" AS m
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
    WHERE m."Id" = @__id_0
    LIMIT 1
) AS s
LEFT JOIN "Ratings" AS r ON s."Id" = r."MealId"
ORDER BY s."Id", s."Id0"
2025-10-22 21:12:54.318 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.318 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.318 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.319 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.320 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.320 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 2ms reading results.
2025-10-22 21:12:54.320 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.320 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:12:54.322 +02:00 [DBG] Compiling query expression: 
'DbSet<Rating>()
    .Include(r => r.Meal)
    .FirstOrDefault(r => r.UserId == __userId_0 && r.Meal.MealOptionId == __mealOptionId_1 && r.Meal.Date.Date == DateTime.UtcNow.Date)'
2025-10-22 21:12:54.323 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 21:12:54.328 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Rating>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Rating>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC'))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Rating.MealId (Guid) Required FK Index, 1], [Property: Rating.Stars (double) Required, 2], [Property: Rating.UserId (Guid) Required FK Index, 3] }
                1 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: Meal.Date (DateTime) Required, 5], [Property: Meal.EditedMealName (string), 6], [Property: Meal.MealOptionId (Guid) Required FK Index, 7] }
            SELECT TOP(1) r.Id, r.MealId, r.Stars, r.UserId, m.Id, m.Date, m.EditedMealName, m.MealOptionId
            FROM Ratings AS r
            INNER JOIN Meals AS m ON r.MealId == m.Id
            WHERE ((r.UserId == @__userId_0) && (m.MealOptionId == @__mealOptionId_1)) && (date_trunc('day', m.Date, 'UTC') == date_trunc('day', now(), 'UTC')), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Rating entity;
            Meal entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Rating instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Rating);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Rating)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                            {
                                return 
                                {
                                    Rating instance;
                                    instance = new Rating();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                    instance.<MealId>k__BackingField = dataReader.GetGuid(1);
                                    instance.<Stars>k__BackingField = dataReader.GetDouble(2);
                                    instance.<UserId>k__BackingField = dataReader.GetGuid(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Rating)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Meal instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Meal);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetGuid(4) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Meal)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                            {
                                return 
                                {
                                    Meal instance;
                                    instance = new Meal();
                                    instance.<Id>k__BackingField = dataReader.GetGuid(4);
                                    instance.<Date>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<MealOptionId>k__BackingField = dataReader.GetGuid(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Meal)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Meal>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 21:12:54.331 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.331 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.331 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:12:54.331 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:54.332 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:54.332 +02:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 21:12:54.339 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__mealOptionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id", m."Date", m."EditedMealName", m."MealOptionId"
FROM "Ratings" AS r
INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
WHERE r."UserId" = @__userId_0 AND m."MealOptionId" = @__mealOptionId_1 AND date_trunc('day', m."Date", 'UTC') = date_trunc('day', now(), 'UTC')
LIMIT 1
2025-10-22 21:12:54.339 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.339 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 21:12:54.339 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.339 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:12:54.345 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.346 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.346 +02:00 [DBG] SaveChanges starting for 'BistroReviewDbContext'.
2025-10-22 21:12:54.346 +02:00 [DBG] DetectChanges starting for 'BistroReviewDbContext'.
2025-10-22 21:12:54.355 +02:00 [DBG] DetectChanges completed for 'BistroReviewDbContext'.
2025-10-22 21:12:54.357 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.357 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.357 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:12:54.357 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:54.357 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:12:54.357 +02:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 21:12:54.363 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Double), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Ratings" ("Id", "MealId", "Stars", "UserId")
VALUES (@p0, @p1, @p2, @p3);
2025-10-22 21:12:54.363 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.363 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-10-22 21:12:54.363 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.363 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:12:54.364 +02:00 [DBG] An entity of type 'Rating' tracked by 'BistroReviewDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:12:54.364 +02:00 [DBG] SaveChanges completed for 'BistroReviewDbContext' with 1 entities written to the database.
2025-10-22 21:12:54.366 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 102.9721ms.
2025-10-22 21:12:54.366 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:12:54.366 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:12:54.366 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:12:54.366 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:12:54.366 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:12:54.366 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'BistroFoodReview.Api.Models.Dto.RatingDto'.
2025-10-22 21:12:54.369 +02:00 [DBG] Found the endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] for address (id=[57a8a7f4-4a90-4b80-afbe-cccbd418dd1a],action=[SaveRating],controller=[Rating])
2025-10-22 21:12:54.370 +02:00 [DBG] Successfully processed template api/Rating/saveRating for BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) resulting in /api/Rating/saveRating and ?id=57a8a7f4-4a90-4b80-afbe-cccbd418dd1a
2025-10-22 21:12:54.371 +02:00 [DBG] Link generation succeeded for endpoints ["BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)"] with result /api/Rating/saveRating?id=57a8a7f4-4a90-4b80-afbe-cccbd418dd1a
2025-10-22 21:12:54.371 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api) in 145.88ms
2025-10-22 21:12:54.371 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.RatingController.SaveRating (BistroFoodReview.Api)'
2025-10-22 21:12:54.371 +02:00 [INF] HTTP POST /api/Rating/saveRating responded 201 in 154.3643 ms
2025-10-22 21:12:54.371 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:12:54.372 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:12:54.372 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:12:54.372 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:12:54.372 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5175/api/Rating/saveRating - 201 null application/json; charset=utf-8 168.1774ms
2025-10-22 21:13:23.667 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/userWithRatings/b0d92446-c1d4-4ae1-a17f-c46f01bdcecf - null null
2025-10-22 21:13:23.672 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/userWithRatings/b0d92446-c1d4-4ae1-a17f-c46f01bdcecf'
2025-10-22 21:13:23.672 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)' with route pattern 'api/User/userWithRatings/{id}' is valid for the request path '/api/User/userWithRatings/b0d92446-c1d4-4ae1-a17f-c46f01bdcecf'
2025-10-22 21:13:23.673 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)'
2025-10-22 21:13:23.675 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)'
2025-10-22 21:13:23.693 +02:00 [INF] Route matched with {action = "GetUsersWithRatingsById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsersWithRatingsById(System.Guid) on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 21:13:23.693 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:13:23.693 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:13:23.693 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:13:23.693 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:13:23.693 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:13:23.693 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 21:13:23.697 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 21:13:23.697 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' ...
2025-10-22 21:13:23.698 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' using the name 'id' in request data ...
2025-10-22 21:13:23.701 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 21:13:23.701 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 21:13:23.701 +02:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Guid' ...
2025-10-22 21:13:23.702 +02:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Guid'.
2025-10-22 21:13:23.702 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:13:23.710 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:13:23.713 +02:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Include(u => u.Ratings)
    .ThenInclude(r => r.Meal)
    .ThenInclude(m => m.MealOption)
    .FirstOrDefault(u => u.Id == __id_0)'
2025-10-22 21:13:23.714 +02:00 [DBG] Including navigation: 'User.Ratings'.
2025-10-22 21:13:23.714 +02:00 [DBG] Including navigation: 'Rating.Meal'.
2025-10-22 21:13:23.714 +02:00 [DBG] Including navigation: 'Meal.MealOption'.
2025-10-22 21:13:23.744 +02:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: Rating.MealId (Guid) Required FK Index, 4], [Property: Rating.Stars (double) Required, 5], [Property: Rating.UserId (Guid) Required FK Index, 6] }
                3 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Meal.Date (DateTime) Required, 8], [Property: Meal.EditedMealName (string), 9], [Property: Meal.MealOptionId (Guid) Required FK Index, 10] }
                4 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: MealOption.Name (string) Required, 12] }
                5 -> 3
                6 -> 7
                7 -> 11
            SELECT u0.Id, u0.FirstName, u0.LastName, s.Id, s.MealId, s.Stars, s.UserId, s.Id0, s.Date, s.EditedMealName, s.MealOptionId, s.Id1, s.Name
            FROM 
            (
                SELECT TOP(1) u.Id, u.FirstName, u.LastName
                FROM Users AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN 
            (
                SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id AS Id0, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id1, m0.Name
                FROM Ratings AS r
                INNER JOIN Meals AS m ON r.MealId == m.Id
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
            ) AS s ON u0.Id == s.UserId
            ORDER BY u0.Id ASC, s.Id ASC, s.Id0 ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.FirstName (string) Required, 1], [Property: User.LastName (string) Required, 2] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: Rating.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 3], [Property: Rating.MealId (Guid) Required FK Index, 4], [Property: Rating.Stars (double) Required, 5], [Property: Rating.UserId (Guid) Required FK Index, 6] }
                3 -> Dictionary<IProperty, int> { [Property: Meal.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 7], [Property: Meal.Date (DateTime) Required, 8], [Property: Meal.EditedMealName (string), 9], [Property: Meal.MealOptionId (Guid) Required FK Index, 10] }
                4 -> Dictionary<IProperty, int> { [Property: MealOption.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: MealOption.Name (string) Required, 12] }
                5 -> 3
                6 -> 7
                7 -> 11
            SELECT u0.Id, u0.FirstName, u0.LastName, s.Id, s.MealId, s.Stars, s.UserId, s.Id0, s.Date, s.EditedMealName, s.MealOptionId, s.Id1, s.Name
            FROM 
            (
                SELECT TOP(1) u.Id, u.FirstName, u.LastName
                FROM Users AS u
                WHERE u.Id == @__id_0
            ) AS u0
            LEFT JOIN 
            (
                SELECT r.Id, r.MealId, r.Stars, r.UserId, m.Id AS Id0, m.Date, m.EditedMealName, m.MealOptionId, m0.Id AS Id1, m0.Name
                FROM Ratings AS r
                INNER JOIN Meals AS m ON r.MealId == m.Id
                INNER JOIN MealOptions AS m0 ON m.MealOptionId == m0.Id
            ) AS s ON u0.Id == s.UserId
            ORDER BY u0.Id ASC, s.Id ASC, s.Id0 ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                User entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    User instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(User);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetGuid(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (User)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]: 
                                {
                                    return 
                                    {
                                        User instance;
                                        instance = new User();
                                        instance.<Id>k__BackingField = dataReader.GetGuid(0);
                                        instance.<FirstName>k__BackingField = dataReader.GetString(1);
                                        instance.<LastName>k__BackingField = dataReader.GetString(2);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(User)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (User)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: User.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: User | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, Rating>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(Guid?)dataReader.GetGuid(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(3) ? default(Guid?) : (Guid?)dataReader.GetGuid(3), 
                    (object)dataReader.IsDBNull(7) ? default(Guid?) : (Guid?)dataReader.GetGuid(7), 
                    (object)dataReader.IsDBNull(11) ? default(Guid?) : (Guid?)dataReader.GetGuid(11) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right, 
                    (left, right) => left == null ? right == null : right != null && (Guid)left == (Guid)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    Rating entity;
                    Meal entity;
                    MealOption entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        Rating instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(Rating);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Rating.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(3) ? default(object) : (object)dataReader.GetGuid(3) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (Rating)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]: 
                                    {
                                        return 
                                        {
                                            Rating instance;
                                            instance = new Rating();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(3) ? default(Guid) : dataReader.GetGuid(3);
                                            instance.<MealId>k__BackingField = dataReader.IsDBNull(4) ? default(Guid) : dataReader.GetGuid(4);
                                            instance.<Stars>k__BackingField = dataReader.IsDBNull(5) ? default(double) : dataReader.GetDouble(5);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(Guid) : dataReader.GetGuid(6);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Rating | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Rating)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Meal instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Meal);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Meal.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(7) ? default(object) : (object)dataReader.GetGuid(7) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Meal)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]: 
                                    {
                                        return 
                                        {
                                            Meal instance;
                                            instance = new Meal();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(7) ? default(Guid) : dataReader.GetGuid(7);
                                            instance.<Date>k__BackingField = dataReader.IsDBNull(8) ? default(DateTime) : dataReader.GetDateTime(8);
                                            instance.<EditedMealName>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            instance.<MealOptionId>k__BackingField = dataReader.IsDBNull(10) ? default(Guid) : dataReader.GetGuid(10);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Meal | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Meal)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        MealOption instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(MealOption);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: MealOption.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(11) ? default(object) : (object)dataReader.GetGuid(11) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (MealOption)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]: 
                                    {
                                        return 
                                        {
                                            MealOption instance;
                                            instance = new MealOption();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(11) ? default(Guid) : dataReader.GetGuid(11);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: MealOption | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(MealOption)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<Meal, Meal, MealOption>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: Meal.MealOption (MealOption) ToPrincipal MealOption Inverse: Meals | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("MealOption")], 
                        inverseNavigation: [LIFTABLE Constant: Navigation: MealOption.Meals (ICollection<Meal>) Collection ToDependent Meal Inverse: MealOption | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals")], 
                        fixup: (namelessParameter{16}, namelessParameter{17}) => 
                        {
                            namelessParameter{16}.<MealOption>k__BackingField = namelessParameter{17};
                            return [LIFTABLE Constant: ClrICollectionAccessor<MealOption, ICollection<Meal>, Meal> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.MealOption").FindNavigation("Meals").GetCollectionAccessor()].Add(
                                entity: namelessParameter{17}, 
                                value: namelessParameter{16}, 
                                forMaterialization: True);
                        }, 
                        trackingQuery: True);
                    ShaperProcessingExpressionVisitor.IncludeReference<Rating, Rating, Meal>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: Rating.Meal (Meal) ToPrincipal Meal Inverse: Ratings | Resolver: namelessParameter{19} => namelessParameter{19}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("Meal")], 
                        inverseNavigation: [LIFTABLE Constant: Navigation: Meal.Ratings (ICollection<Rating>) Collection ToDependent Rating Inverse: Meal | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings")], 
                        fixup: (namelessParameter{21}, namelessParameter{22}) => 
                        {
                            namelessParameter{21}.<Meal>k__BackingField = namelessParameter{22};
                            return [LIFTABLE Constant: ClrICollectionAccessor<Meal, ICollection<Rating>, Rating> | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Meal").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                                entity: namelessParameter{22}, 
                                value: namelessParameter{21}, 
                                forMaterialization: True);
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: Rating.User (User) ToPrincipal User Inverse: Ratings | Resolver: namelessParameter{24} => namelessParameter{24}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.Rating").FindNavigation("User")], 
                fixup: (namelessParameter{25}, namelessParameter{26}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<User, ICollection<Rating>, Rating> | Resolver: namelessParameter{27} => namelessParameter{27}.Dependencies.Model.FindEntityType("BistroFoodReview.Api.Models.Domain.User").FindNavigation("Ratings").GetCollectionAccessor()].Add(
                        entity: namelessParameter{25}, 
                        value: namelessParameter{26}, 
                        forMaterialization: True);
                    return namelessParameter{26}.<User>k__BackingField = namelessParameter{25};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (User)(resultContext.Values[0]) : default(User);
        }, 
        contextType: BistroFoodReview.Api.Data.BistroReviewDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-10-22 21:13:23.750 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:13:23.750 +02:00 [DBG] Created DbConnection. (0ms).
2025-10-22 21:13:23.750 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:23.750 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:23.750 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:13:23.750 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:13:23.750 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:13:23.751 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u0."Id", u0."FirstName", u0."LastName", s."Id", s."MealId", s."Stars", s."UserId", s."Id0", s."Date", s."EditedMealName", s."MealOptionId", s."Id1", s."Name"
FROM (
    SELECT u."Id", u."FirstName", u."LastName"
    FROM "Users" AS u
    WHERE u."Id" = @__id_0
    LIMIT 1
) AS u0
LEFT JOIN (
    SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id" AS "Id0", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id1", m0."Name"
    FROM "Ratings" AS r
    INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
) AS s ON u0."Id" = s."UserId"
ORDER BY u0."Id", s."Id", s."Id0"
2025-10-22 21:13:23.757 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u0."Id", u0."FirstName", u0."LastName", s."Id", s."MealId", s."Stars", s."UserId", s."Id0", s."Date", s."EditedMealName", s."MealOptionId", s."Id1", s."Name"
FROM (
    SELECT u."Id", u."FirstName", u."LastName"
    FROM "Users" AS u
    WHERE u."Id" = @__id_0
    LIMIT 1
) AS u0
LEFT JOIN (
    SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id" AS "Id0", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id1", m0."Name"
    FROM "Ratings" AS r
    INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
) AS s ON u0."Id" = s."UserId"
ORDER BY u0."Id", s."Id", s."Id0"
2025-10-22 21:13:23.758 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.761 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.762 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:23.762 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:23.762 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-10-22 21:13:23.762 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:23.762 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:13:23.765 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 63.0206ms.
2025-10-22 21:13:23.765 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:13:23.765 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:13:23.765 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:13:23.765 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:13:23.765 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:13:23.766 +02:00 [INF] Executing OkObjectResult, writing value of type 'BistroFoodReview.Api.Models.Dto.UserWithRatingsDto'.
2025-10-22 21:13:23.768 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api) in 74.8932ms
2025-10-22 21:13:23.768 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)'
2025-10-22 21:13:23.768 +02:00 [INF] HTTP GET /api/User/userWithRatings/b0d92446-c1d4-4ae1-a17f-c46f01bdcecf responded 200 in 93.8505 ms
2025-10-22 21:13:23.769 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:13:23.769 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:13:23.769 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:23.769 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:13:23.769 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/userWithRatings/b0d92446-c1d4-4ae1-a17f-c46f01bdcecf - 200 null application/json; charset=utf-8 102.352ms
2025-10-22 21:13:55.175 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/api/User/userWithRatings/61633797-fe81-4948-87ae-db86babfeba1 - null null
2025-10-22 21:13:55.176 +02:00 [DBG] 1 candidate(s) found for the request path '/api/User/userWithRatings/61633797-fe81-4948-87ae-db86babfeba1'
2025-10-22 21:13:55.177 +02:00 [DBG] Endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)' with route pattern 'api/User/userWithRatings/{id}' is valid for the request path '/api/User/userWithRatings/61633797-fe81-4948-87ae-db86babfeba1'
2025-10-22 21:13:55.177 +02:00 [DBG] Request matched endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)'
2025-10-22 21:13:55.180 +02:00 [INF] Executing endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)'
2025-10-22 21:13:55.182 +02:00 [INF] Route matched with {action = "GetUsersWithRatingsById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUsersWithRatingsById(System.Guid) on controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api).
2025-10-22 21:13:55.183 +02:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-10-22 21:13:55.183 +02:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-10-22 21:13:55.184 +02:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-10-22 21:13:55.184 +02:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-10-22 21:13:55.184 +02:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-10-22 21:13:55.185 +02:00 [DBG] Executing controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 21:13:55.192 +02:00 [DBG] Executed controller factory for controller BistroFoodReview.Api.Controllers.UserController (BistroFoodReview.Api)
2025-10-22 21:13:55.193 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' ...
2025-10-22 21:13:55.193 +02:00 [DBG] Attempting to bind parameter 'id' of type 'System.Guid' using the name 'id' in request data ...
2025-10-22 21:13:55.193 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 21:13:55.193 +02:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Guid'.
2025-10-22 21:13:55.193 +02:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Guid' ...
2025-10-22 21:13:55.193 +02:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Guid'.
2025-10-22 21:13:55.194 +02:00 [INF] Executing action method BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api) - Validation state: "Valid"
2025-10-22 21:13:55.199 +02:00 [DBG] Entity Framework Core 9.0.10 initialized 'BistroReviewDbContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: None
2025-10-22 21:13:55.213 +02:00 [DBG] Creating DbConnection.
2025-10-22 21:13:55.217 +02:00 [DBG] Created DbConnection. (4ms).
2025-10-22 21:13:55.218 +02:00 [DBG] Opening connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:55.253 +02:00 [DBG] Opened connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:55.254 +02:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-10-22 21:13:55.254 +02:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:13:55.254 +02:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-10-22 21:13:55.254 +02:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u0."Id", u0."FirstName", u0."LastName", s."Id", s."MealId", s."Stars", s."UserId", s."Id0", s."Date", s."EditedMealName", s."MealOptionId", s."Id1", s."Name"
FROM (
    SELECT u."Id", u."FirstName", u."LastName"
    FROM "Users" AS u
    WHERE u."Id" = @__id_0
    LIMIT 1
) AS u0
LEFT JOIN (
    SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id" AS "Id0", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id1", m0."Name"
    FROM "Ratings" AS r
    INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
) AS s ON u0."Id" = s."UserId"
ORDER BY u0."Id", s."Id", s."Id0"
2025-10-22 21:13:55.280 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT u0."Id", u0."FirstName", u0."LastName", s."Id", s."MealId", s."Stars", s."UserId", s."Id0", s."Date", s."EditedMealName", s."MealOptionId", s."Id1", s."Name"
FROM (
    SELECT u."Id", u."FirstName", u."LastName"
    FROM "Users" AS u
    WHERE u."Id" = @__id_0
    LIMIT 1
) AS u0
LEFT JOIN (
    SELECT r."Id", r."MealId", r."Stars", r."UserId", m."Id" AS "Id0", m."Date", m."EditedMealName", m."MealOptionId", m0."Id" AS "Id1", m0."Name"
    FROM "Ratings" AS r
    INNER JOIN "Meals" AS m ON r."MealId" = m."Id"
    INNER JOIN "MealOptions" AS m0 ON m."MealOptionId" = m0."Id"
) AS s ON u0."Id" = s."UserId"
ORDER BY u0."Id", s."Id", s."Id0"
2025-10-22 21:13:55.284 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.286 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.286 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.286 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.286 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.287 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.287 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.288 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.288 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.289 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Rating' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.289 +02:00 [DBG] The navigation 'Rating.Meal' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.289 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'Meal' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.289 +02:00 [DBG] The navigation 'Meal.MealOption' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.289 +02:00 [DBG] Context 'BistroReviewDbContext' started tracking 'MealOption' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-10-22 21:13:55.289 +02:00 [DBG] Closing data reader to 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:55.289 +02:00 [DBG] A data reader for 'bistrodb' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-10-22 21:13:55.289 +02:00 [DBG] Closing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:55.290 +02:00 [DBG] Closed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:13:55.292 +02:00 [INF] Executed action method BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 97.7792ms.
2025-10-22 21:13:55.292 +02:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-10-22 21:13:55.292 +02:00 [DBG] No information found on request to perform content negotiation.
2025-10-22 21:13:55.292 +02:00 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-10-22 21:13:55.292 +02:00 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-10-22 21:13:55.292 +02:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-10-22 21:13:55.292 +02:00 [INF] Executing OkObjectResult, writing value of type 'BistroFoodReview.Api.Models.Dto.UserWithRatingsDto'.
2025-10-22 21:13:55.293 +02:00 [INF] Executed action BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api) in 108.0999ms
2025-10-22 21:13:55.293 +02:00 [INF] Executed endpoint 'BistroFoodReview.Api.Controllers.UserController.GetUsersWithRatingsById (BistroFoodReview.Api)'
2025-10-22 21:13:55.293 +02:00 [INF] HTTP GET /api/User/userWithRatings/61633797-fe81-4948-87ae-db86babfeba1 responded 200 in 113.1166 ms
2025-10-22 21:13:55.293 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" completed keep alive response.
2025-10-22 21:13:55.293 +02:00 [DBG] 'BistroReviewDbContext' disposed.
2025-10-22 21:13:55.293 +02:00 [DBG] Disposing connection to database 'bistrodb' on server 'tcp://localhost:5432'.
2025-10-22 21:13:55.293 +02:00 [DBG] Disposed connection to database 'bistrodb' on server 'tcp://localhost:5432' (0ms).
2025-10-22 21:13:55.293 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/api/User/userWithRatings/61633797-fe81-4948-87ae-db86babfeba1 - 200 null application/json; charset=utf-8 120.6816ms
2025-10-22 21:14:02.419 +02:00 [INF] Application is shutting down...
2025-10-22 21:14:02.428 +02:00 [DBG] Hosting stopping
2025-10-22 21:14:02.494 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" disconnecting.
2025-10-22 21:14:02.496 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" stopped.
2025-10-22 21:14:02.507 +02:00 [DBG] Connection id "0HNGHJPGQE1BB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 21:14:02.520 +02:00 [DBG] Hosting stopped
2025-10-22 21:18:20.708 +02:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-10-22 21:18:20.813 +02:00 [DBG] Hosting starting
2025-10-22 21:18:20.865 +02:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-10-22 21:18:20.867 +02:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-10-22 21:18:20.889 +02:00 [INF] Now listening on: http://localhost:5175
2025-10-22 21:18:20.889 +02:00 [DBG] Loaded hosting startup assembly BistroFoodReview.Api
2025-10-22 21:18:20.889 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-22 21:18:20.890 +02:00 [INF] Hosting environment: Development
2025-10-22 21:18:20.890 +02:00 [INF] Content root path: /Users/habiburrahman/Projects/ProblemSolvingProject/BistroFoodReview.Api/BistroFoodReview.Api
2025-10-22 21:18:20.890 +02:00 [DBG] Hosting started
2025-10-22 21:18:21.124 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" accepted.
2025-10-22 21:18:21.124 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" started.
2025-10-22 21:18:21.140 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger - null null
2025-10-22 21:18:21.153 +02:00 [DBG] No candidates found for the request path '/swagger'
2025-10-22 21:18:21.154 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:18:21.173 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" completed keep alive response.
2025-10-22 21:18:21.175 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger - 301 0 null 35.5945ms
2025-10-22 21:18:21.479 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - null null
2025-10-22 21:18:21.480 +02:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-10-22 21:18:21.480 +02:00 [DBG] Request did not match any endpoints
2025-10-22 21:18:21.494 +02:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:18:21.494 +02:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-10-22 21:18:21.583 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" completed keep alive response.
2025-10-22 21:18:21.583 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5175/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.0778ms
2025-10-22 21:18:28.972 +02:00 [INF] Application is shutting down...
2025-10-22 21:18:28.985 +02:00 [DBG] Hosting stopping
2025-10-22 21:18:29.012 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" disconnecting.
2025-10-22 21:18:29.014 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" stopped.
2025-10-22 21:18:29.017 +02:00 [DBG] Connection id "0HNGHJV1OJ9SN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-10-22 21:18:29.023 +02:00 [DBG] Hosting stopped
