// <auto-generated />
using System;
using BistroFoodReview.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BistroFoodReview.Api.Migrations
{
    [DbContext(typeof(BistroReviewDbContext))]
    [Migration("20251022132215_ChangeStarsToDouble")]
    partial class ChangeStarsToDouble
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EditedMealName")
                        .HasColumnType("text");

                    b.Property<Guid>("MealOptionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MealOptionId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.MealOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MealOptions");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uuid");

                    b.Property<double>("Stars")
                        .HasColumnType("double precision");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("MealId", "UserId")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.Meal", b =>
                {
                    b.HasOne("BistroFoodReview.Api.Models.Domain.MealOption", "MealOption")
                        .WithMany("Meals")
                        .HasForeignKey("MealOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MealOption");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.Rating", b =>
                {
                    b.HasOne("BistroFoodReview.Api.Models.Domain.Meal", "Meal")
                        .WithMany("Ratings")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BistroFoodReview.Api.Models.Domain.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.Meal", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.MealOption", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("BistroFoodReview.Api.Models.Domain.User", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
